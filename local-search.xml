<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Koishi从0入门 03 编写签到插件</title>
    <link href="/2025/06/14/koishi_teach_03/"/>
    <url>/2025/06/14/koishi_teach_03/</url>
    
    <content type="html"><![CDATA[<h2 id="前言">前言</h2><p>在上一篇教程中，我们学习了如何调用api发送消息，以及发送不同的消息类型，那我们今天来实战写一个签到插件</p><p>签到插件的原理就是写入今天的时间，如果判断上一次签到时间和今天是一致的，那就签到失败，否则就是签到成功</p><h3 id="指令匹配">指令匹配</h3><p>在<code>Koishi</code>这个框架中，我们除了可以用<code>ctx.on</code>去判断消息外，我们可以直接使用最直接的<code>ctx.command</code>去判断消息</p><span id="more"></span><p>示例代码如下</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs typescript">ctx.<span class="hljs-title function_">command</span>(<span class="hljs-string">&#x27;签到&#x27;</span>)<br>.<span class="hljs-title function_">action</span>(<span class="hljs-title function_">async</span>(&#123;session&#125;) =&gt; &#123;<br> <span class="hljs-keyword">await</span> session.<span class="hljs-title function_">send</span>(<span class="hljs-string">&quot;1&quot;</span>)<br>&#125;)<br></code></pre></td></tr></table></figure><p><img src="https://pic1.imgdb.cn/item/684c34df58cb8da5c84af706.png" alt=""></p><hr><h3 id="数据库基础使用">数据库基础使用</h3><p>这里是<a href="https://koishi.chat/zh-CN/api/database/database.html">点我</a>具体的文档，那么我们来写一个基础的，首先是声明数据类型</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">interface</span> sign&#123;<br>  time : <span class="hljs-built_in">string</span> <span class="hljs-comment">// 这里是存储时间</span><br>  user_id : <span class="hljs-built_in">string</span> <span class="hljs-comment">// 这里是用户id</span><br>&#125;<br></code></pre></td></tr></table></figure><p>第二步声明使用了数据库插件，否则会出现黄色警告</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> inject = [<span class="hljs-string">&quot;database&quot;</span>]<br></code></pre></td></tr></table></figure><p>在<code>Koishi</code>里面声明数据库</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-keyword">declare</span> <span class="hljs-variable language_">module</span> <span class="hljs-string">&#x27;koishi&#x27;</span> &#123;<br>  <span class="hljs-keyword">interface</span> <span class="hljs-title class_">Tables</span> &#123;<br> sign : sign<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>最后是创建数据库</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs typescript">ctx.<span class="hljs-property">model</span>.<span class="hljs-title function_">extend</span>(<span class="hljs-string">&#x27;sign&#x27;</span>,&#123;<br>    <span class="hljs-attr">time</span>: <span class="hljs-string">&#x27;string&#x27;</span>,<br>    <span class="hljs-attr">user_id</span>: <span class="hljs-string">&#x27;string&#x27;</span><br>&#125;)<br></code></pre></td></tr></table></figure><p>数据库创建代码为</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-keyword">await</span> ctx.<span class="hljs-property">database</span>.<span class="hljs-title function_">create</span>(table_name, &#123;.....&#125;)<br></code></pre></td></tr></table></figure><p>数据库更新代码为</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-keyword">await</span> ctx.<span class="hljs-property">database</span>.<span class="hljs-title function_">upsert</span>(table_name, [&#123;....&#125;])<br></code></pre></td></tr></table></figure><p>数据库搜索代码为</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-keyword">await</span> ctx.<span class="hljs-property">database</span>.<span class="hljs-title function_">get</span>(table_name, &#123;....&#125;)<br></code></pre></td></tr></table></figure><hr><h3 id="获取年月日">获取年月日</h3><p>这里我们可以使用<code>js</code>的库获取</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-keyword">function</span> <span class="hljs-title function_">getCurrentDate</span>(<span class="hljs-params"></span>): <span class="hljs-built_in">string</span> &#123;<br>  <span class="hljs-keyword">const</span> date = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>();<br>  <span class="hljs-keyword">const</span> year = date.<span class="hljs-title function_">getFullYear</span>();<br>  <span class="hljs-keyword">const</span> month = <span class="hljs-title class_">String</span>(date.<span class="hljs-title function_">getMonth</span>() + <span class="hljs-number">1</span>).<span class="hljs-title function_">padStart</span>(<span class="hljs-number">2</span>, <span class="hljs-string">&#x27;0&#x27;</span>);<br>  <span class="hljs-keyword">const</span> day = <span class="hljs-title class_">String</span>(date.<span class="hljs-title function_">getDate</span>()).<span class="hljs-title function_">padStart</span>(<span class="hljs-number">2</span>, <span class="hljs-string">&#x27;0&#x27;</span>);<br>  <span class="hljs-keyword">return</span> <span class="hljs-string">`<span class="hljs-subst">$&#123;year&#125;</span>-<span class="hljs-subst">$&#123;month&#125;</span>-<span class="hljs-subst">$&#123;day&#125;</span>`</span>;<br>&#125;<br></code></pre></td></tr></table></figure><hr><h2 id="开始编写">开始编写</h2><p>在我们前面了解完这些知识后，我们先创建一个存放签到数据的数据库</p><p>根据上面的代码讲解，我们可以这样写</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-keyword">import</span> &#123; <span class="hljs-title class_">Context</span>, <span class="hljs-title class_">Schema</span>, h &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;koishi&#x27;</span><br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> name = <span class="hljs-string">&#x27;test&#x27;</span> <span class="hljs-comment">// 插件名字</span><br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">interface</span> <span class="hljs-title class_">Config</span> &#123;&#125; <span class="hljs-comment">// 插件的配置项</span><br><br><span class="hljs-keyword">declare</span> <span class="hljs-variable language_">module</span> <span class="hljs-string">&#x27;koishi&#x27;</span> &#123;<br>  <span class="hljs-keyword">interface</span> <span class="hljs-title class_">Tables</span> &#123;<br>  sign_today : sign_today<br>  &#125;<br>&#125;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> inject = [<span class="hljs-string">&quot;database&quot;</span>]<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> <span class="hljs-title class_">Config</span>: <span class="hljs-title class_">Schema</span>&lt;<span class="hljs-title class_">Config</span>&gt; = <span class="hljs-title class_">Schema</span>.<span class="hljs-title function_">object</span>(&#123;&#125;)<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">interface</span> sign_today &#123;<br>  id?: <span class="hljs-built_in">number</span>  <span class="hljs-comment">// 添加 id 字段（可选）</span><br>  <span class="hljs-attr">now_time</span>: <span class="hljs-built_in">string</span> <br>  <span class="hljs-attr">user_id</span>: <span class="hljs-built_in">string</span><br>&#125;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">apply</span>(<span class="hljs-params">ctx: Context</span>) &#123;<br>  ctx.<span class="hljs-property">model</span>.<span class="hljs-title function_">extend</span>(<span class="hljs-string">&quot;sign_today&quot;</span>, &#123;<br>    <span class="hljs-attr">id</span>: <span class="hljs-string">&#x27;unsigned&#x27;</span>,<br>    <span class="hljs-attr">now_time</span>: <span class="hljs-string">&#x27;string&#x27;</span>,<br>    <span class="hljs-attr">user_id</span>: <span class="hljs-string">&#x27;string&#x27;</span><br>  &#125;, &#123;<br>    <span class="hljs-attr">primary</span>: <span class="hljs-string">&#x27;id&#x27;</span>, <br>    <span class="hljs-attr">autoInc</span>: <span class="hljs-literal">true</span> <br>  &#125;)<br>  <br>  ctx.<span class="hljs-title function_">command</span>(<span class="hljs-string">&#x27;签到&#x27;</span>)<br>    .<span class="hljs-title function_">action</span>(<span class="hljs-title function_">async</span>(&#123;session&#125;) =&gt; &#123;<br>      <span class="hljs-keyword">await</span> session.<span class="hljs-title function_">send</span>(<span class="hljs-string">&quot;1&quot;</span>)<br>    &#125;)<br>&#125;<br></code></pre></td></tr></table></figure><p>我们运行一下代码，如果日志出现了</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-number">2025</span>-<span class="hljs-number">06</span>-<span class="hljs-number">14</span> <span class="hljs-number">00</span>:<span class="hljs-number">57</span>:<span class="hljs-number">40</span> [I] hmr reload plugin at external\test\src\index.<span class="hljs-property">ts</span><br><span class="hljs-number">2025</span>-<span class="hljs-number">06</span>-<span class="hljs-number">14</span> <span class="hljs-number">00</span>:<span class="hljs-number">57</span>:<span class="hljs-number">40</span> [I] sqlite auto creating table sign_today<br></code></pre></td></tr></table></figure><p>说明你的数据库已经初始化了，现在我们缺少读写数据库</p><hr><h2 id="读写内容">读写内容</h2><p>对数据库进行搜索，然后数据库会返回数组</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs typescript">ctx.<span class="hljs-title function_">command</span>(<span class="hljs-string">&#x27;签到&#x27;</span>)<br>    .<span class="hljs-title function_">action</span>(<span class="hljs-title function_">async</span>(&#123;session&#125;) =&gt; &#123;<br>      <span class="hljs-keyword">var</span> get_user_sign_time = <span class="hljs-keyword">await</span> ctx.<span class="hljs-property">database</span>.<span class="hljs-title function_">get</span>(<span class="hljs-string">&quot;sign_today&quot;</span>, &#123;<span class="hljs-attr">user_id</span>: session.<span class="hljs-property">userId</span>&#125;)<br>      <span class="hljs-keyword">if</span>(get_user_sign_time.<span class="hljs-property">length</span> == <span class="hljs-number">0</span>)&#123;<br><br>      &#125;<span class="hljs-keyword">else</span>&#123;<br>        <br>      &#125; <br>    &#125;)<br></code></pre></td></tr></table></figure><p>当返回长度为0的数组，说明这个人不存在，我们要创建数据，然后返回签到成功</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs typescript">ctx.<span class="hljs-title function_">command</span>(<span class="hljs-string">&#x27;签到&#x27;</span>)<br>   .<span class="hljs-title function_">action</span>(<span class="hljs-title function_">async</span>(&#123;session&#125;) =&gt; &#123;<br>     <span class="hljs-keyword">var</span> get_user_sign_time = <span class="hljs-keyword">await</span> ctx.<span class="hljs-property">database</span>.<span class="hljs-title function_">get</span>(<span class="hljs-string">&quot;sign_today&quot;</span>, &#123;<span class="hljs-attr">user_id</span>: session.<span class="hljs-property">userId</span>&#125;)<br>     <span class="hljs-keyword">if</span>(get_user_sign_time.<span class="hljs-property">length</span> == <span class="hljs-number">0</span>)&#123;<br>       <span class="hljs-keyword">await</span> ctx.<span class="hljs-property">database</span>.<span class="hljs-title function_">create</span>(<span class="hljs-string">&quot;sign_today&quot;</span>, &#123;<br>           <span class="hljs-string">&quot;now_time&quot;</span>: <span class="hljs-title function_">getCurrentDate</span>(),<br>           <span class="hljs-string">&quot;user_id&quot;</span>: session.<span class="hljs-property">userId</span><br>       &#125;)<br>       <span class="hljs-keyword">await</span> session.<span class="hljs-title function_">send</span>(<span class="hljs-string">&quot;签到成功&quot;</span>)<br>     &#125;<span class="hljs-keyword">else</span>&#123;<br><br>     &#125; <br>   &#125;)<br></code></pre></td></tr></table></figure><p>那么我们就要讨论另外一种情况了，如果这个人在数据库有记录的话，我们需要对比时间，如果时间恰好等于今天的时间，说明他已经签到了，否则就是失败</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs typescript">ctx.<span class="hljs-title function_">command</span>(<span class="hljs-string">&#x27;签到&#x27;</span>)<br>    .<span class="hljs-title function_">action</span>(<span class="hljs-title function_">async</span>(&#123;session&#125;) =&gt; &#123;<br>      <span class="hljs-keyword">var</span> get_user_sign_time = <span class="hljs-keyword">await</span> ctx.<span class="hljs-property">database</span>.<span class="hljs-title function_">get</span>(<span class="hljs-string">&quot;sign_today&quot;</span>, &#123;<span class="hljs-attr">user_id</span>: session.<span class="hljs-property">userId</span>&#125;)<br>      <span class="hljs-keyword">if</span>(get_user_sign_time.<span class="hljs-property">length</span> == <span class="hljs-number">0</span>)&#123;<br>        <span class="hljs-keyword">await</span> ctx.<span class="hljs-property">database</span>.<span class="hljs-title function_">create</span>(<span class="hljs-string">&quot;sign_today&quot;</span>, &#123;<br>            <span class="hljs-string">&quot;now_time&quot;</span>: <span class="hljs-title function_">getCurrentDate</span>(),<br>            <span class="hljs-string">&quot;user_id&quot;</span>: session.<span class="hljs-property">userId</span><br>        &#125;)<br>        <span class="hljs-keyword">await</span> session.<span class="hljs-title function_">send</span>(<span class="hljs-string">&quot;签到成功&quot;</span>)<br>      &#125;<span class="hljs-keyword">else</span>&#123;<br>        <span class="hljs-keyword">if</span>(get_user_sign_time[<span class="hljs-number">0</span>][<span class="hljs-string">&#x27;now_time&#x27;</span>] == <span class="hljs-title function_">getCurrentDate</span>())&#123;<br>          <span class="hljs-keyword">await</span> session.<span class="hljs-title function_">send</span>(<span class="hljs-string">&quot;签到失败，你今天已经签到了&quot;</span>)<br>        &#125;<span class="hljs-keyword">else</span>&#123;<br>            <span class="hljs-keyword">await</span> ctx.<span class="hljs-property">database</span>.<span class="hljs-title function_">upsert</span>(<span class="hljs-string">&quot;sign_today&quot;</span>, [&#123;<br>                  <span class="hljs-string">&quot;now_time&quot;</span> : <span class="hljs-title function_">getCurrentDate</span>(),<br>                  <span class="hljs-string">&quot;user_id&quot;</span> : session.<span class="hljs-property">userId</span>,<br>              &#125;])<br>            <span class="hljs-keyword">await</span> session.<span class="hljs-title function_">send</span>(<span class="hljs-string">&quot;签到成功&quot;</span>)<br>        &#125;<br>      &#125; <br>    &#125;)<br></code></pre></td></tr></table></figure><p>好了，这样就大功告成了</p><p><img src="https://pic1.imgdb.cn/item/684c5b9d58cb8da5c84b0414.png" alt=""></p><p>效果如上图</p><hr><h2 id="代码示例">代码示例</h2><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-keyword">import</span> &#123; <span class="hljs-title class_">Context</span>, <span class="hljs-title class_">Schema</span>, h &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;koishi&#x27;</span><br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> name = <span class="hljs-string">&#x27;test&#x27;</span> <span class="hljs-comment">// 插件名字</span><br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">interface</span> <span class="hljs-title class_">Config</span> &#123;&#125; <span class="hljs-comment">// 插件的配置项</span><br><br><span class="hljs-keyword">declare</span> <span class="hljs-variable language_">module</span> <span class="hljs-string">&#x27;koishi&#x27;</span> &#123;<br>  <span class="hljs-keyword">interface</span> <span class="hljs-title class_">Tables</span> &#123;<br>  sign_today : sign_today<br>  &#125;<br>&#125;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> inject = [<span class="hljs-string">&quot;database&quot;</span>]<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> <span class="hljs-title class_">Config</span>: <span class="hljs-title class_">Schema</span>&lt;<span class="hljs-title class_">Config</span>&gt; = <span class="hljs-title class_">Schema</span>.<span class="hljs-title function_">object</span>(&#123;&#125;)<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">interface</span> sign_today &#123;<br>  id?: <span class="hljs-built_in">number</span>  <span class="hljs-comment">// 添加 id 字段（可选）</span><br>  <span class="hljs-attr">now_time</span>: <span class="hljs-built_in">string</span> <br>  <span class="hljs-attr">user_id</span>: <span class="hljs-built_in">string</span><br>&#125;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">apply</span>(<span class="hljs-params">ctx: Context</span>) &#123;<br>  ctx.<span class="hljs-property">model</span>.<span class="hljs-title function_">extend</span>(<span class="hljs-string">&quot;sign_today&quot;</span>, &#123;<br>    <span class="hljs-attr">id</span>: <span class="hljs-string">&#x27;unsigned&#x27;</span>,  <span class="hljs-comment">// 添加 id 字段定义</span><br>    <span class="hljs-attr">now_time</span>: <span class="hljs-string">&#x27;string&#x27;</span>,<br>    <span class="hljs-attr">user_id</span>: <span class="hljs-string">&#x27;string&#x27;</span>  <span class="hljs-comment">// 改为 string 类型以匹配接口定义</span><br>  &#125;, &#123;<br>    <span class="hljs-attr">primary</span>: <span class="hljs-string">&#x27;id&#x27;</span>,    <span class="hljs-comment">// 明确指定主键</span><br>    <span class="hljs-attr">autoInc</span>: <span class="hljs-literal">true</span>     <span class="hljs-comment">// 自增主键</span><br>  &#125;)<br>  <br>  ctx.<span class="hljs-title function_">command</span>(<span class="hljs-string">&#x27;签到&#x27;</span>)<br>    .<span class="hljs-title function_">action</span>(<span class="hljs-title function_">async</span>(&#123;session&#125;) =&gt; &#123;<br>      <span class="hljs-keyword">var</span> get_user_sign_time = <span class="hljs-keyword">await</span> ctx.<span class="hljs-property">database</span>.<span class="hljs-title function_">get</span>(<span class="hljs-string">&quot;sign_today&quot;</span>, &#123;<span class="hljs-attr">user_id</span>: session.<span class="hljs-property">userId</span>&#125;)<br>      <span class="hljs-keyword">if</span>(get_user_sign_time.<span class="hljs-property">length</span> == <span class="hljs-number">0</span>)&#123;<br>        <span class="hljs-keyword">await</span> ctx.<span class="hljs-property">database</span>.<span class="hljs-title function_">create</span>(<span class="hljs-string">&quot;sign_today&quot;</span>, &#123;<br>            <span class="hljs-string">&quot;now_time&quot;</span>: <span class="hljs-title function_">getCurrentDate</span>(),<br>            <span class="hljs-string">&quot;user_id&quot;</span>: session.<span class="hljs-property">userId</span><br>        &#125;)<br>        <span class="hljs-keyword">await</span> session.<span class="hljs-title function_">send</span>(<span class="hljs-string">&quot;签到成功&quot;</span>)<br>      &#125;<span class="hljs-keyword">else</span>&#123;<br>        <span class="hljs-keyword">if</span>(get_user_sign_time[<span class="hljs-number">0</span>][<span class="hljs-string">&#x27;now_time&#x27;</span>] == <span class="hljs-title function_">getCurrentDate</span>())&#123;<br>          <span class="hljs-keyword">await</span> session.<span class="hljs-title function_">send</span>(<span class="hljs-string">&quot;签到失败，你今天已经签到了&quot;</span>)<br>        &#125;<span class="hljs-keyword">else</span>&#123;<br>            <span class="hljs-keyword">await</span> ctx.<span class="hljs-property">database</span>.<span class="hljs-title function_">upsert</span>(<span class="hljs-string">&quot;sign_today&quot;</span>, [&#123;<br>                  <span class="hljs-string">&quot;now_time&quot;</span> : <span class="hljs-title function_">getCurrentDate</span>(),<br>                  <span class="hljs-string">&quot;user_id&quot;</span> : session.<span class="hljs-property">userId</span>,<br>              &#125;])<br>            <span class="hljs-keyword">await</span> session.<span class="hljs-title function_">send</span>(<span class="hljs-string">&quot;签到成功&quot;</span>)<br>        &#125;<br>      &#125; <br>    &#125;)<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">getCurrentDate</span>(<span class="hljs-params"></span>): <span class="hljs-built_in">string</span> &#123;<br>  <span class="hljs-keyword">const</span> date = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>();<br>  <span class="hljs-keyword">const</span> year = date.<span class="hljs-title function_">getFullYear</span>();<br>  <span class="hljs-keyword">const</span> month = <span class="hljs-title class_">String</span>(date.<span class="hljs-title function_">getMonth</span>() + <span class="hljs-number">1</span>).<span class="hljs-title function_">padStart</span>(<span class="hljs-number">2</span>, <span class="hljs-string">&#x27;0&#x27;</span>); <span class="hljs-comment">// 月份从0开始</span><br>  <span class="hljs-keyword">const</span> day = <span class="hljs-title class_">String</span>(date.<span class="hljs-title function_">getDate</span>()).<span class="hljs-title function_">padStart</span>(<span class="hljs-number">2</span>, <span class="hljs-string">&#x27;0&#x27;</span>);<br>  <span class="hljs-keyword">return</span> <span class="hljs-string">`<span class="hljs-subst">$&#123;year&#125;</span>-<span class="hljs-subst">$&#123;month&#125;</span>-<span class="hljs-subst">$&#123;day&#125;</span>`</span>;<br>&#125;<br></code></pre></td></tr></table></figure><hr><h2 id="后记">后记</h2><p>学习了如何通过数据库读写实现签到功能后，下期我们来写一个定时任务计划</p>]]></content>
    
    
    <categories>
      
      <category>Koishi</category>
      
    </categories>
    
    
    <tags>
      
      <tag>bot</tag>
      
      <tag>qq机器人</tag>
      
      <tag>JavaScript</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Koishi从0入门 02 编写插件</title>
    <link href="/2025/05/31/koishi_02_teach/"/>
    <url>/2025/05/31/koishi_02_teach/</url>
    
    <content type="html"><![CDATA[<h2 id="创建新插件">创建新插件</h2><p>在上一次的教程中，我们讲了如何部署<code>Koishi</code></p><p>我们回到我们的工作区，目录内容如下</p><span id="more"></span><p><img src="https://pic1.imgdb.cn/item/683a6a6958cb8da5c81e76fd.png" alt=""></p><p>在这里打开<code>cmd/powershell</code>，输入如下命令创建插件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm run setup 插件名字<br></code></pre></td></tr></table></figure><p><img src="https://pic1.imgdb.cn/item/683a6ae458cb8da5c81e7712.png" alt=""></p><p>然后回车</p><p>返回文件夹下，打开<code>external-&gt;插件名字-&gt;src</code></p><p>这是你插件的代码目录，其中<code>index.ts</code>是你插件的<code>main</code></p><blockquote><p>注意:建议找一个没多少群的账号，因为前期我们还没写过滤群聊功能，这样会导致bot全局触发，由于我这里出了一点麻烦，所以就用沙盒测试了</p></blockquote><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-keyword">import</span> &#123; <span class="hljs-title class_">Context</span>, <span class="hljs-title class_">Schema</span> &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;koishi&#x27;</span><br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> name = <span class="hljs-string">&#x27;test&#x27;</span> <span class="hljs-comment">// 插件名字</span><br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">interface</span> <span class="hljs-title class_">Config</span> &#123;&#125; <span class="hljs-comment">// 插件的配置项</span><br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> <span class="hljs-title class_">Config</span>: <span class="hljs-title class_">Schema</span>&lt;<span class="hljs-title class_">Config</span>&gt; = <span class="hljs-title class_">Schema</span>.<span class="hljs-title function_">object</span>(&#123;&#125;)<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">apply</span>(<span class="hljs-params">ctx: Context</span>) &#123;<br>  <span class="hljs-comment">// write your plugin here</span><br>  <span class="hljs-comment">// 从这里开始编写插件</span><br>&#125;<br></code></pre></td></tr></table></figure><hr><h2 id="启用插件">启用插件</h2><p>打开<code>Koishi</code>控制台，选择插件管理</p><p><img src="https://pic1.imgdb.cn/item/683a702558cb8da5c81e7807.png" alt=""></p><p>点右边哪个图标添加插件，添加我们刚刚创建的插件</p><p>然后启用插件</p><p><img src="https://pic1.imgdb.cn/item/683a708e58cb8da5c81e7811.png" alt=""></p><p>启用成功之后，下面会变成绿色的小图标</p><hr><h2 id="编写Hello-World">编写Hello World</h2><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-keyword">import</span> &#123; <span class="hljs-title class_">Context</span>, <span class="hljs-title class_">Schema</span> &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;koishi&#x27;</span><br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> name = <span class="hljs-string">&#x27;test&#x27;</span> <span class="hljs-comment">// 插件名字</span><br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">interface</span> <span class="hljs-title class_">Config</span> &#123;&#125; <span class="hljs-comment">// 插件的配置项</span><br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> <span class="hljs-title class_">Config</span>: <span class="hljs-title class_">Schema</span>&lt;<span class="hljs-title class_">Config</span>&gt; = <span class="hljs-title class_">Schema</span>.<span class="hljs-title function_">object</span>(&#123;&#125;)<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">apply</span>(<span class="hljs-params">ctx: Context</span>) &#123;<br> ctx.<span class="hljs-title function_">on</span>(<span class="hljs-string">&#x27;message&#x27;</span>, <span class="hljs-function">(<span class="hljs-params">session</span>) =&gt;</span> &#123;<br>    <span class="hljs-keyword">if</span> (session.<span class="hljs-property">content</span> === <span class="hljs-string">&#x27;你好&#x27;</span>) &#123;<br>      session.<span class="hljs-title function_">send</span>(<span class="hljs-string">&#x27;Hello World&#x27;</span>)<br>    &#125;<br>  &#125;)<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="效果">效果</h3><p><img src="https://pic1.imgdb.cn/item/683a70e458cb8da5c81e782e.png" alt=""></p><hr><h2 id="消息格式详解">消息格式详解</h2><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-keyword">import</span> &#123; <span class="hljs-title class_">Context</span>, <span class="hljs-title class_">Schema</span> &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;koishi&#x27;</span><br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> name = <span class="hljs-string">&#x27;test&#x27;</span> <span class="hljs-comment">// 插件名字</span><br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">interface</span> <span class="hljs-title class_">Config</span> &#123;&#125; <span class="hljs-comment">// 插件的配置项</span><br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> <span class="hljs-title class_">Config</span>: <span class="hljs-title class_">Schema</span>&lt;<span class="hljs-title class_">Config</span>&gt; = <span class="hljs-title class_">Schema</span>.<span class="hljs-title function_">object</span>(&#123;&#125;)<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">apply</span>(<span class="hljs-params">ctx: Context</span>) &#123;<br> ctx.<span class="hljs-title function_">on</span>(<span class="hljs-string">&#x27;message&#x27;</span>, <span class="hljs-function">(<span class="hljs-params">session</span>) =&gt;</span> &#123;<br>   <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(session) <span class="hljs-comment">// 打印事件信息</span><br>  &#125;)<br>&#125;<br></code></pre></td></tr></table></figure><p>以下是事件信息的解析</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><code class="hljs bash">&#123;<br>  <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-string">&quot;9***7&quot;</span>,<br>  <span class="hljs-string">&quot;sn&quot;</span>: <span class="hljs-string">&quot;9***7&quot;</span>,<br>  <span class="hljs-string">&quot;event&quot;</span>: &#123;<br>    <span class="hljs-string">&quot;selfId&quot;</span>: <span class="hljs-string">&quot;5***1&quot;</span>, // 机器人账号<br>    <span class="hljs-string">&quot;platform&quot;</span>: <span class="hljs-string">&quot;onebot&quot;</span>,<br>    <span class="hljs-string">&quot;timestamp&quot;</span>: 1748660785000,<br>    <span class="hljs-string">&quot;type&quot;</span>: <span class="hljs-string">&quot;message-created&quot;</span>,<br>    <span class="hljs-string">&quot;message&quot;</span>: &#123;<br>      <span class="hljs-string">&quot;messageId&quot;</span>: <span class="hljs-string">&quot;1***1&quot;</span>, // 消息<span class="hljs-built_in">id</span><br>      <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-string">&quot;1***4&quot;</span>,<br>      <span class="hljs-string">&quot;elements&quot;</span>: [],<br>      <span class="hljs-string">&quot;content&quot;</span>: <span class="hljs-string">&quot;test&quot;</span>,<br>      <span class="hljs-string">&quot;user&quot;</span>: &#123;<br>        <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-string">&quot;3***7&quot;</span>,<br>        <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;小*&quot;</span>,<br>        <span class="hljs-string">&quot;userId&quot;</span>: <span class="hljs-string">&quot;3***7&quot;</span>, // qq号<br>        <span class="hljs-string">&quot;avatar&quot;</span>: <span class="hljs-string">&quot;http://q.qlogo.cn/headimg_dl?dst_uin=3***7&amp;spec=640&quot;</span>, // 头像<br>        <span class="hljs-string">&quot;username&quot;</span>: <span class="hljs-string">&quot;小*&quot;</span>, // 昵称<br>        <span class="hljs-string">&quot;member&quot;</span>: &#123;<br>          <span class="hljs-string">&quot;user&quot;</span>: &#123;&#125;,<br>          <span class="hljs-string">&quot;nick&quot;</span>: <span class="hljs-string">&quot;&quot;</span>,<br>          <span class="hljs-string">&quot;roles&quot;</span>: []<br>        &#125;<br>      &#125;,<br>      <span class="hljs-string">&quot;guild&quot;</span>: &#123;<br>        <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-string">&quot;9***1&quot;</span>, // 群号<br>        <span class="hljs-string">&quot;channel&quot;</span>: &#123;<br>          <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-string">&quot;9***1&quot;</span>,<br>          <span class="hljs-string">&quot;type&quot;</span>: 0<br>        &#125;<br>      &#125;,<br>      <span class="hljs-string">&quot;subtype&quot;</span>: <span class="hljs-string">&quot;group&quot;</span>, // 消息类型<br>      <span class="hljs-string">&quot;subsubtype&quot;</span>: <span class="hljs-string">&quot;group&quot;</span><br>    &#125;<br>  &#125;,<br>  <span class="hljs-string">&quot;type&quot;</span>: <span class="hljs-string">&quot;onebot&quot;</span>,<br>  <span class="hljs-string">&quot;data&quot;</span>: &#123;<br>    <span class="hljs-string">&quot;self_id&quot;</span>: <span class="hljs-string">&quot;5***1&quot;</span>,<br>    <span class="hljs-string">&quot;user_id&quot;</span>: <span class="hljs-string">&quot;3***7&quot;</span>,<br>    <span class="hljs-string">&quot;time&quot;</span>: 1748660785,<br>    <span class="hljs-string">&quot;message_id&quot;</span>: <span class="hljs-string">&quot;1***4&quot;</span>,<br>    <span class="hljs-string">&quot;message_seq&quot;</span>: <span class="hljs-string">&quot;1***4&quot;</span>,<br>    <span class="hljs-string">&quot;real_id&quot;</span>: <span class="hljs-string">&quot;1***4&quot;</span>,<br>    <span class="hljs-string">&quot;real_seq&quot;</span>: <span class="hljs-string">&quot;4***0&quot;</span>,<br>    <span class="hljs-string">&quot;message_type&quot;</span>: <span class="hljs-string">&quot;group&quot;</span>,<br>    <span class="hljs-string">&quot;sender&quot;</span>: &#123;&#125;,<br>    <span class="hljs-string">&quot;raw_message&quot;</span>: <span class="hljs-string">&quot;test&quot;</span>,<br>    <span class="hljs-string">&quot;font&quot;</span>: 14,<br>    <span class="hljs-string">&quot;sub_type&quot;</span>: <span class="hljs-string">&quot;normal&quot;</span>,<br>    <span class="hljs-string">&quot;message&quot;</span>: [],<br>    <span class="hljs-string">&quot;message_format&quot;</span>: <span class="hljs-string">&quot;array&quot;</span>,<br>    <span class="hljs-string">&quot;post_type&quot;</span>: <span class="hljs-string">&quot;message&quot;</span>,<br>    <span class="hljs-string">&quot;group_id&quot;</span>: <span class="hljs-string">&quot;9***1&quot;</span><br>  &#125;,<br>  <span class="hljs-string">&quot;Locales&quot;</span>: [],<br>  <span class="hljs-string">&quot;stripped&quot;</span>: &#123;<br>    <span class="hljs-string">&quot;hasAt&quot;</span>: <span class="hljs-literal">false</span>, // 是否有艾特<br>    <span class="hljs-string">&quot;content&quot;</span>: <span class="hljs-string">&quot;test&quot;</span>,<br>    <span class="hljs-string">&quot;appel&quot;</span>: <span class="hljs-literal">false</span>,<br>    <span class="hljs-string">&quot;atSelf&quot;</span>: <span class="hljs-literal">false</span>, // 有艾特机器人<br>    <span class="hljs-string">&quot;prefix&quot;</span>: <span class="hljs-string">&quot;&quot;</span>,<br>    <span class="hljs-string">&quot;guild&quot;</span>: &#123;<br>      <span class="hljs-string">&quot;flag&quot;</span>: 0,<br>      <span class="hljs-string">&quot;assignee&quot;</span>: <span class="hljs-string">&quot;5***1&quot;</span>,<br>      <span class="hljs-string">&quot;guildId&quot;</span>: <span class="hljs-string">&quot;9***1&quot;</span>,<br>      <span class="hljs-string">&quot;permissions&quot;</span>: [],<br>      <span class="hljs-string">&quot;Locales&quot;</span>: [],<br>      <span class="hljs-string">&quot;platform&quot;</span>: <span class="hljs-string">&quot;onebot&quot;</span>,<br>      <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-string">&quot;9***1&quot;</span><br>    &#125;,<br>    <span class="hljs-string">&quot;channel&quot;</span>: &#123;<br>      <span class="hljs-string">&quot;flag&quot;</span>: 0,<br>      <span class="hljs-string">&quot;assignee&quot;</span>: <span class="hljs-string">&quot;5***1&quot;</span>,<br>      <span class="hljs-string">&quot;guildId&quot;</span>: <span class="hljs-string">&quot;9***1&quot;</span>,<br>      <span class="hljs-string">&quot;permissions&quot;</span>: [],<br>      <span class="hljs-string">&quot;Locales&quot;</span>: [],<br>      <span class="hljs-string">&quot;platform&quot;</span>: <span class="hljs-string">&quot;onebot&quot;</span>,<br>      <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-string">&quot;9***1&quot;</span><br>    &#125;,<br>    <span class="hljs-string">&quot;user&quot;</span>: &#123;<br>      <span class="hljs-string">&quot;id&quot;</span>: 2,<br>      <span class="hljs-string">&quot;flag&quot;</span>: 0,<br>      <span class="hljs-string">&quot;authority&quot;</span>: 1,<br>      <span class="hljs-string">&quot;permissions&quot;</span>: [],<br>      <span class="hljs-string">&quot;Locales&quot;</span>: []<br>    &#125;<br>  &#125;,<br>  <span class="hljs-string">&quot;scope&quot;</span>: <span class="hljs-string">&quot;commands.test.messages&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure><p>以下是一些写法</p><h3 id="获取一些基本信息">获取一些基本信息</h3><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-keyword">import</span> &#123; <span class="hljs-title class_">Context</span>, <span class="hljs-title class_">Schema</span> &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;koishi&#x27;</span><br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> name = <span class="hljs-string">&#x27;test&#x27;</span> <span class="hljs-comment">// 插件名字</span><br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">interface</span> <span class="hljs-title class_">Config</span> &#123;&#125; <span class="hljs-comment">// 插件的配置项</span><br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> <span class="hljs-title class_">Config</span>: <span class="hljs-title class_">Schema</span>&lt;<span class="hljs-title class_">Config</span>&gt; = <span class="hljs-title class_">Schema</span>.<span class="hljs-title function_">object</span>(&#123;&#125;)<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">apply</span>(<span class="hljs-params">ctx: Context</span>) &#123;<br> ctx.<span class="hljs-title function_">on</span>(<span class="hljs-string">&#x27;message&#x27;</span>, <span class="hljs-function">(<span class="hljs-params">session</span>) =&gt;</span> &#123;<br>   <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(session.<span class="hljs-property">userId</span>) <span class="hljs-comment">// 获取qq号</span><br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(session.<span class="hljs-property">guildId</span>) <span class="hljs-comment">// 获取群号</span><br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(session.<span class="hljs-property">event</span>.<span class="hljs-property">user</span>.<span class="hljs-property">name</span>) <span class="hljs-comment">// 获取昵称</span><br>  &#125;)<br>&#125;<br></code></pre></td></tr></table></figure><p>你可以根据上面那个示例事件进行取值，下面加上触发语句来尝试一下</p><hr><h2 id="示例-获取我的id">示例 获取我的id</h2><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-keyword">import</span> &#123; <span class="hljs-title class_">Context</span>, <span class="hljs-title class_">Schema</span> &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;koishi&#x27;</span><br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> name = <span class="hljs-string">&#x27;test&#x27;</span> <span class="hljs-comment">// 插件名字</span><br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">interface</span> <span class="hljs-title class_">Config</span> &#123;&#125; <span class="hljs-comment">// 插件的配置项</span><br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> <span class="hljs-title class_">Config</span>: <span class="hljs-title class_">Schema</span>&lt;<span class="hljs-title class_">Config</span>&gt; = <span class="hljs-title class_">Schema</span>.<span class="hljs-title function_">object</span>(&#123;&#125;)<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">apply</span>(<span class="hljs-params">ctx: Context</span>) &#123;<br> ctx.<span class="hljs-title function_">on</span>(<span class="hljs-string">&#x27;message&#x27;</span>, <span class="hljs-title function_">async</span>(session) =&gt; &#123;<br>   <span class="hljs-keyword">if</span>(session.<span class="hljs-property">content</span> == <span class="hljs-string">&quot;我的id&quot;</span>)&#123;<br>    <span class="hljs-keyword">await</span> session.<span class="hljs-title function_">send</span>(session.<span class="hljs-property">userId</span>)<br>   &#125;<br>  &#125;)<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="https://pic1.imgdb.cn/item/683a89a558cb8da5c81e8076.png" alt=""></p><hr><h2 id="发送多元素消息">发送多元素消息</h2><p>现在我们学会获取基本信息后，那么一个机器人只能发送文字肯定不够的，如何发送图片，艾特，表情，等其他内容</p><p>我这里将一一进行讲解</p><p>从文档<a href="https://koishi.chat/zh-CN/guide/basic/element.html">这里</a>给出了发送的方式，我们可以使用koishi准备好的api</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-comment">// 第一个参数是元素名称 (必选)</span><br><span class="hljs-title function_">h</span>(<span class="hljs-string">&#x27;message&#x27;</span>)<br><br><span class="hljs-comment">// 你可以传入一个由属性构成的对象作为第二个参数</span><br><span class="hljs-title function_">h</span>(<span class="hljs-string">&#x27;quote&#x27;</span>, &#123; id &#125;)<br><br><span class="hljs-comment">// 后续参数是元素的内容，可以是字符串或其他元素</span><br><span class="hljs-title function_">h</span>(<span class="hljs-string">&#x27;p&#x27;</span>, &#123;&#125;, <span class="hljs-string">&#x27;hello&#x27;</span>)<br><br><span class="hljs-comment">// 没有属性时二参数可以忽略不写</span><br><span class="hljs-title function_">h</span>(<span class="hljs-string">&#x27;p&#x27;</span>, <span class="hljs-string">&#x27;hello&#x27;</span>, <span class="hljs-title function_">h</span>(<span class="hljs-string">&#x27;img&#x27;</span>, &#123; src &#125;))<br></code></pre></td></tr></table></figure><h3 id="发送图片">发送图片</h3><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-keyword">await</span> session.<span class="hljs-title function_">send</span>(h.<span class="hljs-title function_">image</span>(<span class="hljs-string">&quot;https://koishi.chat/logo.png&quot;</span>)) <span class="hljs-comment">// 这里可以换成链接，本地路径</span><br></code></pre></td></tr></table></figure><h3 id="发送艾特">发送艾特</h3><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-keyword">await</span> session.<span class="hljs-title function_">send</span>(h.<span class="hljs-title function_">at</span>(session.<span class="hljs-property">userId</span>)) <span class="hljs-comment">// 你也可以换成其他人的id</span><br></code></pre></td></tr></table></figure><hr><h2 id="测试文字-图片">测试文字+图片</h2><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-keyword">import</span> &#123; <span class="hljs-title class_">Context</span>, <span class="hljs-title class_">Schema</span>, h &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;koishi&#x27;</span><br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> name = <span class="hljs-string">&#x27;test&#x27;</span> <span class="hljs-comment">// 插件名字</span><br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">interface</span> <span class="hljs-title class_">Config</span> &#123;&#125; <span class="hljs-comment">// 插件的配置项</span><br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> <span class="hljs-title class_">Config</span>: <span class="hljs-title class_">Schema</span>&lt;<span class="hljs-title class_">Config</span>&gt; = <span class="hljs-title class_">Schema</span>.<span class="hljs-title function_">object</span>(&#123;&#125;)<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">apply</span>(<span class="hljs-params">ctx: Context</span>) &#123;<br> ctx.<span class="hljs-title function_">on</span>(<span class="hljs-string">&#x27;message&#x27;</span>, <span class="hljs-title function_">async</span>(session) =&gt; &#123;<br>   <span class="hljs-keyword">if</span>(session.<span class="hljs-property">content</span> == <span class="hljs-string">&quot;测试&quot;</span>)&#123;<br>    <span class="hljs-keyword">await</span> session.<span class="hljs-title function_">send</span>(h.<span class="hljs-title function_">image</span>(<span class="hljs-string">&quot;https://koishi.chat/logo.png&quot;</span>)+<span class="hljs-string">&quot;这是一个koishi的图标&quot;</span>)<br>   &#125;<br>  &#125;)<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="https://pic1.imgdb.cn/item/683a8c1358cb8da5c81e816c.png" alt=""></p><hr><h2 id="最后">最后</h2><p>学会了使用api发送消息后，下节课我们编写一个签到插件</p>]]></content>
    
    
    <categories>
      
      <category>Koishi</category>
      
    </categories>
    
    
    <tags>
      
      <tag>bot</tag>
      
      <tag>qq机器人</tag>
      
      <tag>JavaScript</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Koishi从0入门 01 搭建环境与绑定框架</title>
    <link href="/2025/05/01/koishi_01_teach/"/>
    <url>/2025/05/01/koishi_01_teach/</url>
    
    <content type="html"><![CDATA[<h2 id="搭建Koishi运行的环境">搭建Koishi运行的环境</h2><p>由于<code>Koishi</code>框架是用ts写的，运行需要nodejs，所以我们要先安装nodejs</p><p>第一步打开<a href="https://nodejs.org/en">官网</a></p><span id="more"></span><p><img src="https://s11.ax1x.com/2023/08/16/pPlkbVO.png" alt="官网"></p><p>这里有两个版本 分别是<code>lts</code>版和<code>current</code>版 随便选择一个即可 我这里下的是<code>lts</code>版</p><p>如果你下载速度慢可以选择国内源 <code>这里下面是传送门</code></p><p><a href="https://npmmirror.com/mirrors/node/v22.15.0/node-v22.15.0-x64.msi">国内源lts</a></p><p><a href="https://npmmirror.com/mirrors/node/v23.11.0/node-v23.11.0-x64.msi">国内源current</a></p><p><img src="https://s11.ax1x.com/2023/08/16/pPlAns0.png" alt=""></p><p>按着步骤安装就行了</p><p><img src="https://s11.ax1x.com/2023/08/16/pPlAQdU.png" alt=""></p><p>等待进度条跑完，关闭即可</p><h3 id="切换国内源">切换国内源</h3><p>如果你是国内用户，从 npm 或 yarn 上下载依赖可能非常慢。因此，我们推荐你配置一下镜像源，以提升安装速度。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm config <span class="hljs-built_in">set</span> registry https://registry.npmmirror.com<br></code></pre></td></tr></table></figure><h3 id="配置Git账号">配置Git账号</h3><p>因为Koishi编写插件要用到git，所以要配置一下git，如果已经配置好的，请看下一步跳过这一步</p><p><strong>以下是安装Git + 配置</strong></p><p>点我这里<a href="https://github.com/git-for-windows/git/releases/download/v2.49.0.windows.1/Git-2.49.0-64-bit.exe">下载</a>，一直点击next就行了</p><p>安装完成后鼠标右键选择<code>open Git bash here</code>，输入如下命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">git config --global user.name <span class="hljs-string">&quot;Your Name&quot;</span><br>git config --global user.email <span class="hljs-string">&quot;you@example.com&quot;</span><br></code></pre></td></tr></table></figure><p>其中<code>Your Name</code>是你的名字，<code>you@example.com</code>是你的邮箱，建议去注册一个<code>Github</code>账号</p><hr><h2 id="创建第一个Koishi项目">创建第一个Koishi项目</h2><p>首先找一处地方，存放你的项目，准备好了就按住你电脑键盘上的<code>Shift</code>+<code>鼠标右键</code>，选择打开一个命令窗口</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm init koishi@latest<br></code></pre></td></tr></table></figure><p>输入以上命令</p><p><img src="https://pic1.imgdb.cn/item/6813331258cb8da5c8d60b1a.png" alt=""></p><p>这里我们输入<code>y</code>回车</p><p><img src="https://pic1.imgdb.cn/item/6813334658cb8da5c8d60b36.png" alt=""></p><p>这里是输入一个项目的名字，你自己随便取一个吧，然后继续回车</p><p><img src="https://pic1.imgdb.cn/item/681333a858cb8da5c8d60b81.png" alt=""></p><p>输入y，按回车，你就拥有了一个<code>Koishi</code>控制台了</p><p><strong>注:这里要安装大量组件，需要时间可能久一些</strong></p><hr><h2 id="配置Koishi控制台">配置Koishi控制台</h2><p>如果不出意外，这里下图就代表启动成功了，输入画圈的链接就能进入控制台</p><p><img src="https://pic1.imgdb.cn/item/681334f358cb8da5c8d60c4d.png" alt=""></p><h3 id="配置公网环境-账号密码登录">配置公网环境+账号密码登录</h3><p>如果你是使用云服务器搭建，需要暴露在公网环境的话，请按如下设置</p><p><img src="https://pic1.imgdb.cn/item/681335b158cb8da5c8d60cb3.png" alt=""></p><p>从插件列表中，找到<code>server</code>插件，把这里的监听IP地址改成<code>0.0.0.0</code>，这样你就能在公网访问控制台了</p><p>同时为了安全性，我们还需要设置一下用户密码</p><p>然后我们找到<code>auth</code>这个插件，把用户名和密码改一下，并且启用插件，这样有人登录控制台的时候，就要输入账号密码了</p><p><img src="https://pic1.imgdb.cn/item/6813363d58cb8da5c8d60d14.png" alt=""></p><p><img src="https://pic1.imgdb.cn/item/6813368758cb8da5c8d60d42.png" alt=""></p><hr><h2 id="绑定框架">绑定框架</h2><p>我这里以<code>onebot</code>协议为展示，也就是QQ机器人</p><p>可选框架有</p><ul><li>Napcat （Linux推荐使用）</li><li>LiteloaderQQNT (有图形化的推荐用)</li><li>Lgr (开销小)</li></ul><p>我这里以第二个为展示，配置教程可以去<code>Github</code>上面看，我这里就省略一下吧</p><p><img src="https://pic1.imgdb.cn/item/6813378858cb8da5c8d60dde.png" alt=""></p><p>找到启用反向ws，启用，填写ws连接地址</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ws://127.0.0.1:5140/onebot<br></code></pre></td></tr></table></figure><p><img src="https://pic1.imgdb.cn/item/681337ec58cb8da5c8d60df3.png" alt=""></p><p><img src="https://pic1.imgdb.cn/item/681337ec58cb8da5c8d60df4.png" alt=""></p><p>返回到<code>Koishi</code>控制台，在插件市场下载<code>Onebot</code>适配器插件</p><p><img src="https://pic1.imgdb.cn/item/6813384c58cb8da5c8d60e27.png" alt=""></p><p>然后你就能在插件配置里面看到<code>onebot</code>的适配器了</p><p><img src="https://pic1.imgdb.cn/item/681338ab58cb8da5c8d60e4b.png" alt=""></p><p>填写你的QQ机器人的账号，启用插件，当你看到绿色的标志的时候，说明连接成功了</p><p><img src="https://pic1.imgdb.cn/item/6813390b58cb8da5c8d60e95.png" alt=""></p><hr><h2 id="下一篇-插件编写">下一篇 插件编写</h2>]]></content>
    
    
    <categories>
      
      <category>Koishi</category>
      
    </categories>
    
    
    <tags>
      
      <tag>bot</tag>
      
      <tag>qq机器人</tag>
      
      <tag>JavaScript</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Koishi机器人教程合集 分为五期</title>
    <link href="/2025/05/01/koishi_jiao_cheng_ji_he/"/>
    <url>/2025/05/01/koishi_jiao_cheng_ji_he/</url>
    
    <content type="html"><![CDATA[<h2 id="Koishi简介">Koishi简介</h2><p>本节将介绍我们最推荐的 Koishi 开发方案——创建模板项目。相比直接从零搭建，模板项目的优势在于：</p><ul><li>创建完成即是拥有带完整控制台体验的项目，一键创建各种模板插件</li><li>支持直接加载 TypeScript，你可以尽情享受代码提示和类型检查带来的便利</li><li>支持插件热重载，你可以在不重启应用的情况下修改插件代码，并获得即时的反馈</li><li>支持二次开发，你可以将你自己的机器人与其他人的插件进行联合调试</li></ul><span id="more"></span><p>当然，模板项目也可以直接用于生产。虽然在操作上可能不如启动器方便，但它提供了更多的自由度，并能在启动器所覆盖不到的场景下顺利运行。</p><hr><h2 id="教程">教程</h2><p>我这里把教程分为了五集，以下是教程的名字，如果不出意外的话，基本能更新完</p><ul><li>Koishi从0入门 01 搭建环境与绑定框架</li><li>Koishi从0入门 02 编写插件</li><li>Koishi从0入门 03 写一个签到插件</li><li>Koishi从0入门 04 编写定时任务</li><li>Koishi从0入门 完结篇 调用api进行群管</li></ul><hr><h2 id="最后">最后</h2><p>如果你有任何疑问，可以点击博客上面的<code>关于</code>，进行联系</p>]]></content>
    
    
    <categories>
      
      <category>Koishi</category>
      
    </categories>
    
    
    <tags>
      
      <tag>bot</tag>
      
      <tag>qq机器人</tag>
      
      <tag>JavaScript</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>安卓逆向某某单词，反frida注入完美绕过</title>
    <link href="/2025/01/08/an_zhuo_ni_xiang_an_li_001/"/>
    <url>/2025/01/08/an_zhuo_ni_xiang_an_li_001/</url>
    
    <content type="html"><![CDATA[<p>好久没更新博客，所以今天来给大家分享一个案例，某某单词<code>app</code>，由于该<code>app</code>有反调试，本文就介绍一下如何绕过他的反调试</p><hr><h2 id="参考资料">参考资料</h2><p><a href="https://bbs.kanxue.com/thread-281584.htm">绕过最新版bilibili app反frida机制 </a></p><p><a href="https://bbs.kanxue.com/thread-277034.htm">绕过bilibili frida反调试</a></p><hr><h2 id="开始">开始</h2><p>检测Frida的机制一般在Native层实现，通常会创建几个线程轮询检测。首先要知道检测机制是由哪个so实现的，通过hook <code>android_dlopen_ext</code>函数，观察加载到哪个so的时候，触发反调试进程终止即可。下面我们来试一下</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-title class_">Interceptor</span>.<span class="hljs-title function_">attach</span>(<span class="hljs-title class_">Module</span>.<span class="hljs-title function_">findExportByName</span>(<span class="hljs-literal">null</span>, <span class="hljs-string">&quot;android_dlopen_ext&quot;</span>),<br>&#123;<br>    <span class="hljs-attr">onEnter</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">args</span>) &#123;<br>        <span class="hljs-keyword">var</span> pathptr = args[<span class="hljs-number">0</span>];<br>        <span class="hljs-keyword">if</span> (pathptr !== <span class="hljs-literal">undefined</span> &amp;&amp; pathptr != <span class="hljs-literal">null</span>) &#123;<br>            <span class="hljs-keyword">var</span> path = <span class="hljs-title function_">ptr</span>(pathptr).<span class="hljs-title function_">readCString</span>();<br>            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;load &quot;</span> + path);<br>        &#125;<br>    &#125;<br>&#125;<br>);<br></code></pre></td></tr></table></figure><p><img src="https://pic1.imgdb.cn/item/677e0d31d0e0a243d4f1c50e.png" alt=""></p><p>可以看到，在加载<code>libmsaoaidsec.so</code>后，<code>frida</code>挂掉了</p><p>现在直接注入我们的线程替换脚本，看看这个so加载的线程</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">function</span> <span class="hljs-title function_">check_pthread_create</span>(<span class="hljs-params">name = <span class="hljs-literal">null</span></span>) &#123;<br>    <span class="hljs-keyword">var</span> pthread_create_addr = <span class="hljs-title class_">Module</span>.<span class="hljs-title function_">findExportByName</span>(<span class="hljs-literal">null</span>, <span class="hljs-string">&#x27;pthread_create&#x27;</span>);<br>  <br>    <span class="hljs-keyword">var</span> pthread_create = <span class="hljs-keyword">new</span> <span class="hljs-title class_">NativeFunction</span>(pthread_create_addr, <span class="hljs-string">&quot;int&quot;</span>, [<span class="hljs-string">&quot;pointer&quot;</span>, <span class="hljs-string">&quot;pointer&quot;</span>, <span class="hljs-string">&quot;pointer&quot;</span>, <span class="hljs-string">&quot;pointer&quot;</span>]);<br>    <span class="hljs-title class_">Interceptor</span>.<span class="hljs-title function_">replace</span>(pthread_create_addr, <span class="hljs-keyword">new</span> <span class="hljs-title class_">NativeCallback</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params">parg0, parg1, parg2, parg3</span>) &#123;<br>        <span class="hljs-keyword">var</span> <span class="hljs-variable language_">module</span> = <span class="hljs-title class_">Process</span>.<span class="hljs-title function_">findModuleByAddress</span>(parg2)<br>        <span class="hljs-keyword">var</span> so_base = <span class="hljs-variable language_">module</span>.<span class="hljs-property">base</span>;<br>        <span class="hljs-keyword">var</span> off = <span class="hljs-string">&quot;0x&quot;</span> + parg2.<span class="hljs-title function_">sub</span>(so_base).<span class="hljs-title function_">toString</span>(<span class="hljs-number">16</span>)<br>        <span class="hljs-keyword">var</span> so_name = <span class="hljs-variable language_">module</span>.<span class="hljs-property">name</span>;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(so_name, off, parg3)<br><br>        <span class="hljs-keyword">return</span> <span class="hljs-title function_">pthread_create</span>(parg0, parg1, parg2, parg3);<br>        <br>    <br>    &#125;, <span class="hljs-string">&quot;int&quot;</span>, [<span class="hljs-string">&quot;pointer&quot;</span>, <span class="hljs-string">&quot;pointer&quot;</span>, <span class="hljs-string">&quot;pointer&quot;</span>, <span class="hljs-string">&quot;pointer&quot;</span>]))<br>&#125;<br><span class="hljs-title function_">setImmediate</span>(check_pthread_create)<br></code></pre></td></tr></table></figure><p><img src="https://pic1.imgdb.cn/item/677e0e0cd0e0a243d4f1c523.png" alt=""></p><p>这里创建了三个线程，内存偏移量为<code>0x1c544</code>，<code>0x1b8d4</code>，<code>0x26e5c</code>，<strong>注：画线的地方不是检测线程，请看清楚so名字</strong></p><p>现在回去改<code>dlopen</code>，如果这个<code>so</code>一加载就<code>nop</code>线程</p><p><img src="https://pic1.imgdb.cn/item/677e0fe8d0e0a243d4f1c56c.png" alt=""></p><p>结果不尽人意，这里获取不了<code>libmsaoaidsec.so</code>的基址</p><p>因为安卓加载so整个流程如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">linker-&gt;init_proc -&gt;JNI_OnLoad <br></code></pre></td></tr></table></figure><p>从<code>dlopen</code>获取基址，是要等<code>jni</code>加载后的，但是现在<code>jni</code>还没加载我们的<code>frida</code>就被杀掉了，说明检测在<code>init_proc</code>里，我们需要寻找一个合适的hook时机</p><p>现在我们打开<code>ida</code>，把so拖进去，静态分析</p><p><img src="https://pic1.imgdb.cn/item/677e11a8d0e0a243d4f1c5dd.png" alt=""></p><p>这里我尝试过寻找发起线程的地方，但从导入函数并没有看到，<code>pthread_create</code>相关字样，他应该是间接调用的，但是我们已经知道了线程的偏移量，所以这里不太重要了</p><p><img src="https://pic1.imgdb.cn/item/677e17fdd0e0a243d4f1c73f.png" alt=""></p><p>接下来我们继续看<code>init_proc</code> ,这里被<code>ollvm</code>混淆了，转成伪<code>c</code>代码，通过交叉引用，可以得到他是先执行<code>sub_123f0</code></p><p><img src="https://pic1.imgdb.cn/item/677e13fdd0e0a243d4f1c62a.png" alt=""></p><p>可以看到<code>sub_123f0</code>，<code>_system_property_get</code>调用了一个<code>ro.build.version.sdk</code>，这里我们从注入<code>system_property_get</code>是个不错的选择，因为他是在<code>init.proc</code>阶段执行的</p><p><img src="https://pic1.imgdb.cn/item/677e1473d0e0a243d4f1c63d.png" alt=""></p><p>现在我们去hook<code>_system_property_get</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">function</span> <span class="hljs-title function_">locate_init</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">let</span> r = <span class="hljs-literal">null</span><br>    <span class="hljs-title class_">Interceptor</span>.<span class="hljs-title function_">attach</span>(<span class="hljs-title class_">Module</span>.<span class="hljs-title function_">findExportByName</span>(<span class="hljs-literal">null</span>, <span class="hljs-string">&quot;__system_property_get&quot;</span>),<br>        &#123;<br>            <span class="hljs-attr">onEnter</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">args</span>) &#123;<br>                <span class="hljs-keyword">var</span> name = args[<span class="hljs-number">0</span>];<br>                <span class="hljs-keyword">if</span> (name !== <span class="hljs-literal">undefined</span> &amp;&amp; name != <span class="hljs-literal">null</span>) &#123;<br>                    name = <span class="hljs-title function_">ptr</span>(name).<span class="hljs-title function_">readCString</span>();<br>                    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(name)<br>                    <span class="hljs-keyword">if</span> (name.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;ro.build.version.sdk&quot;</span>) &gt;= <span class="hljs-number">0</span>) &#123;<br>                       <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-title class_">Process</span>.<span class="hljs-title function_">findModuleByName</span>(<span class="hljs-string">&quot;libmsaoaidsec.so&quot;</span>).<span class="hljs-property">base</span>)<br>                    &#125;<br>                &#125;<br>            &#125;<br>        &#125;<br>    );<br>&#125;<br><br><span class="hljs-title class_">Interceptor</span>.<span class="hljs-title function_">attach</span>(<span class="hljs-title class_">Module</span>.<span class="hljs-title function_">findExportByName</span>(<span class="hljs-literal">null</span>, <span class="hljs-string">&quot;android_dlopen_ext&quot;</span>),<br>&#123;<br>    <span class="hljs-attr">onEnter</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">args</span>) &#123;<br>        <span class="hljs-keyword">var</span> pathptr = args[<span class="hljs-number">0</span>];<br>        <span class="hljs-keyword">if</span> (pathptr !== <span class="hljs-literal">undefined</span> &amp;&amp; pathptr != <span class="hljs-literal">null</span>) &#123;<br>            <span class="hljs-keyword">var</span> path = <span class="hljs-title function_">ptr</span>(pathptr).<span class="hljs-title function_">readCString</span>();<br>            <span class="hljs-keyword">if</span>(path.<span class="hljs-title function_">search</span>(<span class="hljs-string">&quot;libmsaoaidsec.so&quot;</span>) != -<span class="hljs-number">1</span>)&#123;<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">hook</span> = <span class="hljs-literal">true</span><br>                <span class="hljs-title function_">locate_init</span>()<br>            &#125;<br>        &#125;<br>    &#125;<br>&#125;<br>);<br></code></pre></td></tr></table></figure><p>输出如下，我们成功获取到了基址</p><p><img src="https://pic1.imgdb.cn/item/677e16ffd0e0a243d4f1c710.png" alt=""></p><p>那我们就<code>nop</code>上面提到的偏移量吧</p><p><img src="https://pic1.imgdb.cn/item/677e178bd0e0a243d4f1c724.png" alt=""></p><p>完美绕过<code>frida</code>检测</p><hr><h2 id="完整代码">完整代码</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">function</span> <span class="hljs-title function_">locate_init</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">let</span> r = <span class="hljs-literal">null</span><br>    <span class="hljs-title class_">Interceptor</span>.<span class="hljs-title function_">attach</span>(<span class="hljs-title class_">Module</span>.<span class="hljs-title function_">findExportByName</span>(<span class="hljs-literal">null</span>, <span class="hljs-string">&quot;__system_property_get&quot;</span>),<br>        &#123;<br>            <span class="hljs-attr">onEnter</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">args</span>) &#123;<br>                <span class="hljs-keyword">var</span> name = args[<span class="hljs-number">0</span>];<br>                <span class="hljs-keyword">if</span> (name !== <span class="hljs-literal">undefined</span> &amp;&amp; name != <span class="hljs-literal">null</span>) &#123;<br>                    name = <span class="hljs-title function_">ptr</span>(name).<span class="hljs-title function_">readCString</span>();<br>                    <span class="hljs-comment">//console.log(name)</span><br>                    <span class="hljs-keyword">if</span> (name.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;ro.build.version.sdk&quot;</span>) &gt;= <span class="hljs-number">0</span>) &#123;<br>                      <span class="hljs-keyword">var</span>  r = <span class="hljs-title class_">Process</span>.<span class="hljs-title function_">findModuleByName</span>(<span class="hljs-string">&quot;libmsaoaidsec.so&quot;</span>)<br>                      <span class="hljs-title function_">nop_64</span>(r.<span class="hljs-property">base</span>.<span class="hljs-title function_">add</span>(<span class="hljs-string">&quot;0x1c544&quot;</span>))<br>                      <span class="hljs-title function_">nop_64</span>(r.<span class="hljs-property">base</span>.<span class="hljs-title function_">add</span>(<span class="hljs-string">&quot;0x1b8d4&quot;</span>))<br>                      <span class="hljs-title function_">nop_64</span>(r.<span class="hljs-property">base</span>.<span class="hljs-title function_">add</span>(<span class="hljs-string">&quot;0x26e5c&quot;</span>))<br>                    &#125;<br>                &#125;<br>            &#125;<br>        &#125;<br>    );<br>&#125;<br><br><span class="hljs-title class_">Interceptor</span>.<span class="hljs-title function_">attach</span>(<span class="hljs-title class_">Module</span>.<span class="hljs-title function_">findExportByName</span>(<span class="hljs-literal">null</span>, <span class="hljs-string">&quot;android_dlopen_ext&quot;</span>),<br>&#123;<br>    <span class="hljs-attr">onEnter</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">args</span>) &#123;<br>        <span class="hljs-keyword">var</span> pathptr = args[<span class="hljs-number">0</span>];<br>        <span class="hljs-keyword">if</span> (pathptr !== <span class="hljs-literal">undefined</span> &amp;&amp; pathptr != <span class="hljs-literal">null</span>) &#123;<br>            <span class="hljs-keyword">var</span> path = <span class="hljs-title function_">ptr</span>(pathptr).<span class="hljs-title function_">readCString</span>();<br>            <span class="hljs-keyword">if</span>(path.<span class="hljs-title function_">search</span>(<span class="hljs-string">&quot;libmsaoaidsec.so&quot;</span>) != -<span class="hljs-number">1</span>)&#123;<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">hook</span> = <span class="hljs-literal">true</span><br>                <span class="hljs-title function_">locate_init</span>()<br>            &#125;<br>        &#125;<br>    &#125;<br>&#125;<br>);<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">nop_64</span>(<span class="hljs-params">addr</span>) &#123;<br>    <span class="hljs-title class_">Memory</span>.<span class="hljs-title function_">protect</span>(addr, <span class="hljs-number">4</span> , <span class="hljs-string">&#x27;rwx&#x27;</span>);<br>    <span class="hljs-keyword">var</span> w = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Arm64Writer</span>(addr);<br>    w.<span class="hljs-title function_">putRet</span>();<br>    w.<span class="hljs-title function_">flush</span>();<br>    w.<span class="hljs-title function_">dispose</span>();<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>app逆向</category>
      
      <category>学习类</category>
      
    </categories>
    
    
    <tags>
      
      <tag>安卓逆向</tag>
      
      <tag>frida</tag>
      
      <tag>JavaScript</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>安卓入门逆向实战番外篇(一) 某数日软件 破解内购，过服务器验证，对抗dex混淆</title>
    <link href="/2024/10/16/an_zhuo_ni_xiang_shi_zhan_fan_wai_1/"/>
    <url>/2024/10/16/an_zhuo_ni_xiang_shi_zhan_fan_wai_1/</url>
    
    <content type="html"><![CDATA[<p>时间过去一周多了，我们今天就来搞个番外篇，研究一下<strong>倒数日</strong>这个<code>app</code>的逆向获取<code>vip</code>的方法</p><p>那么搞完番外篇就到去除<code>开屏广告</code>的教程了，那我们废话不多说，开始今天的教程</p><h3 id="准备工作">准备工作</h3><span id="more"></span><ul><li>一台电脑</li><li><code>jadx</code></li><li>一台已<strong>root</strong>的手机</li><li><code>frida</code></li></ul><p><img src="https://pic.imgdb.cn/item/670a55b2d29ded1a8cc99fa4.png" alt=""></p><hr><h2 id="查壳">查壳</h2><p>这里我们可以用<code>appmsg</code>这个项目<a href="https://github.com/sulab999/AppMessenger?tab=readme-ov-file">点我</a>进行软件的查壳，如果感觉使用麻烦，可以直接使用<code>mt管理器</code>，那我们把安装包拷贝到手机上看看</p><blockquote><p>注：我这里下错了版本，这个是旧版本，不是最新版</p></blockquote><p><img src="https://pic.imgdb.cn/item/670a56bcd29ded1a8ccae34b.png" alt=""></p><p>可以看到是未加固状态的，这里我们要记住<code>com.clover.daysmatter</code>这个包名，等下<code>hook</code>要用到</p><hr><h2 id="反编译分析">反编译分析</h2><p>首先是安装这个<code>app</code>，打开mt管理器的<code>activity记录</code>，记录<code>app</code>所在的组件</p><p><img src="https://pic.imgdb.cn/item/670a5897d29ded1a8ccd8f5f.png" alt=""></p><p>打开这个<code>app</code>，同时<code>启动服务</code>，我们尝试在没有会员的情况下，使用会员功能</p><p><img src="https://pic.imgdb.cn/item/670a5935d29ded1a8cce58d4.jpg" alt=""></p><p>接下来轮到<code>jadx</code>出场了，直接搜索一下相关的字符，查看是否能出东西</p><p><img src="https://pic.imgdb.cn/item/670a59c4d29ded1a8ccf0a1c.png" alt=""></p><p>可以看到，是搜索不出的，包括<code>vip</code>这个字眼也是，我们把视角回到<code>mt管理器上的 0oo0000</code>，搜索一下</p><p><img src="https://pic.imgdb.cn/item/670a5a8fd29ded1a8cd01a86.png" alt=""></p><p>找到这里来了，我们直接用<code>frida</code>hook一下</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">function</span> <span class="hljs-title function_">hook_test</span>(<span class="hljs-params"></span>)&#123;<br>    <span class="hljs-title class_">Java</span>.<span class="hljs-title function_">perform</span>(<br>        <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-keyword">var</span> r = <span class="hljs-title class_">Java</span>.<span class="hljs-title function_">use</span>(<span class="hljs-string">&quot;com.clover.daysmatter.OO0000O&quot;</span>)<br>            r.<span class="hljs-property">OooO0O0</span>.<span class="hljs-property">implementation</span> = <span class="hljs-keyword">function</span> (<span class="hljs-params">msg</span>) &#123;<br>                <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;函数被调用&quot;</span>)<br>                <span class="hljs-keyword">var</span> t = <span class="hljs-variable language_">this</span>.<span class="hljs-title class_">OooO0O0</span>(msg)<br>                <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;函数返回了&quot;</span>+ t)<br>                <span class="hljs-keyword">return</span> t<br>            &#125;<br>        &#125;<br>    )<br>&#125;<br><span class="hljs-title function_">setImmediate</span>(<span class="hljs-title function_">hook_test</span>())<br></code></pre></td></tr></table></figure><p>函数压根没触发</p><p><img src="https://pic.imgdb.cn/item/670a5c7bd29ded1a8cd2b6bf.png" alt=""></p><p>那么这条线索断了，我们尝试其他方法</p><p>这里我就想开始破解内购了，首先我们先从字符串定位一下，搜索<code>支付成功</code>有关的字眼</p><img src="https://pic.imgdb.cn/item/670f7322d29ded1a8c03594b.jpg" style="zoom:33%;" /><p>购买成功对应着<code>cs_pay_success</code>，那我们就在源代码搜索一下<code>cs_pay_success</code>，发现一个监听支付事件的代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><code class="hljs java">    <span class="hljs-keyword">public</span> <span class="hljs-keyword">final</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">handleMessage</span><span class="hljs-params">(Message message)</span> &#123;<br>        <span class="hljs-comment">// 先传入一个message参数</span><br>        <span class="hljs-comment">// 然后开始定义 str str2 str3</span><br>        <span class="hljs-comment">// str为支付状态 str2是memo str3 是订单号</span><br>        String str;<br>        String str2;<br>        <span class="hljs-keyword">if</span> (message.what == <span class="hljs-number">1</span>) &#123;<br>            <span class="hljs-type">Map</span> <span class="hljs-variable">map</span> <span class="hljs-operator">=</span> (Map) message.obj;<br>            <span class="hljs-type">String</span> <span class="hljs-variable">str3</span> <span class="hljs-operator">=</span> <span class="hljs-literal">null</span>;<br>            <span class="hljs-keyword">if</span> (map == <span class="hljs-literal">null</span>) &#123;<br>                str = <span class="hljs-literal">null</span>;<br>                str2 = <span class="hljs-literal">null</span>;<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                str = <span class="hljs-literal">null</span>;<br>                str2 = <span class="hljs-literal">null</span>;<br>                <span class="hljs-keyword">for</span> (String str4 : map.keySet()) &#123;<br>                    <span class="hljs-keyword">if</span> (TextUtils.equals(str4, <span class="hljs-string">&quot;resultStatus&quot;</span>)) &#123; <br>                        str = (String) map.get(str4); <span class="hljs-comment">// 获取最后的支付结果</span><br>                    &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (TextUtils.equals(str4, <span class="hljs-string">&quot;result&quot;</span>)) &#123;<br>                        str3 = (String) map.get(str4);<br>                    &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (TextUtils.equals(str4, <span class="hljs-string">&quot;memo&quot;</span>)) &#123;<br>                    &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (TextUtils.equals(str4, <span class="hljs-string">&quot;outTradeNumber&quot;</span>)) &#123;<br>                        str2 = (String) map.get(str4);<br>                    &#125;<br>                &#125;<br>            &#125;<br>            <span class="hljs-type">C0567o0</span> <span class="hljs-variable">c0567o0</span> <span class="hljs-operator">=</span> C0567o0.<span class="hljs-built_in">this</span>;<br>            c0567o0.getClass();<br>            <span class="hljs-keyword">if</span> (TextUtils.equals(str, <span class="hljs-string">&quot;9000&quot;</span>)) &#123; <span class="hljs-comment">// 可以看到 当str为9000就判断为支付成功</span><br>                Toast.makeText(c0567o0.OooO00o, c0567o0.OooO00o.getString(com.clover.clover_cloud.R$string.cs_pay_success), <span class="hljs-number">1</span>).show(); <span class="hljs-comment">// 这里为支付成功</span><br>                <span class="hljs-type">CSAlipaySuccessModel</span> <span class="hljs-variable">cSAlipaySuccessModel</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">CSAlipaySuccessModel</span>(c0567o0.OooO0Oo, c0567o0.OooO0o0, str3, str2);<br>                <span class="hljs-type">Context</span> <span class="hljs-variable">context</span> <span class="hljs-operator">=</span> c0567o0.OooO00o;<br>                <span class="hljs-type">String</span> <span class="hljs-variable">json</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Gson</span>().toJson(cSAlipaySuccessModel);<br>                C2072o0OO0O0.OooOO0O = json;<br>                C2072o0OO0O0.OooO00o(context).edit().putString(<span class="hljs-string">&quot;CS_PREFERENCE_KEY_ALI_RESULT_INFO&quot;</span>, json).apply();<br>                <span class="hljs-type">String</span> <span class="hljs-variable">sku</span> <span class="hljs-operator">=</span> cSAlipaySuccessModel.getSku();<br>                <span class="hljs-type">C2116o0OOo000</span> <span class="hljs-variable">OooO00o</span> <span class="hljs-operator">=</span> C2116o0OOo000.OooO0oO.OooO00o(c0567o0.OooO00o);<br>                <span class="hljs-type">String</span> <span class="hljs-variable">cSAlipaySuccessModel2</span> <span class="hljs-operator">=</span> cSAlipaySuccessModel.toString();<br>                C3065oOo00OO.OooO0o(sku, <span class="hljs-string">&quot;sku&quot;</span>);<br>                C3065oOo00OO.OooO0o(cSAlipaySuccessModel2, <span class="hljs-string">&quot;purchaseInfo&quot;</span>);<br>                OooO00o.OooO00o.getApplicationContext().getSharedPreferences(<span class="hljs-string">&quot;PREFERENCE_NAME_LOCAL_PURCHASE&quot;</span>, <span class="hljs-number">0</span>).edit().putString(sku, cSAlipaySuccessModel2).apply();<br>                c0567o0.OooO0O0(cSAlipaySuccessModel, c0567o0.OooO0OO);<br>                <span class="hljs-keyword">return</span>;<br>            &#125;<br>            Toast.makeText(c0567o0.OooO00o, c0567o0.OooO00o.getString(com.clover.clover_cloud.R$string.cs_pay_failed), <span class="hljs-number">1</span>).show(); <span class="hljs-comment">// 否则为支付失败</span><br>        &#125;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>因此我们可以使用<code>android.os.Message</code>和<code>java.util.HashMap</code>重构对象，以下是<code>frida</code>代码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">function</span> <span class="hljs-title function_">hook_test</span>(<span class="hljs-params"></span>)&#123;<br>    <span class="hljs-title class_">Java</span>.<span class="hljs-title function_">perform</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>        <span class="hljs-keyword">var</span> <span class="hljs-title class_">OooO00</span>o = <span class="hljs-title class_">Java</span>.<span class="hljs-title function_">use</span>(<span class="hljs-string">&quot;com.clover.daysmatter.o0$OooO00o&quot;</span>);<br>        <span class="hljs-keyword">var</span> <span class="hljs-title class_">Message</span> = <span class="hljs-title class_">Java</span>.<span class="hljs-title function_">use</span>(<span class="hljs-string">&quot;android.os.Message&quot;</span>);<br>        <span class="hljs-keyword">var</span> k = <span class="hljs-title class_">Java</span>.<span class="hljs-title function_">use</span>(<span class="hljs-string">&quot;java.util.HashMap&quot;</span>)<br>        <span class="hljs-title class_">OooO00</span>o[<span class="hljs-string">&quot;handleMessage&quot;</span>].<span class="hljs-property">implementation</span> = <span class="hljs-keyword">function</span> (<span class="hljs-params">msg</span>) &#123;<br>            <span class="hljs-keyword">var</span> t = <span class="hljs-title class_">Java</span>.<span class="hljs-title function_">cast</span>(msg, <span class="hljs-title class_">Message</span>)<br>            <span class="hljs-keyword">var</span> u = <span class="hljs-title class_">Java</span>.<span class="hljs-title function_">cast</span>(t.<span class="hljs-property">obj</span>.<span class="hljs-property">value</span>, k)<br>            u.<span class="hljs-title function_">put</span>(<span class="hljs-string">&quot;resultStatus&quot;</span>, <span class="hljs-string">&quot;9000&quot;</span>);<br>            <span class="hljs-variable language_">this</span>[<span class="hljs-string">&quot;handleMessage&quot;</span>](msg);<br>        &#125;;<br>    &#125;);<br>&#125;<br></code></pre></td></tr></table></figure><p>测试一下，vip到手了</p><p><img src="https://pic.imgdb.cn/item/670f778ad29ded1a8c06a5d1.png" alt=""></p><p>但是还没完，发现这个<code>app</code>还有二次验证，因此我们继续逆向</p><hr><h2 id="网络验证">网络验证</h2><p>对于这种情况，我们打开抓包工具看看，配合<code>ssl</code>关闭验证模块，查看一下网络请求，得知了他请求了一个获取订单信息的<code>api</code></p><p><img src="https://pic.imgdb.cn/item/670f7897d29ded1a8c078910.png" alt=""></p><p>返回内容是</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;products_info&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;unified_receipts_info&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;success&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">0</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p><img src="https://pic.imgdb.cn/item/670f888fd29ded1a8c1a2753.png" alt=""></p><p>通过定位字符串，但是这里混淆太厉害了，而且验证成功后无返回结果</p><blockquote><p>注：这个<code>app</code>里的资源文件 反编译出来的<code>验证成功</code>字符串与支付无关，不要被混乱了</p></blockquote><hr><h2 id="换思路">换思路</h2><p>由于<code>app</code>在启动的时候，就会检查内购支付完成，因此我们可以<code>hook</code>启动的代码，搜索一下<code>网络验证失败</code>的字符串，定位到</p><p><img src="https://pic.imgdb.cn/item/670f8976d29ded1a8c1b21d4.png" alt=""></p><p>以下是源码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">OooO0O0</span><span class="hljs-params">(CSMarkPaidEntity cSMarkPaidEntity)</span> &#123;<br>       <span class="hljs-keyword">final</span> <span class="hljs-type">C2647oO0Oo0oo</span> <span class="hljs-variable">c2647oO0Oo0oo</span> <span class="hljs-operator">=</span> (C2647oO0Oo0oo) <span class="hljs-built_in">this</span>.OooO0O0;<br>       C3065oOo00OO.OooO0o(c2647oO0Oo0oo, <span class="hljs-string">&quot;$onPaymentFinishedListener&quot;</span>);<br>       <span class="hljs-keyword">final</span> <span class="hljs-type">C2116o0OOo000</span> <span class="hljs-variable">c2116o0OOo000</span> <span class="hljs-operator">=</span> (C2116o0OOo000) <span class="hljs-built_in">this</span>.OooO0OO;<br>       C3065oOo00OO.OooO0o(c2116o0OOo000, <span class="hljs-string">&quot;this$0&quot;</span>);<br>       <span class="hljs-keyword">final</span> <span class="hljs-type">C4044oooo000</span> <span class="hljs-variable">c4044oooo000</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">C4044oooo000</span>();<br>       <span class="hljs-keyword">final</span> ?? obj = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Object</span>();<br>       <span class="hljs-keyword">if</span> (cSMarkPaidEntity != <span class="hljs-literal">null</span> &amp;&amp; cSMarkPaidEntity.getSuccess()) &#123; <span class="hljs-comment">// 这里有个get_success 很可疑 我们进去hook一下</span><br>           c4044oooo000.OooO = String.valueOf(cSMarkPaidEntity.getProducts_info());<br>           obj.OooO = <span class="hljs-literal">true</span>;<br>       &#125;<br>       o0OO0O0O.OooO0O0().execute(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Runnable</span>() &#123; <span class="hljs-comment">// from class: com.clover.daysmatter.o0OOOooo</span><br>           <span class="hljs-comment">/* JADX WARN: Multi-variable type inference failed */</span><br>           <span class="hljs-comment">/* JADX WARN: Type inference failed for: r1v6, types: [java.lang.Object, java.lang.Runnable] */</span><br>           <span class="hljs-meta">@Override</span> <span class="hljs-comment">// java.lang.Runnable</span><br>           <span class="hljs-keyword">public</span> <span class="hljs-keyword">final</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">run</span><span class="hljs-params">()</span> &#123;<br>               <span class="hljs-type">C2647oO0Oo0oo</span> <span class="hljs-variable">c2647oO0Oo0oo2</span> <span class="hljs-operator">=</span> C2647oO0Oo0oo.<span class="hljs-built_in">this</span>;<br>               C3065oOo00OO.OooO0o(c2647oO0Oo0oo2, <span class="hljs-string">&quot;$onPaymentFinishedListener&quot;</span>);<br>               <span class="hljs-type">C3642ooO00ooO</span> <span class="hljs-variable">c3642ooO00ooO</span> <span class="hljs-operator">=</span> obj;<br>               C3065oOo00OO.OooO0o(c3642ooO00ooO, <span class="hljs-string">&quot;$success&quot;</span>);<br>               <span class="hljs-type">C4044oooo000</span> <span class="hljs-variable">c4044oooo0002</span> <span class="hljs-operator">=</span> c4044oooo000;<br>               C3065oOo00OO.OooO0o(c4044oooo0002, <span class="hljs-string">&quot;$text&quot;</span>);<br>               <span class="hljs-type">C2116o0OOo000</span> <span class="hljs-variable">c2116o0OOo0002</span> <span class="hljs-operator">=</span> c2116o0OOo000;<br>               C3065oOo00OO.OooO0o(c2116o0OOo0002, <span class="hljs-string">&quot;this$0&quot;</span>);<br>               <span class="hljs-type">boolean</span> <span class="hljs-variable">z</span> <span class="hljs-operator">=</span> c3642ooO00ooO.OooO;<br>               Looper.getMainLooper();<br>               Looper.myLooper();<br>               <span class="hljs-type">Application</span> <span class="hljs-variable">application</span> <span class="hljs-operator">=</span> (Application) c2647oO0Oo0oo2.OooO0O0;<br>               <span class="hljs-keyword">if</span> (z) &#123;<br>                   C3854ooOoO00.OooO0oO(application, <span class="hljs-literal">true</span>);<br>               &#125; <span class="hljs-keyword">else</span> &#123;<br>                   Toast.makeText(application, application.getString(R.string.cs_check_ali_pay_failed), <span class="hljs-number">1</span>).show();<br>               &#125;<br>               C0580p0.OooOOO0(<span class="hljs-string">&quot;pay_consumed&quot;</span>, <span class="hljs-string">&quot;alipay_success&quot;</span>, BuildConfig.FLAVOR); <span class="hljs-comment">// 支付成功</span><br>               c2116o0OOo0002.OooO0O0();<br>               C2447o0ooOOOO.OooO0O0().execute(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Object</span>());<br>           &#125;<br>       &#125;);<br>   &#125;<br><br></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">function</span> <span class="hljs-title function_">main</span>(<span class="hljs-params"></span>)&#123;<br>    <span class="hljs-title class_">Java</span>.<span class="hljs-title function_">perfrom</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-keyword">let</span> <span class="hljs-title class_">CSMarkPaidEntity</span> =<span class="hljs-title class_">Java</span>.<span class="hljs-title function_">use</span>(<span class="hljs-string">&quot;com.clover.clover_cloud.models.user_entities.CSMarkPaidEntity&quot;</span>);<br>        <span class="hljs-title class_">CSMarkPaidEntity</span>[<span class="hljs-string">&quot;getSuccess&quot;</span>].<span class="hljs-property">implementation</span> = <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">`CSMarkPaidEntity.getSuccess is called`</span>);<br>            <span class="hljs-keyword">let</span> result = <span class="hljs-variable language_">this</span>[<span class="hljs-string">&quot;getSuccess&quot;</span>]();<br>            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">`CSMarkPaidEntity.getSuccess result=<span class="hljs-subst">$&#123;result&#125;</span>`</span>);<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>        &#125;;<br>    &#125;)<br>&#125;<br></code></pre></td></tr></table></figure><p>最后<code>vip</code>验证成功，各项功能正常</p><p><img src="https://pic.imgdb.cn/item/670f8a74d29ded1a8c1c3589.png" alt=""></p>]]></content>
    
    
    <categories>
      
      <category>app逆向</category>
      
      <category>日常类</category>
      
    </categories>
    
    
    <tags>
      
      <tag>安卓逆向</tag>
      
      <tag>frida</tag>
      
      <tag>JavaScript</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>安卓入门逆向实战第一期，破解两个日历软件vip</title>
    <link href="/2024/10/04/an_zhuo_ni_xiang_shi_zhan_1/"/>
    <url>/2024/10/04/an_zhuo_ni_xiang_shi_zhan_1/</url>
    
    <content type="html"><![CDATA[<h2 id="前言">前言</h2><p>今天我们来讲安卓逆向，本期博客讲两种最基础的破解方法，两个日历软件的高级会员获取</p><p>准备如下</p><span id="more"></span><ul><li>一台电脑</li><li><code>frida</code>框架</li><li>一台已<code>root</code>的手机</li><li><code>jadx</code></li><li>抓包软件</li></ul><blockquote><p>注：本博文仅研究逆向学习之类的方法，如果侵犯你的权益，请第一时间找我删除文章</p></blockquote><hr><h2 id="365日历">365日历</h2><p>我们首先打开<code>app</code>，登录之后要开通<code>vip</code>，我们打开抓包软件去查看</p><p><img src="https://pic.imgdb.cn/item/66fe2ea30a206445e3a795c9.png" alt=""></p><p>可以看到这里抓包出来有两个获取<code>vip</code>数据包的，这里我用黄鸟修改了<strong>返回数据</strong>，但是开屏广告还是存在</p><p>而且用抓包的方法破解，这样使用起来不方便，每次打开<code>app</code>都要开抓包，所以接下来我们使用<code>frida</code></p><hr><h2 id="frida-hook">frida_hook</h2><p>在进行<strong>hook</strong>，进行hook之前，我们首先要找到离方法最近的地方，这样<strong>hook</strong>起来容易，而且资源开销也不大，我们把<code>app</code>拆包</p><p>先去查一下有没有加固，我这里用的是<code>app_msg</code><a href="https://github.com/sulab999/AppMessenger?tab=readme-ov-file">点我</a>，可以看到没有加固的</p><p><img src="https://pic.imgdb.cn/item/66fe31e70a206445e3aa59d9.png" alt=""></p><p>好，接下来我们使用<code>jadx</code>，对<code>app</code>，进行<code>反编译</code>操作，我们的目标是定位<code>vip</code>的判断逻辑</p><p><img src="https://pic.imgdb.cn/item/66fe330e0a206445e3ab9c06.png" alt=""></p><p>点进去，第二个</p><p><img src="https://pic.imgdb.cn/item/66fe334d0a206445e3abcf67.png" alt=""></p><p>从逻辑上推断，他应该是访问了一个<code>api</code>，然后开始解析数据，通过刚才的黄鸟抓包，我们知道改数据包是走不通的，那有没有更好的方法呢？</p><p>我们可以直接打开<code>app</code>，在未开会员情况下，去使用会员功能</p><img src="https://pic.imgdb.cn/item/66fe33d10a206445e3ac456c.png" style="zoom: 33%;" /><p>有个弹窗，那我们就从弹窗下手吧，去搜索对应的字符串</p><p><img src="https://pic.imgdb.cn/item/66fe34420a206445e3acaa62.png" alt=""></p><p>从这个<code>onclick</code>上看是点击后触发的代码，那么点击的时候肯定会判断是不是<code>vip</code>，所以我们点进去，看下内部结构</p><p><img src="https://pic.imgdb.cn/item/66fe349d0a206445e3acee3e.png" alt=""></p><p>这里做了一个基础的判断，如果<code>o</code>返回<code>false</code>就是提示开通会员，那我们把<code>o</code>返回成<code>true</code>就行，按住<code>ctrl</code>进入<code>o</code>类</p><p><img src="https://pic.imgdb.cn/item/66fe35030a206445e3ad4320.png" alt=""></p><p>这里的<code>o</code>函数返回了一个<code>bool</code>类型的数据，而且不需要<strong>传参</strong>，那我们开始写<code>hook</code>代码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">function</span> <span class="hljs-title function_">hook_vip</span>(<span class="hljs-params"></span>)&#123;<br>    <span class="hljs-title class_">Java</span>.<span class="hljs-title function_">perform</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>        <span class="hljs-keyword">let</span> v0 = <span class="hljs-title class_">Java</span>.<span class="hljs-title function_">use</span>(<span class="hljs-string">&quot;com.when.coco.o0.v0&quot;</span>); <span class="hljs-comment">// 首先指定好包名，从package xxxx 就能看到 进入class</span><br>        <span class="hljs-keyword">if</span>(v0)&#123;<br>            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;hook start......&quot;</span>)<br>            v0.<span class="hljs-property">o</span>.<span class="hljs-property">implementation</span> = <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123; <span class="hljs-comment">// 拦截o函数 </span><br>                <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;hook vip success!&quot;</span>)<br>                <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>; <span class="hljs-comment">// 修改返回值</span><br>            &#125;;<br>        &#125;<br>    &#125;);<br>&#125;<br><span class="hljs-title function_">setImmediate</span>(<span class="hljs-title function_">hook_vip</span>())<br></code></pre></td></tr></table></figure><p>这样就大功告成了</p><p><img src="https://pic.imgdb.cn/item/66fe36ae0a206445e3aeaba1.png" alt=""></p><hr><h2 id="一叶日历">一叶日历</h2><p>首先先查壳</p><p><img src="https://pic.imgdb.cn/item/66fe693b335a200d6a8e2af2.png" alt=""></p><p>也是没加固的，那我们直接用<code>jadx</code>反编译</p><p><img src="https://pic.imgdb.cn/item/66fe69f6335a200d6a8eccdd.png" alt=""></p><p>遇到混淆了，我们不用慌，直接打开反混淆</p><p><img src="https://pic.imgdb.cn/item/66fe6a48335a200d6a8f1a21.png" alt=""></p><p>打开<code>app</code>，点开高级会员，有给钱，也有使用激活码的，我们就从激活码这里下手，内购太难用了，先随便输入一个激活码，返回找不到激活码</p><p><img src="https://pic.imgdb.cn/item/66fe6b6a335a200d6a903115.png" alt=""></p><p><img src="https://pic.imgdb.cn/item/66fe6dab335a200d6a920aad.png" alt=""></p><p>并没有搜到，看来他对字符串也做了处理，那我们就搜一下其他的字符</p><p><img src="https://pic.imgdb.cn/item/66fe6e03335a200d6a9252e6.png" alt=""></p><p>字符都是从这个一个<code>getString</code>类获取的，我们断进去</p><p><img src="https://pic.imgdb.cn/item/66fe6e53335a200d6a9296e1.png" alt=""></p><p>发现这个是传递了一个id，然后返回字符的，那我们直接hook看一下</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">function</span> <span class="hljs-title function_">hook_main</span>(<span class="hljs-params"></span>)&#123;<br>    <span class="hljs-title class_">Java</span>.<span class="hljs-title function_">perform</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<br>        <span class="hljs-keyword">let</span> <span class="hljs-title class_">Fragment</span> = <span class="hljs-title class_">Java</span>.<span class="hljs-title function_">use</span>(<span class="hljs-string">&quot;androidx.fragment.app.Fragment&quot;</span>);<br>        <span class="hljs-title class_">Fragment</span>.<span class="hljs-property">getString</span>.<span class="hljs-title function_">overload</span>(<span class="hljs-string">&#x27;int&#x27;</span>).<span class="hljs-property">implementation</span> = <span class="hljs-keyword">function</span> (<span class="hljs-params">i10</span>) &#123;<br>            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">`Fragment.getString is called: i10=<span class="hljs-subst">$&#123;i10&#125;</span>`</span>);<br>            <span class="hljs-keyword">let</span> result = <span class="hljs-variable language_">this</span>[<span class="hljs-string">&quot;getString&quot;</span>](i10);<br>            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">`Fragment.getString result=<span class="hljs-subst">$&#123;result&#125;</span>`</span>);<br>            <span class="hljs-keyword">return</span> result;<br>        &#125;;<br>    &#125;)<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="https://pic.imgdb.cn/item/66fe6f1e335a200d6a933a62.png" alt=""></p><p>激活码的字符串id也出来了，是一个<code>2131886116</code>，那我们直接搜索这个<code>2131886116</code>，找到对应的字段再去搜索</p><p><img src="https://pic.imgdb.cn/item/66fe6fa5335a200d6a93aac2.png" alt=""></p><p>一个是<code>c</code>类，一个是<code>j</code>类，而且<code>c</code>和<code>j</code>的代码差不多，经过<code>hook</code>程序调用的是<code>j</code>类的代码</p><p><img src="https://pic.imgdb.cn/item/66fe6ff2335a200d6a93e84c.png" alt=""></p><p>但是这里混淆的太厉害了，经过一顿断点都毫无线索，那我们往弹窗上搞呢</p><p>废话不多说，我们直接在没有会员情况下，使用会员的功能</p><p>发现这里有个试用的按钮，那我们直接从试用上下手吧</p><img src="https://pic.imgdb.cn/item/66fe714a335a200d6a950045.png" style="zoom:33%;" /><p>点击试用，发现竟然没有返回东西，可以反编译包里的<code>arsc</code>，得知<strong>试用</strong>的英文是<code>trial</code>，去搜索<code>trial</code></p><p><img src="https://pic.imgdb.cn/item/66ff88b9d29ded1a8ca236b4.png" alt=""></p><p>点这个<code>istrial</code>(意思为是否试用状态)</p><p><img src="https://pic.imgdb.cn/item/66ff8894d29ded1a8ca21383.png" alt="w"></p><p>这里应该是判断是否是<code>vip</code>的代码，我们看这个<code>needShowProDialog</code>代表是否弹窗，那么得到以下结果</p><ul><li><code>C6256a0.f14286a.m25077d()</code> 这个是获取是否为永久会员</li><li><code>isTrial(scene)</code> 这个是获取是否试用会员</li><li><code> C6262d0.f14311a.m25111f().getRewardTime() &gt;= System.currentTimeMillis()</code> 这个是获取会员是否到期，看来这软件之前还不是买永久会员的</li></ul><p>我们进入<code>C6256a0.f14286a.m25077d()</code>，一探究竟</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">final</span> <span class="hljs-type">boolean</span> <span class="hljs-title function_">m25077d</span><span class="hljs-params">()</span> &#123;<br>       <span class="hljs-keyword">return</span> C6262d0.f14311a.m25111f().getIsPro();<br>   &#125;<br></code></pre></td></tr></table></figure><p>这是返回了一个<code>bool</code>类型的参数，我们让他<code>true</code>就代表有会员了，接下来可以写<code>hook</code>代码了</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">function</span> <span class="hljs-title function_">hook_main</span>(<span class="hljs-params"></span>)&#123;<br>    <span class="hljs-title class_">Java</span>.<span class="hljs-title function_">perform</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<br>        <span class="hljs-keyword">let</span> a = <span class="hljs-title class_">Java</span>.<span class="hljs-title function_">use</span>(<span class="hljs-string">&quot;&quot;</span>w5.<span class="hljs-property">a0</span><span class="hljs-string">&quot;);</span><br><span class="hljs-string">        a.d.implementation = function () &#123;</span><br><span class="hljs-string">            return true;</span><br><span class="hljs-string">        &#125;;</span><br><span class="hljs-string">    &#125;)</span><br><span class="hljs-string">&#125;</span><br></code></pre></td></tr></table></figure><p>完事，用<code>frida</code>运行一下就有<code>vip</code>了</p><hr><h2 id="后">后</h2><p>我们现在得知了，<code>vip</code>具体函数的位置，但<code>frida</code>适合临时调试，如果我们要日常使用，这边可以把<code>frida</code>的脚本，转写成<code>lsposed</code>模块</p><p>关于<code>lsp</code>模块的编写，这里篇幅有限</p><p>我这里已经写好了，代码仓库<a href="https://github.com/bingqiu456/xposed_module_hook_vip_test">-&gt;点我</a></p>]]></content>
    
    
    <categories>
      
      <category>app逆向</category>
      
      <category>日常类</category>
      
    </categories>
    
    
    <tags>
      
      <tag>安卓逆向</tag>
      
      <tag>frida</tag>
      
      <tag>JavaScript</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Koishi如何发送纯按钮消息</title>
    <link href="/2024/09/17/koishi_send_keyborad/"/>
    <url>/2024/09/17/koishi_send_keyborad/</url>
    
    <content type="html"><![CDATA[<h2 id="开始之前">开始之前</h2><p>今天我们讲的是，如何在<strong>koishi</strong>发送纯按钮消息，不含<code>Markdown</code></p><p>准备的条件</p><ul><li>一个已通过的按钮消息模板</li><li>一个<strong>QQ</strong>官方<code>bot</code>号</li><li>koishi+onebotv11</li></ul><span id="more"></span><blockquote><p>截至到发稿为止，<code>QQ官方</code>那边<code>按钮</code><strong>主动被动</strong>都不需要<strong>日活</strong>，<code>md</code>主动不需要<strong>日活</strong>被动需要<strong>DAU2000+</strong></p></blockquote><hr><h2 id="发送消息">发送消息</h2><p>首先我们登录<code>QQ</code>开放平台，找到我们通过的按钮消息模板，<a href="https://q.qq.com">点我直达</a>，在高阶能力查看你的按钮消息模板</p><p><img src="https://pic.imgdb.cn/item/66e97bccf21886ccc02887e6.png" alt=""></p><p>确保你要发送的模板处于已通过状态</p><p>这里根据官方文档的<code>api</code>给出，我这里用的是早苗的<code>gsk</code>，发送<code>markdown</code>是</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">[CQ:markdown,data=xxxx]<br></code></pre></td></tr></table></figure><p>这里后面是接<code>base64</code>编码的内容，但是这里编码要指定<code>utf8</code>的，早苗群里的都是<code>py</code>实现，没有<code>ts</code>实现</p><hr><h2 id="成品">成品</h2><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-keyword">import</span> &#123; <span class="hljs-title class_">Buffer</span> &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;buffer&#x27;</span>;<br><span class="hljs-keyword">import</span> &#123; <span class="hljs-title class_">Context</span>, h &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;koishi&#x27;</span>;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">get_keyboard</span>(<span class="hljs-params">id: <span class="hljs-built_in">string</span></span>)&#123;<br>    <span class="hljs-keyword">let</span> data =&#123;<br>        <span class="hljs-string">&quot;markdown&quot;</span>: &#123;<br>            <span class="hljs-string">&quot;template_id&quot;</span>: <span class="hljs-number">1</span>,<br>            <span class="hljs-string">&quot;params&quot;</span>: [&#123;&#125;]<br>        &#125;,<br>        <span class="hljs-string">&quot;keyboard&quot;</span>: &#123;<br>            <span class="hljs-string">&quot;id&quot;</span>: id<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">var</span> jsonStr1 : <span class="hljs-built_in">string</span> = <span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">stringify</span>(data, <span class="hljs-literal">null</span>, <span class="hljs-number">1</span>);<br>    <span class="hljs-keyword">var</span> dataBytes1 : <span class="hljs-title class_">Buffer</span> = <span class="hljs-title class_">Buffer</span>.<span class="hljs-title function_">from</span>(jsonStr1, <span class="hljs-string">&#x27;utf-8&#x27;</span>);<br>    <span class="hljs-keyword">var</span> encodedData1 : <span class="hljs-built_in">string</span> = dataBytes1.<span class="hljs-title function_">toString</span>(<span class="hljs-string">&#x27;base64&#x27;</span>);<br>    <span class="hljs-keyword">return</span> encodedData1<br>&#125;<br><span class="hljs-keyword">export</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">main</span>(<span class="hljs-params">ctx: Context</span>)&#123;<br>    ctx.<span class="hljs-title function_">command</span>(<span class="hljs-string">&quot;测试&quot;</span>)<br>    .<span class="hljs-title function_">action</span>(<span class="hljs-title function_">async</span>(&#123;session&#125;)=&gt;&#123;<br>        <span class="hljs-keyword">await</span> session.<span class="hljs-title function_">send</span>(h.<span class="hljs-title function_">parse</span>(<span class="hljs-string">`[CQ:markdown,data=base64://<span class="hljs-subst">$&#123;get_keyboard(<span class="hljs-string">&quot;1111111_1111111&quot;</span>)&#125;</span>]`</span>))<br>    &#125;)<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="https://pic.imgdb.cn/item/66e98112f21886ccc0333962.png" alt=""></p>]]></content>
    
    
    <categories>
      
      <category>qq机器人</category>
      
      <category>koishi分享</category>
      
    </categories>
    
    
    <tags>
      
      <tag>qq机器人</tag>
      
      <tag>typescript</tag>
      
      <tag>koishi</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>汽水音乐绕ssl验证，抓取歌曲信息-2024</title>
    <link href="/2024/09/15/qishui_music/"/>
    <url>/2024/09/15/qishui_music/</url>
    
    <content type="html"><![CDATA[<p>今天我们来整<strong>汽水音乐</strong>逆向绕过<code>ssl验证</code>抓包，以及抓取歌曲和解析歌曲<code>api</code>的信息，截至到发稿为止，网上的逆向教程比较少</p><span id="more"></span><hr><h2 id="汽水音乐">汽水音乐</h2><p>《汽水音乐》是一款音乐软件，由北京微播视界科技有限公司开发，其实就是抖音干的音乐软件，狗都不用，垃圾<code>app</code>，歌曲不多不少</p><p>先烧钱引流，然后割韭菜</p><p>垃圾<code>app</code>，狗都不用</p><hr><h2 id="环境">环境</h2><ul><li>一台电脑 <strong>装了ida</strong></li><li>一台手机 为了方便调试已<code>root</code></li></ul><hr><h2 id="抓包go">抓包go</h2><p>首先我们打开黄鸟，勾上系统代理，然后你会发现**<code>请求只有两个</code>**，而且响应的信息没啥用，这种大厂<code>APP</code></p><p><img src="https://pic.imgdb.cn/item/66e6e5a9d9c307b7e9dbb829.png" alt="如下图"></p><p>那我们该怎么办，那就搞<code>Android</code>端了</p><p>下载黄鸟手机版，然后去<code>magisk/kernelsu</code>，安装证书模块，博主这里已经安装好了</p><p><img src="https://pic.imgdb.cn/item/66e6e6a7d9c307b7e9dd21b0.jpg" alt=""></p><blockquote><p>注意，如果你是<code>kernelsu</code>用户，记得给黄鸟<code>root</code>权限</p></blockquote><img src="https://pic.imgdb.cn/item/66e6e866d9c307b7e9dfaa55.jpg" style="zoom:40%;" /><p>很不巧，出现了证书错误，这是因为<strong>汽水音乐</strong>使用了固定的证书，这里博主也尝试通过模块关闭<code>ssl</code>验证，但还是不行，看来只能逆向so了</p><blockquote><p>注：证书错误是因为触发了<code>ssl pining</code>，具体可以<a href="https://zhuanlan.zhihu.com/p/58204817">点我了解</a></p></blockquote><hr><h2 id="解决ssl-pining">解决ssl_pining</h2><p>首先在电脑下载汽水音乐的安装包，解压，去<code>lib</code>文件夹</p><p><img src="https://pic.imgdb.cn/item/66e6e95dd9c307b7e9e2b06d.png" alt=""></p><p>前往<code>arm64</code></p><p><img src="https://pic.imgdb.cn/item/66e6e98fd9c307b7e9e3622b.png" alt=""></p><p>找到<code>libsscronet.so</code></p><p><img src="https://pic.imgdb.cn/item/66e6e9d5d9c307b7e9e4633c.png" alt=""></p><p>打开<code>ida</code>，加载这个so文件</p><p><img src="https://pic.imgdb.cn/item/66e6ea21d9c307b7e9e599d2.png" alt=""></p><p>等到反编译完成</p><p>点击<code>search-&gt;text-&gt;输入VerifyCert</code>，记得勾选<code>find all</code></p><p><img src="https://pic.imgdb.cn/item/66e6eaf9d9c307b7e9e8c28e.png" alt=""></p><p>第一个，双击进去</p><p><img src="https://pic.imgdb.cn/item/66e6eb6ad9c307b7e9ea510c.png" alt=""></p><p>双击<code>sub_23FDD4+C8↓o</code></p><p><img src="https://pic.imgdb.cn/item/66e6eb89d9c307b7e9ea6ab4.png" alt=""></p><p>按下你键盘的<code>f5</code>，查看<code>c语言</code>代码，找到这个位置，我们抓包的时候过<code>ssl</code>，卡这里了，程序返回了<code>1</code>，根据<code>hook</code>，返回<code>0</code>才是正确的</p><blockquote><p>注：<code>1LL</code>是代表返回一个1，数据是<code>longlong</code>的，具体可以去学c</p></blockquote><p><img src="https://pic.imgdb.cn/item/66e6ebe5d9c307b7e9eac028.png" alt=""></p><p>用鼠标选中这里<code>return 1ll</code>，选择<code>Synchronize with-&gt; IDA view-A</code></p><p><img src="https://pic.imgdb.cn/item/66e6ecb1d9c307b7e9eb7af5.png" alt=""></p><p>对应是<code>loc_23FF10</code></p><p><img src="https://pic.imgdb.cn/item/66e6ed17d9c307b7e9ebce4e.png" alt=""></p><p>找到<code>mov w0,#1</code>修补成<code>mov w0,#0</code>，再看一次<code>c</code>代码，可以看到返回0了</p><p><img src="https://pic.imgdb.cn/item/66e6ed7fd9c307b7e9ec3179.png" alt=""></p><p><img src="https://pic.imgdb.cn/item/66e6ed7fd9c307b7e9ec3199.png" alt=""></p><p>当然，这只是第一处验证，还有两处的，我们滑到底部，返回函数点进去</p><p><img src="https://pic.imgdb.cn/item/66e6eeb8d9c307b7e9ed59e3.png" alt=""></p><p>首先是这里，要改成返回0</p><p><img src="https://pic.imgdb.cn/item/66e6ef37d9c307b7e9edd52a.png" alt=""></p><p>还有<code>return</code>这里</p><p><img src="https://pic.imgdb.cn/item/66e6ef85d9c307b7e9ee245f.png" alt=""></p><p>最后是编译出包了</p><p><img src="https://pic.imgdb.cn/item/66e6efd7d9c307b7e9ee713f.png" alt=""></p><p>回到手机上，把这个修改好的so，放去<code>data-&gt;app-&gt;汽水音乐</code>，<code>lib</code>文件夹里，覆盖掉，就能愉快抓包了</p><p><img src="https://pic.imgdb.cn/item/66e6f0dcd9c307b7e9ef7cf8.jpg" alt=""></p><hr><h2 id="修改好的so">修改好的so</h2><p>这里我分享下我修改好的so，需要的可以拿走</p><p><a href="https://www.123pan.com/s/dNbHjv-T8gsA">https://www.123pan.com/s/dNbHjv-T8gsA</a> 提取码:CqCZ</p><hr><h2 id="歌曲信息和解析">歌曲信息和解析</h2><p>待更新…</p>]]></content>
    
    
    <categories>
      
      <category>app逆向</category>
      
      <category>音乐类</category>
      
    </categories>
    
    
    <tags>
      
      <tag>code</tag>
      
      <tag>编程</tag>
      
      <tag>ida</tag>
      
      <tag>音乐</tag>
      
      <tag>安卓逆向</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>2024新版有道web接口逆向</title>
    <link href="/2024/08/24/youdao_fanyi/"/>
    <url>/2024/08/24/youdao_fanyi/</url>
    
    <content type="html"><![CDATA[<h2 id="开始之前">开始之前</h2><p>在本期教程开始之前，虽然网络上有很多<code>有道翻译</code>的解密，但是在一年前，有道换了新的ui，加入了ai翻译</p><span id="more"></span><p>那关于新版本如何解密呢，本期教程就给大家揭晓</p><hr><h2 id="抓包-数据分析">抓包&amp;数据分析</h2><p>首先我们打开有道翻译，<a href="https://fanyi.youdao.com">点我</a>同时右键<code>f12</code>打开浏览器的<strong>抓包</strong>，过滤一下，可以看到有这两个请求</p><p><img src="https://pic.imgdb.cn/item/66c8b4d4d9c307b7e9ee1453.png" alt=""></p><p>从数据的返回上看，这两个api是连在一起的，一个是生成解密密钥，一个是用密钥解密密文</p><p><img src="https://pic.imgdb.cn/item/66c8b537d9c307b7e9ef4ab5.png" alt=""></p><p><img src="https://pic.imgdb.cn/item/66c8b560d9c307b7e9f0397a.png" alt=""></p><p>所以我们先把目光放到生成密钥这个<code>api</code>上</p><p><img src="https://pic.imgdb.cn/item/66c8b5aed9c307b7e9f09f4c.png" alt=""></p><hr><h2 id="解密生成key的sign">解密生成key的sign</h2><p>从上面请求的数据来看，经过多次访问，只有<code>mysticTime</code>和<code>sign</code>发生了变化，第二次参数不难搞，就是当前的时间戳</p><p>那么我们看一下<code>js</code>看看他把<code>sign</code>写在那里了</p><p><img src="https://pic.imgdb.cn/item/66c8b647d9c307b7e9f15fe7.png" alt=""></p><p>全局搜索<code>sign</code>这个参数</p><p><img src="https://pic.imgdb.cn/item/66c8b979d9c307b7e9f5108e.png" alt=""></p><p>从这个<code>getsign</code>函数来看，我们可以找到该函数的位置，同时查看<code>t</code>函数，<code>t</code>函数是加密的内容</p><p><img src="https://pic.imgdb.cn/item/66c8b9c1d9c307b7e9f55a70.png" alt=""></p><p>从报错信息得知，加密藏于<code>app.js</code>，从这个文件一路打断点，找到<code>sign</code>函数的入口了，同时<code>o</code>函数是请求的时间戳，<code>e</code>函数是固定值内容为<code>asdjnjfenknafdfsdfsd</code></p><p><img src="https://pic.imgdb.cn/item/66c8ba98d9c307b7e9f60806.png" alt=""></p><p>从<code>function s</code>直接断点得到如下信息</p><p><img src="https://pic.imgdb.cn/item/66c8bb54d9c307b7e9f6a4ae.png" alt=""></p><p><code>d</code>函数是<code>fanyideskweb</code>，<code>e</code>函数是<code>时间戳</code>，<code>u</code>函数是<code>webfanyi</code>，<code>t</code>函数是<code>asdjnjfenknafdfsdfsd</code>，同时调用的<code>_</code>函数也在上面了，是个<code>md5</code>加密，综上所述，加密公式为</p><p>这里的时间戳为<code>13</code>位的时间戳</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">client=fanyideskweb&amp;mysticTime=0000000000000&amp;product=webfanyi&amp;key=asdjnjfenknafdfsdfsd<br></code></pre></td></tr></table></figure><p><img src="https://pic.imgdb.cn/item/66c8bd3ad9c307b7e9f8b84b.png" alt=""></p><p>和官方加密的一致</p><hr><h2 id="成品1">成品1</h2><p><strong>Typescript</strong></p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-keyword">import</span> <span class="hljs-title class_">CryptoJS</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;crypto-js&#x27;</span>;<br><br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">async</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">get_sign</span>(<span class="hljs-params"></span>)&#123;<br>    <span class="hljs-keyword">var</span> headers : <span class="hljs-built_in">any</span> = &#123;<br>        <span class="hljs-string">&quot;Referer&quot;</span>: <span class="hljs-string">&quot;https://fanyi.youdao.com/&quot;</span>,<br>        <span class="hljs-string">&quot;User-agent&quot;</span>: <span class="hljs-string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/127.0.0.0 Safari/537.36&quot;</span>,<br>    &#125;<br>    <span class="hljs-keyword">var</span> mysticTime : <span class="hljs-built_in">number</span> = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>(<span class="hljs-title class_">Date</span>.<span class="hljs-title function_">now</span>())<br>    <span class="hljs-keyword">var</span> <span class="hljs-attr">sign</span>: <span class="hljs-built_in">string</span> = <span class="hljs-title class_">CryptoJS</span>.<span class="hljs-title class_">MD5</span>(<span class="hljs-string">`client=fanyideskweb&amp;mysticTime=<span class="hljs-subst">$&#123;mysticTime&#125;</span>&amp;product=webfanyi&amp;key=asdjnjfenknafdfsdfsd`</span>).<span class="hljs-title function_">toString</span>()<br>    <span class="hljs-keyword">var</span> url : <span class="hljs-built_in">string</span> =  <span class="hljs-string">&quot;https://dict.youdao.com/webtranslate/key?&quot;</span> +<br>        <span class="hljs-string">&quot;keyid=webfanyi-key-getter&quot;</span>+<br>        <span class="hljs-string">`&amp;sign=<span class="hljs-subst">$&#123;sign&#125;</span>`</span>+<br>        <span class="hljs-string">&quot;&amp;client=fanyideskweb&quot;</span>+<br>        <span class="hljs-string">&quot;&amp;product=webfanyi&quot;</span>+<br>        <span class="hljs-string">&quot;&amp;appVersion=1.0.0&amp;vendor=web&quot;</span>+<br>        <span class="hljs-string">&quot;&amp;pointParam=client,mysticTime,product&quot;</span>+<br>        <span class="hljs-string">`&amp;mysticTime=<span class="hljs-subst">$&#123;mysticTime&#125;</span>&amp;keyfrom=fanyi.web`</span>+<br>        <span class="hljs-string">&quot;&amp;mid=1&quot;</span>+<br>        <span class="hljs-string">&quot;&amp;screen=1&quot;</span>+<br>        <span class="hljs-string">&quot;&amp;model=1&quot;</span>+<br>        <span class="hljs-string">&quot;&amp;network=wifi&quot;</span>+<br>        <span class="hljs-string">&quot;&amp;abtest=0&quot;</span>+<br>        <span class="hljs-string">&quot;&amp;yduuid=abcdefg&quot;</span><br>    <br>    <span class="hljs-keyword">var</span> requset = <span class="hljs-keyword">await</span> <span class="hljs-title function_">fetch</span>(url, headers)<br>    <span class="hljs-keyword">var</span> json_data = <span class="hljs-keyword">await</span> requset.<span class="hljs-title function_">json</span>()<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(json_data[<span class="hljs-string">&quot;data&quot;</span>])<br>&#125;<br><br><span class="hljs-title function_">get_sign</span>()<br></code></pre></td></tr></table></figure><p><strong>Python</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> hashlib<br><span class="hljs-keyword">import</span> httpx<br><span class="hljs-keyword">import</span> time<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">get_sign</span>():<br>    mysticTime = <span class="hljs-built_in">int</span>(time.time() * <span class="hljs-number">1000</span>)<br>    sign = hashlib.md5(<span class="hljs-string">f&quot;client=fanyideskweb&amp;mysticTime=<span class="hljs-subst">&#123;mysticTime&#125;</span>&amp;product=webfanyi&amp;key=asdjnjfenknafdfsdfsd&quot;</span>.encode(encoding=<span class="hljs-string">&#x27;UTF-8&#x27;</span>)).hexdigest()<br>    a = httpx.get(<br>        url=<span class="hljs-string">&quot;https://dict.youdao.com/webtranslate/key?keyid=webfanyi-key-getter&quot;</span>\<br>        <span class="hljs-string">f&quot;&amp;sign=<span class="hljs-subst">&#123;sign&#125;</span>&quot;</span>\<br>        <span class="hljs-string">&quot;&amp;client=fanyideskweb&quot;</span>\<br>        <span class="hljs-string">&quot;&amp;product=webfanyi&quot;</span>\<br>        <span class="hljs-string">&quot;&amp;appVersion=1.0.0&quot;</span>\<br>        <span class="hljs-string">&quot;&amp;vendor=web&quot;</span>\<br>        <span class="hljs-string">&quot;&amp;pointParam=client,mysticTime,product&quot;</span>\<br>        <span class="hljs-string">f&quot;&amp;mysticTime=<span class="hljs-subst">&#123;mysticTime&#125;</span>&quot;</span>\<br>        <span class="hljs-string">&quot;&amp;keyfrom=fanyi.web&quot;</span>\<br>        <span class="hljs-string">&quot;&amp;mid=1&quot;</span>\<br>        <span class="hljs-string">&quot;&amp;screen=1&quot;</span>\<br>        <span class="hljs-string">&quot;&amp;model=1&quot;</span>\<br>        <span class="hljs-string">&quot;&amp;network=wifi&quot;</span>\<br>        <span class="hljs-string">&quot;&amp;abtest=0&quot;</span>\<br>        <span class="hljs-string">&quot;&amp;yduuid=abcdefg&quot;</span>,<br>        headers= &#123;<br>            <span class="hljs-string">&quot;Referer&quot;</span>: <span class="hljs-string">&quot;https://fanyi.youdao.com/&quot;</span>,<br>            <span class="hljs-string">&quot;User-agent&quot;</span>: <span class="hljs-string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/127.0.0.0 Safari/537.36&quot;</span>,<br>        &#125;<br>    )<br>    <span class="hljs-keyword">return</span> a.json()[<span class="hljs-string">&quot;data&quot;</span>]<br><br><span class="hljs-built_in">print</span>(get_sign())<br></code></pre></td></tr></table></figure><hr><h2 id="解密密文">解密密文</h2><p>那我们搞定了<code>key</code>这个<code>api</code>后，现在开始分析<code>webtranslate</code>这个<code>api</code>，首先我们先看发送的内容</p><p><img src="https://pic.imgdb.cn/item/66c8c558d9c307b7e908aba8.png" alt=""></p><p>这里的<code>i</code>函数就是我们翻译的内容，<code>sign</code>参数又来了，那我们在原来的地方打个断点，拿签名</p><p><img src="https://pic.imgdb.cn/item/66c8c4f5d9c307b7e9083c7d.png" alt=""></p><p>然后你会发现只是<code>t</code>函数变了，其他没变，套用第一次分析的公式</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">client=fanyideskweb&amp;mysticTime=0000000000000&amp;product=webfanyi&amp;key=fsdsogkndfokasodnaso<br></code></pre></td></tr></table></figure><p>这样第一层就搞定了，我们现在要找密文解密的地方，全网就复杂在这里</p><p>按照原理来说，<code>js</code>会请求<code>api</code>，再解密，所以我们要找到请求的地方</p><p><img src="https://pic.imgdb.cn/item/66c8c8bad9c307b7e90b4d0e.png" alt=""></p><p>从这里开始发起请求，回到<code>app.js</code>，搜索一下发送请求的<code>url</code>，然后我们就找到了这些</p><p><img src="https://pic.imgdb.cn/item/66c8d30fd9c307b7e91b5da5.png" alt=""></p><p>这里是个<code>aes</code>的加密，<code>l</code>也是解密的密文，我们就要开始分析了</p><p>首先<code>e</code>是密文，<code>t</code>是<code>key_api</code>的<code>aeskey</code>，<code>o</code>是<code>key_api</code>的<code>aesiv</code>，<code>忘记说了，t函数是md5加密</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> a = s.<span class="hljs-title function_">alloc</span>(<span class="hljs-number">16</span>, <span class="hljs-title function_">T</span>(t))<br>                 , n = s.<span class="hljs-title function_">alloc</span>(<span class="hljs-number">16</span>, <span class="hljs-title function_">T</span>(o))<br>                 , r = i.<span class="hljs-title function_">createDecipheriv</span>(<span class="hljs-string">&quot;aes-128-cbc&quot;</span>, a, n);<br>               <span class="hljs-keyword">let</span> l = r.<span class="hljs-title function_">update</span>(e, <span class="hljs-string">&quot;base64&quot;</span>, <span class="hljs-string">&quot;utf-8&quot;</span>);<br>               <span class="hljs-keyword">return</span> l += r.<span class="hljs-title function_">final</span>(<span class="hljs-string">&quot;utf-8&quot;</span>),<br></code></pre></td></tr></table></figure><p>我们把这一段代码拷贝到ide，根据自己学的<code>ts</code>，改了一下，这里网易使用了<code>aes-128-cbc</code>加密</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-keyword">import</span> &#123; createHash,createDecipheriv &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;crypto&#x27;</span>;<br><br><br><span class="hljs-keyword">var</span> t = <span class="hljs-string">&quot;ydsecret://query/key/B*RGygVywfNBwpmBaZg*WT7SIOUP2T0C9WHMZN39j^DAdaZhAnxvGcCY6VYFwnHl&quot;</span><br><span class="hljs-keyword">var</span> o = <span class="hljs-string">&quot;ydsecret://query/iv/C@lZe2YzHtZ2CYgaXKSVfsb7Y4QWHjITPPZ0nQp87fBeJ!Iv6v^6fvi2WN@bYpJ4&quot;</span><br><span class="hljs-keyword">var</span> e = <span class="hljs-string">&quot;Z21kD9ZK1ke6ugku2ccWu4n6eLnvoDT0YgGi0y3g-v0B9sYqg8L9D6UERNozYOHq0tIY5zg2_G3Njo5Qsw98fEghPM5cT9RqLsGBQW5jSVzv635HhMVrRZ6XpfYk0jtdgCf21MHrt_Gv94m_MLKUmBr8wSktKe6dvgvAHa5JFYxZjBINiTLwCUM5uFfL230YCw4OOj_f5cgK75GSOgS76xYGS0AcczPyGKkqErEunfjU5J0ztwhHESgwX6aE1qleQphl7R8HfR51CDtqzeL9XhzMjPgetz6gBaXdjYYC00T_ELg1AFx4dqu1N9BZ2wxHxKZ4StKqRDTZcVX5XU13ffSHHnhGva7SKIUpOZgtbz8950OQ92Gm9VkHLeKyWXCtNhms9O8gbr88hXT1oHrLqSduzlKgqHq_LnjsvTOraZRSVuiugeaWVgh2iF-CPnFPsgp2CjeQ9gEgBXwbkn1iDg0uFGRmT_h6mO3mzoaamxNMKWjNlHqXeRNQtsiKwpUCN-VE0IFe5zSKeYN_6y5MVH5zehnMjHbBd-K0f9ESoM-9a5-PDPMUqXxS5dB5gCAh&quot;</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">T</span>(<span class="hljs-params">o : <span class="hljs-built_in">string</span></span>)&#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-title function_">createHash</span>(<span class="hljs-string">&#x27;md5&#x27;</span>).<span class="hljs-title function_">update</span>(o).<span class="hljs-title function_">digest</span>();<br>&#125;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-title function_">T</span>(o).<span class="hljs-title function_">toJSON</span>().<span class="hljs-property">data</span>)<br><span class="hljs-keyword">const</span> a = <span class="hljs-title class_">Buffer</span>.<span class="hljs-title function_">from</span>(<span class="hljs-title function_">T</span>(t).<span class="hljs-title function_">toJSON</span>().<span class="hljs-property">data</span>)<br><span class="hljs-keyword">const</span> n = <span class="hljs-title class_">Buffer</span>.<span class="hljs-title function_">from</span>(<span class="hljs-title function_">T</span>(o).<span class="hljs-title function_">toJSON</span>().<span class="hljs-property">data</span>)<br><span class="hljs-keyword">const</span> r = <span class="hljs-title function_">createDecipheriv</span>(<span class="hljs-string">&#x27;aes-128-cbc&#x27;</span>, a, n);<br><span class="hljs-keyword">let</span> l = r.<span class="hljs-title function_">update</span>(e, <span class="hljs-string">&#x27;base64&#x27;</span>, <span class="hljs-string">&#x27;utf-8&#x27;</span>); <br>l += r.<span class="hljs-title function_">final</span>(<span class="hljs-string">&#x27;utf-8&#x27;</span>);<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(a,n)<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(l)<br></code></pre></td></tr></table></figure><p>这样就输出正确的结果了，所以我们可以得知代码正确的内容了</p><p>同理，我们把上面获取密钥结合在一起，就行了</p><hr><h2 id="成品2">成品2</h2><p><strong>Typescript</strong></p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-keyword">import</span> &#123; createHash,createDecipheriv &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;crypto&#x27;</span>;<br><span class="hljs-keyword">import</span> &#123; access &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;fs&#x27;</span>;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">async</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">get_sign</span>(<span class="hljs-params"></span>)&#123;<br>    <span class="hljs-keyword">var</span> headers : <span class="hljs-built_in">any</span> = &#123;<br>        <span class="hljs-string">&quot;Referer&quot;</span>: <span class="hljs-string">&quot;https://fanyi.youdao.com/&quot;</span>,<br>        <span class="hljs-string">&quot;User-agent&quot;</span>: <span class="hljs-string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/127.0.0.0 Safari/537.36&quot;</span>,<br>    &#125;<br>    <span class="hljs-keyword">var</span> mysticTime : <span class="hljs-built_in">number</span> = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>(<span class="hljs-title class_">Date</span>.<span class="hljs-title function_">now</span>())<br>    <span class="hljs-keyword">var</span> <span class="hljs-attr">sign</span>: <span class="hljs-built_in">string</span> =<span class="hljs-title function_">createHash</span>(<span class="hljs-string">&#x27;md5&#x27;</span>).<span class="hljs-title function_">update</span>(<span class="hljs-string">`client=fanyideskweb&amp;mysticTime=<span class="hljs-subst">$&#123;mysticTime&#125;</span>&amp;product=webfanyi&amp;key=asdjnjfenknafdfsdfsd`</span>).<span class="hljs-title function_">digest</span>(<span class="hljs-string">&quot;hex&quot;</span>)<br>    <span class="hljs-keyword">var</span> url : <span class="hljs-built_in">string</span> =  <span class="hljs-string">&quot;https://dict.youdao.com/webtranslate/key?&quot;</span> +<br>        <span class="hljs-string">&quot;keyid=webfanyi-key-getter&quot;</span>+<br>        <span class="hljs-string">`&amp;sign=<span class="hljs-subst">$&#123;sign&#125;</span>`</span>+<br>        <span class="hljs-string">&quot;&amp;client=fanyideskweb&quot;</span>+<br>        <span class="hljs-string">&quot;&amp;product=webfanyi&quot;</span>+<br>        <span class="hljs-string">&quot;&amp;appVersion=1.0.0&amp;vendor=web&quot;</span>+<br>        <span class="hljs-string">&quot;&amp;pointParam=client,mysticTime,product&quot;</span>+<br>        <span class="hljs-string">`&amp;mysticTime=<span class="hljs-subst">$&#123;mysticTime&#125;</span>&amp;keyfrom=fanyi.web`</span>+<br>        <span class="hljs-string">&quot;&amp;mid=1&quot;</span>+<br>        <span class="hljs-string">&quot;&amp;screen=1&quot;</span>+<br>        <span class="hljs-string">&quot;&amp;model=1&quot;</span>+<br>        <span class="hljs-string">&quot;&amp;network=wifi&quot;</span>+<br>        <span class="hljs-string">&quot;&amp;abtest=0&quot;</span>+<br>        <span class="hljs-string">&quot;&amp;yduuid=abcdefg&quot;</span><br>    <br>    <span class="hljs-keyword">var</span> requset = <span class="hljs-keyword">await</span> <span class="hljs-title function_">fetch</span>(url, headers)<br>    <span class="hljs-keyword">var</span> json_data = <span class="hljs-keyword">await</span> requset.<span class="hljs-title function_">json</span>()<br>    <span class="hljs-keyword">return</span> json_data[<span class="hljs-string">&quot;data&quot;</span>]<br>&#125;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">T</span>(<span class="hljs-params">o : <span class="hljs-built_in">string</span></span>)&#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-title function_">createHash</span>(<span class="hljs-string">&#x27;md5&#x27;</span>).<span class="hljs-title function_">update</span>(o).<span class="hljs-title function_">digest</span>(); <br>&#125;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">async</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">get_translation_result</span>(<span class="hljs-params">target: <span class="hljs-built_in">string</span></span>) &#123;<br>    <span class="hljs-keyword">const</span> v : <span class="hljs-built_in">any</span> = <span class="hljs-keyword">await</span> <span class="hljs-title function_">get_sign</span>()<br>    <span class="hljs-keyword">var</span> aeskey : <span class="hljs-built_in">string</span> = v[<span class="hljs-string">&quot;aesKey&quot;</span>]<br>    <span class="hljs-keyword">var</span> aesiv : <span class="hljs-built_in">string</span> = v[<span class="hljs-string">&quot;aesIv&quot;</span>]<br>    <span class="hljs-keyword">var</span> url : <span class="hljs-built_in">string</span> = <span class="hljs-string">&quot;https://dict.youdao.com/webtranslate&quot;</span><br>    <span class="hljs-keyword">var</span> mysticTime : <span class="hljs-built_in">number</span> = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>(<span class="hljs-title class_">Date</span>.<span class="hljs-title function_">now</span>())<br>    <span class="hljs-keyword">var</span> <span class="hljs-attr">sign</span>: <span class="hljs-built_in">string</span> =<span class="hljs-title function_">createHash</span>(<span class="hljs-string">&#x27;md5&#x27;</span>).<span class="hljs-title function_">update</span>(<span class="hljs-string">`client=fanyideskweb&amp;mysticTime=<span class="hljs-subst">$&#123;mysticTime&#125;</span>&amp;product=webfanyi&amp;key=fsdsogkndfokasodnaso`</span>).<span class="hljs-title function_">digest</span>(<span class="hljs-string">&quot;hex&quot;</span>)<br>    <span class="hljs-keyword">var</span> m : <span class="hljs-built_in">string</span> = <span class="hljs-string">`i=<span class="hljs-subst">$&#123;target&#125;</span>&amp;from=auto&amp;to=&amp;useTerm=false&amp;dictResult=true&amp;keyid=webfanyi&amp;sign=<span class="hljs-subst">$&#123;sign&#125;</span>&amp;client=fanyideskweb&amp;product=webfanyi&amp;appVersion=1.0.0&amp;vendor=web&amp;pointParam=client%2CmysticTime%2Cproduct&amp;mysticTime=<span class="hljs-subst">$&#123;mysticTime&#125;</span>&amp;keyfrom=fanyi.web&amp;mid=1&amp;screen=1&amp;model=1&amp;network=wifi&amp;abtest=0&amp;yduuid=abcdefg`</span><br>    <span class="hljs-keyword">var</span> header : <span class="hljs-built_in">any</span> = &#123;<br>        method : <span class="hljs-string">&quot;POST&quot;</span>,<br>        headers : &#123;<br>            <span class="hljs-string">&quot;Content-type&quot;</span>: <span class="hljs-string">&quot;application/x-www-form-urlencoded&quot;</span>,<br>            <span class="hljs-string">&quot;User-agent&quot;</span>: <span class="hljs-string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/127.0.0.0 Safari/537.36&quot;</span>,<br>            <span class="hljs-string">&quot;Referer&quot;</span>: <span class="hljs-string">&quot;https://fanyi.youdao.com/&quot;</span>,<br>            <span class="hljs-string">&quot;Cookie&quot;</span>: <span class="hljs-string">&quot;OUTFOX_SEARCH_USER_ID=11560287@1.1.1.1; OUTFOX_SEARCH_USER_ID_NCOO=1; &quot;</span><br>        &#125;,<br>        <span class="hljs-attr">body</span>:<br>            m<br>    &#125;<br>    <span class="hljs-keyword">const</span> resp = <span class="hljs-keyword">await</span> <span class="hljs-title function_">fetch</span>(url, header)<br>    <span class="hljs-keyword">const</span> resp_text = <span class="hljs-keyword">await</span> resp.<span class="hljs-title function_">text</span>()<br>    <span class="hljs-keyword">const</span> a = <span class="hljs-title class_">Buffer</span>.<span class="hljs-title function_">from</span>(<span class="hljs-title function_">T</span>(aeskey).<span class="hljs-title function_">toJSON</span>().<span class="hljs-property">data</span>)<br>    <span class="hljs-keyword">const</span> n = <span class="hljs-title class_">Buffer</span>.<span class="hljs-title function_">from</span>(<span class="hljs-title function_">T</span>(aesiv).<span class="hljs-title function_">toJSON</span>().<span class="hljs-property">data</span>)<br>    <span class="hljs-keyword">const</span> r = <span class="hljs-title function_">createDecipheriv</span>(<span class="hljs-string">&#x27;aes-128-cbc&#x27;</span>, a, n);<br>    <span class="hljs-keyword">let</span> l = r.<span class="hljs-title function_">update</span>(resp_text, <span class="hljs-string">&#x27;base64&#x27;</span>, <span class="hljs-string">&#x27;utf-8&#x27;</span>); <br>    l += r.<span class="hljs-title function_">final</span>(<span class="hljs-string">&#x27;utf-8&#x27;</span>);<br>    <span class="hljs-keyword">var</span> t = <span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">parse</span>(l)<br>    <span class="hljs-keyword">var</span> ans : <span class="hljs-built_in">string</span> = <span class="hljs-string">&quot;&quot;</span><br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> index = <span class="hljs-number">0</span>; index &lt; t[<span class="hljs-string">&quot;translateResult&quot;</span>].<span class="hljs-property">length</span>; index++) &#123;<br>        ans+=t[<span class="hljs-string">&quot;translateResult&quot;</span>][index][<span class="hljs-number">0</span>][<span class="hljs-string">&quot;tgt&quot;</span>]<br>    &#125;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(ans)<br>&#125;<br><br><span class="hljs-title function_">get_translation_result</span>(<span class="hljs-string">&quot;你好&quot;</span>)<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>web逆向</category>
      
      <category>翻译类</category>
      
    </categories>
    
    
    <tags>
      
      <tag>code</tag>
      
      <tag>编程</tag>
      
      <tag>js逆向</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>bingyue_dic_new 开发文档</title>
    <link href="/2024/08/05/bingyue_dic_new/"/>
    <url>/2024/08/05/bingyue_dic_new/</url>
    
    <content type="html"><![CDATA[<h2 id="开源主页">开源主页</h2><p><a href="https://github.com/bingqiu456/bingyue_dic_new">点我直达</a></p><span id="more"></span><hr><h2 id="变量">变量</h2><table><thead><tr><th>变量</th><th>适配状态</th><th>用法</th></tr></thead><tbody><tr><td><code>$改群名片 群号 qq 名字$</code></td><td>🟢</td><td>更改自己在本群的名字</td></tr><tr><td><code>$踢 群号 qq$</code></td><td>🟢</td><td>踢人</td></tr><tr><td><code>$群打卡 群号$</code></td><td>🟢</td><td>群打卡</td></tr><tr><td><code>$管理员 %QQ%$</code></td><td>🟢</td><td>从管理员中获取QQ号 获取到就返回QQ号 可以批量获取</td></tr><tr><td>%QQ%</td><td>🟢</td><td>获取发言人QQ号</td></tr><tr><td>%Robot%</td><td>🟢</td><td>获取机器人QQ号</td></tr><tr><td>%消息id%</td><td>🟢</td><td>获取消息的id</td></tr><tr><td>%群号%</td><td>🟢</td><td>获取群号</td></tr><tr><td>%主人%</td><td>🟢</td><td>获取主人的QQ号</td></tr><tr><td>%昵称%</td><td>🔴</td><td>获取发言人的名称</td></tr><tr><td>%time%</td><td>🟢</td><td>获取时间戳</td></tr><tr><td><code>$改群名 群号 名字$</code></td><td>🟢</td><td>更改群名字</td></tr><tr><td><code>$全体禁言 群号 0$</code></td><td>🟢</td><td>全体禁言，0为关，1为开</td></tr><tr><td><code>$禁 群号 qq 时间$</code></td><td>🟢</td><td>默认时间是秒数，请注意</td></tr></tbody></table><ul><li>注：🔴 **红色圆代表即将适配的 **</li></ul><hr><h2 id="语法">语法</h2><table><thead><tr><th>语法</th><th>适配状态</th><th>描述</th></tr></thead><tbody><tr><td>存储变量</td><td>🔴</td><td>存储变量</td></tr><tr><td>判断</td><td>🔴</td><td>如果…返回…如果尾</td></tr><tr><td>正则匹配</td><td>🔴</td><td>正则匹配</td></tr></tbody></table><hr><h2 id="配置文件">配置文件</h2><ul><li>打开你的<code>Nonebot</code><strong>配置文件</strong></li><li>添加如下内容 <strong>如果你不知道配置文件是什么 一般是你nb目录下的 env.dev 或者 env.prod</strong></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">admin_dic = [<span class="hljs-string">&quot;100001&quot;</span>,<span class="hljs-string">&quot;112121&quot;</span>] <span class="hljs-comment"># 管理员 同样也是字符串类型</span><br>onwer_dic = <span class="hljs-string">&quot;0&quot;</span> <span class="hljs-comment"># 主人 字符串类型</span><br>start_group = [0] <span class="hljs-comment"># 启动的群号 这里写数字</span><br></code></pre></td></tr></table></figure><hr><h2 id="更新日志">更新日志</h2><h3 id="2024-08-03">2024-08-03</h3><ul><li>dic项目成立</li></ul><h3 id="2024-08-03-第二次更新">2024-08-03 第二次更新</h3><ul><li>修复了匹配算法的致命bug</li><li>增加变量的适配</li><li>优化代码结构</li></ul><h3 id="2024-08-05">2024-08-05</h3><ul><li>重写变量匹配逻辑</li><li>适配了<code>$</code>变量</li><li>支持管理员和主人</li><li>本博文写在这个时候的</li></ul><h3 id="2024-08-07">2024-08-07</h3><ul><li>改进变量匹配逻辑</li><li>适配了一些变量</li><li>开放第三方<code>api</code>适配变量</li></ul><h3 id="2024-08-09">2024-08-09</h3><ul><li>适配了一些变量</li><li>感谢<a href="https://github.com/Decrabbityyy">@是兔子哒</a> 提出的建议</li><li>调整了<code>api</code>接口的文件</li></ul>]]></content>
    
    
    <categories>
      
      <category>nonebot项目</category>
      
    </categories>
    
    
    <tags>
      
      <tag>dic</tag>
      
      <tag>python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>OPPO/realme 无视端口限制 高版本root</title>
    <link href="/2024/06/29/unlock_tool_/"/>
    <url>/2024/06/29/unlock_tool_/</url>
    
    <content type="html"><![CDATA[<p>晚上好，自从去年夏天发了<code>oppo</code>解锁bl的教程后，可惜<code>oppo</code>在高版本之后屏蔽了端口，这下该怎么办呢</p><p><a href="https://blog.bingyue.top/2023/07/12/oppo_realme_bl/">往期教程</a></p><p>在万能的群友下，今天我们来用<code>unlocktool</code>这个工具，去无视<code>oppo</code>的端口锁，提取刷入分区</p><span id="more"></span><hr><h2 id="下载工具">下载工具</h2><p>打开网站<a href="https://unlocktool.net/download/">https://unlocktool.net/download/</a></p><p><img src="https://pic.imgdb.cn/item/667ec2aad9c307b7e9051c8e.png" alt=""></p><p>下载这个工具 并安装</p><p>然后出现四个国外网盘链接，这边我推荐挂加速器用谷歌云盘下载</p><p><a href="https://drive.google.com/file/d/1zDHqrtIo3udHtaMnKlVti1ElG-sYFA0p/view?usp=sharing">谷歌云盘链接</a></p><p><img src="https://pic.imgdb.cn/item/667ec372d9c307b7e906a40d.png" alt=""></p><p><img src="https://pic.imgdb.cn/item/667ec3d6d9c307b7e9077136.png" alt=""></p><p>如果显示出来这个画面，说明你安装成功了</p><hr><h2 id="账号">账号</h2><p>这里得去问你的朋友 去拿个账户 或者用其他渠道获取账户</p><p>我这里不一一列举了</p><hr><h2 id="正片">正片</h2><p>进入软件后</p><p><img src="https://pic.imgdb.cn/item/667edc56d9c307b7e935706f.png" alt=""></p><p>点点击上面的联发科，选择<code>mtk universal</code>，勾选这三个构，<code>第三个构选择realme/oppo v1</code></p><p>这里我第三个勾错了，现在勾回来了</p><p><img src="https://pic.imgdb.cn/item/667edcb5d9c307b7e9360cc8.png" alt=""></p><p>然后点击右边的<code>boot deivce</code>，按住你手机的电源+音量上+音量下，进入端口，如果连接无误，会出现一个分区表</p><p><img src="https://pic.imgdb.cn/item/667edd02d9c307b7e9368c34.png" alt=""></p><p>这里我提取的boot分区，按照图片上的提示就行了</p><p>同样写入分区就是选write，然后选择文件刷入</p><p>这里我就不一一演示了</p><p>到这里就结束了</p><hr><h2 id="隐藏章节-刷kernelsu">隐藏章节 刷kernelsu</h2><p>首先找到你机子的kernelsu的补丁包，并确认内核版本无误，不需要<code>twrp</code></p><p>下载该<a href="https://www.123pan.com/s/dNbHjv-U8MsA.html">软件</a></p><p>提取码:<code>loS2</code></p><p>打开之后 授予<code>root</code>权限 (如果没有root可以先刷面具)</p><p>第二步 再准备好原厂boot镜像，先用工具在本机刷入原厂boot，可以用<code>爱玩机工具箱或者搞机助手等等的工具</code></p><p>刷入原厂boot后别重启，点击菜单，刷写，选择手动刷写,选择你的内核补丁包 等待完成 完成后自动重启</p><p><img src="https://pic.imgdb.cn/item/667edfbad9c307b7e93c4ae4.png" alt=""></p><p>这样就大功告成了，开机之后安装<code>kernelsu</code>管理器</p><img src="https://pic.imgdb.cn/item/667edff2d9c307b7e93caf0c.jpg" style="zoom:50%;" /><p>出现工作中的字样代表成功了</p><h2 id="后记">后记</h2><p>这期教程就到这里，感谢你的收看</p>]]></content>
    
    
    <categories>
      
      <category>bootloader</category>
      
      <category>刷机</category>
      
    </categories>
    
    
    <tags>
      
      <tag>root</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>QQ音乐 sign参数逆向补环境破解</title>
    <link href="/2024/06/10/qqmusic_sign/"/>
    <url>/2024/06/10/qqmusic_sign/</url>
    
    <content type="html"><![CDATA[<h2 id="介绍">介绍</h2><p>在本教程开始之前，首先给大家介绍一下<code>webpack</code></p><ul><li><code>Webpack</code>可以将项目中的各种模块进行静态分析，并将它们打包成一个或多个 bundle。这使得管理项目中的模块变得更加方便，也能提高页面加载速度，因为浏览器可以并行加载多个资源。</li><li><code>Webpack</code>可以处理<strong>JavaScript、TypeScript、CSS、SCSS、LESS</strong>等不同类型的文件，并通过loader转换它们，例如将<strong>ES6/ES7</strong>代码转换为<strong>ES5</strong>，或者将<strong>Sass/LESS</strong>转换为<strong>CSS</strong>。</li><li><code>Webpack</code>能够分析模块之间的依赖关系，包括直接依赖和间接依赖，然后构建出依赖关系树，以确保在打包时正确地引入依赖的模块。</li><li><code>Webpac</code>k允许将代码拆分成多个bundle，从而实现按需加载，提高页面加载性能。这对于大型应用程序特别有用，因为它们可能包含大量的代码，但并非所有代码都需要在初始加载时下载。</li><li><code>Webpack</code>提供了丰富的插件系统，使得开发者能够扩展其功能，例如压缩代码、优化图片、提取公共代码等。</li></ul><p>还有很多好处，这里不一一展开了</p><hr><h2 id="开始">开始</h2><p>而今天我们逆向的QQ音乐，它正好用了<code>webpack</code>，那我们废话不多说开始吧</p><span id="more"></span><p><img src="https://pic.imgdb.cn/item/66667b3b5e6d1bfa05ae7b8b.png" alt=""></p><p>这边推荐大家用<strong>免费歌曲</strong>去抓包，因为<strong>会员歌曲要登录</strong>，登录就麻烦了</p><p><img src="https://pic.imgdb.cn/item/66667b8b5e6d1bfa05aec413.png" alt=""></p><p>这边博主就用<strong>Reqable</strong>了，如果你还不知道这个抓包软件，可以访问<a href="https://reqable.com/en-US/">https://reqable.com/en-US/</a></p><p>返回浏览器，点击一首<strong>免费歌曲</strong>，听一下，打开抓包软件</p><p><img src="https://pic.imgdb.cn/item/66667c3b5e6d1bfa05af7d6f.png" alt=""></p><p>可以看到这里就是歌曲了，带了一个<code>vkey</code>和<code>guid</code>，如果没有这两个参数我们就播放不了歌曲了，现在去找一下这两个参数来自哪个<code>api</code></p><p><img src="https://pic.imgdb.cn/item/66667cce5e6d1bfa05b009b6.png" alt=""></p><p>是出自<code>music_fcg</code>这个<code>api</code>，同时带了一个<code>_和sign</code>参数，<code>_</code>是当前的时间戳，这边我也试过取掉<code>_</code>参数了，依然可以获取链接，看来只跟<code>sign</code>有关了</p><p>同时我们也分析一下他<code>post</code><strong>发送的数据</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><code class="hljs bash">&#123;<br><span class="hljs-string">&quot;comm&quot;</span>: &#123;<br><span class="hljs-string">&quot;cv&quot;</span>: 4747474,<br><span class="hljs-string">&quot;ct&quot;</span>: 24,<br><span class="hljs-string">&quot;format&quot;</span>: <span class="hljs-string">&quot;json&quot;</span>,<br><span class="hljs-string">&quot;inCharset&quot;</span>: <span class="hljs-string">&quot;utf-8&quot;</span>,<br><span class="hljs-string">&quot;outCharset&quot;</span>: <span class="hljs-string">&quot;utf-8&quot;</span>,<br><span class="hljs-string">&quot;notice&quot;</span>: 0,<br><span class="hljs-string">&quot;platform&quot;</span>: <span class="hljs-string">&quot;yqq.json&quot;</span>,<br><span class="hljs-string">&quot;needNewCode&quot;</span>: 1,<br><span class="hljs-string">&quot;uin&quot;</span>: 0,<br><span class="hljs-string">&quot;g_tk_new_20200303&quot;</span>: 5381,<br><span class="hljs-string">&quot;g_tk&quot;</span>: 5381<br>&#125;,<br><span class="hljs-string">&quot;req_1&quot;</span>: &#123;<br><span class="hljs-string">&quot;module&quot;</span>: <span class="hljs-string">&quot;music.musicasset.SongFavRead&quot;</span>,<br><span class="hljs-string">&quot;method&quot;</span>: <span class="hljs-string">&quot;IsSongFanByMid&quot;</span>,<br><span class="hljs-string">&quot;param&quot;</span>: &#123;<br><span class="hljs-string">&quot;v_songMid&quot;</span>: [<span class="hljs-string">&quot;00218E3L0kU0fb&quot;</span>, <span class="hljs-string">&quot;002VQQ8b2nNPe3&quot;</span>]<br>&#125;<br>&#125;,<br><span class="hljs-string">&quot;req_2&quot;</span>: &#123;<br><span class="hljs-string">&quot;module&quot;</span>: <span class="hljs-string">&quot;music.musichallSong.PlayLyricInfo&quot;</span>,<br><span class="hljs-string">&quot;method&quot;</span>: <span class="hljs-string">&quot;GetPlayLyricInfo&quot;</span>,<br><span class="hljs-string">&quot;param&quot;</span>: &#123;<br><span class="hljs-string">&quot;songMID&quot;</span>: <span class="hljs-string">&quot;00218E3L0kU0fb&quot;</span>,<br><span class="hljs-string">&quot;songID&quot;</span>: 492489014<br>&#125;<br>&#125;,<br><span class="hljs-string">&quot;req_3&quot;</span>: &#123;<br><span class="hljs-string">&quot;method&quot;</span>: <span class="hljs-string">&quot;GetCommentCount&quot;</span>,<br><span class="hljs-string">&quot;module&quot;</span>: <span class="hljs-string">&quot;music.globalComment.GlobalCommentRead&quot;</span>,<br><span class="hljs-string">&quot;param&quot;</span>: &#123;<br><span class="hljs-string">&quot;request_list&quot;</span>: [&#123;<br><span class="hljs-string">&quot;biz_type&quot;</span>: 1,<br><span class="hljs-string">&quot;biz_id&quot;</span>: <span class="hljs-string">&quot;492489014&quot;</span>,<br><span class="hljs-string">&quot;biz_sub_type&quot;</span>: 0<br>&#125;]<br>&#125;<br>&#125;,<br><span class="hljs-string">&quot;req_4&quot;</span>: &#123;<br><span class="hljs-string">&quot;module&quot;</span>: <span class="hljs-string">&quot;music.musichallAlbum.AlbumInfoServer&quot;</span>,<br><span class="hljs-string">&quot;method&quot;</span>: <span class="hljs-string">&quot;GetAlbumDetail&quot;</span>,<br><span class="hljs-string">&quot;param&quot;</span>: &#123;<br><span class="hljs-string">&quot;albumMid&quot;</span>: <span class="hljs-string">&quot;0001sESa0DlBPj&quot;</span><br>&#125;<br>&#125;,<br><span class="hljs-string">&quot;req_5&quot;</span>: &#123;<br><span class="hljs-string">&quot;module&quot;</span>: <span class="hljs-string">&quot;vkey.GetVkeyServer&quot;</span>,<br><span class="hljs-string">&quot;method&quot;</span>: <span class="hljs-string">&quot;CgiGetVkey&quot;</span>,<br><span class="hljs-string">&quot;param&quot;</span>: &#123;<br><span class="hljs-string">&quot;guid&quot;</span>: <span class="hljs-string">&quot;6300567640&quot;</span>,<br><span class="hljs-string">&quot;songmid&quot;</span>: [<span class="hljs-string">&quot;00218E3L0kU0fb&quot;</span>],<br><span class="hljs-string">&quot;songtype&quot;</span>: [0],<br><span class="hljs-string">&quot;uin&quot;</span>: <span class="hljs-string">&quot;0&quot;</span>,<br><span class="hljs-string">&quot;loginflag&quot;</span>: 1,<br><span class="hljs-string">&quot;platform&quot;</span>: <span class="hljs-string">&quot;20&quot;</span><br>&#125;<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>这里是我格式化的数据，<strong>关键部分在req_5</strong>，从<code>vkey_getvkeyserver</code>来看，这里就是<strong>获取歌曲播放链接了</strong></p><p>其中<strong>songmid</strong>是歌曲的<code>id</code>,<code>guid</code>是可以自己改的</p><p>返回浏览器，开始调试<code>js</code></p><p><img src="https://pic.imgdb.cn/item/66667e525e6d1bfa05b17b58.png" alt=""></p><p>点进去后全局搜索<code>sign</code>，找到一处可疑的地方，这里的<code>sign</code>是在<code>i</code>函数获得的，同时<code>i</code>函数也写在上面了</p><p><img src="https://pic.imgdb.cn/item/66667f155e6d1bfa05b231b5.png" alt=""></p><p>从这里打个断点，刷新一下页面，<strong>注：这里qq音乐写了两处一样的代码，如果没反应去取消断点，去上面找</strong></p><p><img src="https://pic.imgdb.cn/item/66667ff25e6d1bfa05b2ff10.png" alt=""></p><p>从<code>i</code>函数中发现，传入的<code>e.data</code>函数是我们post的数据</p><p><img src="https://pic.imgdb.cn/item/6666804d5e6d1bfa05b359c2.png" alt=""></p><p>同时，<code>o</code>函数是获取sign的地方，因为sign来自<code>i</code>函数，而<code>i</code>函数调用了<code>o函数</code></p><p><code>var i,o = n(147).default</code> ，也代表了<code>o</code>函数是来自<code>n</code>函数</p><p><img src="https://pic.imgdb.cn/item/666680ff5e6d1bfa05b4064b.png" alt=""></p><p>点进去一探究竟</p><p><img src="https://pic.imgdb.cn/item/6666813b5e6d1bfa05b43f50.png" alt=""></p><p>这是一个<code>webpack</code>的加载器，我们把这整个页面的<code>js</code>都复制下来 放到你的<code>ide</code>里</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs javascript">!<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>) &#123;<br>    <span class="hljs-keyword">function</span> <span class="hljs-title function_">t</span>(<span class="hljs-params">t</span>) &#123;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> a, n, d = t[<span class="hljs-number">0</span>], c = t[<span class="hljs-number">1</span>], i = t[<span class="hljs-number">2</span>], l = <span class="hljs-number">0</span>, u = []; l &lt; d.<span class="hljs-property">length</span>; l++)<br>            n = d[l],<br>            <span class="hljs-title class_">Object</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">hasOwnProperty</span>.<span class="hljs-title function_">call</span>(o, n) &amp;&amp; o[n] &amp;&amp; u.<span class="hljs-title function_">push</span>(o[n][<span class="hljs-number">0</span>]),<br>            o[n] = <span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">for</span> (a <span class="hljs-keyword">in</span> c)<br>            <span class="hljs-title class_">Object</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">hasOwnProperty</span>.<span class="hljs-title function_">call</span>(c, a) &amp;&amp; (e[a] = c[a]);<br>        <span class="hljs-keyword">for</span> (b &amp;&amp; <span class="hljs-title function_">b</span>(t); u.<span class="hljs-property">length</span>; )<br>            u.<span class="hljs-title function_">shift</span>()();<br>        <span class="hljs-keyword">return</span> f.<span class="hljs-property">push</span>.<span class="hljs-title function_">apply</span>(f, i || []),<br>        <span class="hljs-title function_">r</span>()<br>    &#125;<br>    <span class="hljs-keyword">function</span> <span class="hljs-title function_">r</span>(<span class="hljs-params"></span>) &#123;<br><span class="hljs-comment">// 代码太多了，自行复制整个页面</span><br><span class="hljs-comment">// 想看结果 可以跳到成品</span><br></code></pre></td></tr></table></figure><p><img src="https://pic.imgdb.cn/item/666682a75e6d1bfa05b59262.png" alt=""></p><p>通常的来讲，这里是放模块代码的，但是QQ音乐分到其他<code>js</code>文件了</p><hr><h2 id="修补环境">修补环境</h2><p><img src="https://pic.imgdb.cn/item/666683765e6d1bfa05b66196.png" alt=""></p><p>通过控制台输入<code>n(147)</code></p><p>从这里看到，这是一个模块，<code>return t</code>，又调用了<code>t</code>函数，这里我们把它断点一下</p><p><img src="https://pic.imgdb.cn/item/666684365e6d1bfa05b720d1.png" alt=""></p><p>然后就到这个地方了，画线是<code>t</code>函数，但他是包裹在里面的，因此我们复制整个模块</p><p><img src="https://pic.imgdb.cn/item/66668a055e6d1bfa05beb4cb.png" alt=""></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">function</span>(<span class="hljs-params">t, e, n</span>) &#123;<br>    <span class="hljs-string">&quot;use strict&quot;</span>;<br>    n.<span class="hljs-title function_">r</span>(e),<br>    <span class="hljs-keyword">function</span>(<span class="hljs-params">t</span>) &#123;<br>        <span class="hljs-keyword">var</span> n = <span class="hljs-string">&quot;undefined&quot;</span> !== <span class="hljs-keyword">typeof</span> t ? t : <span class="hljs-string">&quot;undefined&quot;</span> !== <span class="hljs-keyword">typeof</span> <span class="hljs-variable language_">window</span> ? <span class="hljs-variable language_">window</span> : <span class="hljs-string">&quot;undefined&quot;</span> !== <span class="hljs-keyword">typeof</span> self ? self : <span class="hljs-keyword">void</span> <span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">var</span> r = <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-keyword">function</span> <span class="hljs-title function_">t</span>(<span class="hljs-params">e, n, r, i, o, a, u, s</span>) &#123;<br>                <span class="hljs-keyword">var</span> c = !i;<br>                e = +e,<br>                n = n || [<span class="hljs-number">0</span>],<br>                i = i || [[<span class="hljs-variable language_">this</span>], [&#123;&#125;]],<br>  <span class="hljs-comment">// ............. 这里省略一下 因为太长了</span><br>   <span class="hljs-keyword">var</span> i = n.<span class="hljs-property">_getSecuritySign</span>;<br>        <span class="hljs-keyword">delete</span> n.<span class="hljs-property">_getSecuritySign</span>,<br>        e.<span class="hljs-property">default</span> = i<br>    &#125;<br>    .<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>, <span class="hljs-title function_">n</span>(<span class="hljs-number">110</span>))<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="https://pic.imgdb.cn/item/66668c085e6d1bfa05c13701.png" alt=""></p><p>最后就是这样了，现在我们补环境，运行了一下发现<code>ReferenceError: window is not defined</code></p><p>于是，在前面加上，<code>window = global;</code></p><p><img src="https://pic.imgdb.cn/item/66668cca5e6d1bfa05c21957.png" alt=""></p><p>看似正常了，由于加载器是局部类，我们需要通过window去声明全局变量并加载</p><p>因此 把</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> c = <span class="hljs-variable language_">window</span>.<span class="hljs-property">webpackJsonp</span> = <span class="hljs-variable language_">window</span>.<span class="hljs-property">webpackJsonp</span> || []<br>        , i = c.<span class="hljs-property">push</span>.<span class="hljs-title function_">bind</span>(c);<br>    c.<span class="hljs-property">push</span> = t,<br>        c = c.<span class="hljs-title function_">slice</span>();<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> l = <span class="hljs-number">0</span>; l &lt; c.<span class="hljs-property">length</span>; l++)<br>        <span class="hljs-title function_">t</span>(c[l]);<br>    <span class="hljs-keyword">var</span> b = i;<br>    <span class="hljs-title function_">r</span>()<br>&#125;([<br></code></pre></td></tr></table></figure><p>插一句</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> c = <span class="hljs-variable language_">window</span>.<span class="hljs-property">webpackJsonp</span> = <span class="hljs-variable language_">window</span>.<span class="hljs-property">webpackJsonp</span> || []<br>        , i = c.<span class="hljs-property">push</span>.<span class="hljs-title function_">bind</span>(c);<br>    c.<span class="hljs-property">push</span> = t,<br>        c = c.<span class="hljs-title function_">slice</span>();<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> l = <span class="hljs-number">0</span>; l &lt; c.<span class="hljs-property">length</span>; l++)<br>        <span class="hljs-title function_">t</span>(c[l]);<br>    <span class="hljs-keyword">var</span> b = i;<br>    <span class="hljs-title function_">r</span>()<br><span class="hljs-variable language_">window</span>.<span class="hljs-property">bing</span> = d; <span class="hljs-comment">// 声明加载器</span><br>&#125;([<br></code></pre></td></tr></table></figure><p>现在加载器可以用了，这边拿你抓包的数据放进去计算一下，是否和官方一致</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">&#123;<span class="hljs-string">&quot;comm&quot;</span>:&#123;<span class="hljs-string">&quot;cv&quot;</span>:4747474,<span class="hljs-string">&quot;ct&quot;</span>:24,<span class="hljs-string">&quot;format&quot;</span>:<span class="hljs-string">&quot;json&quot;</span>,<span class="hljs-string">&quot;inCharset&quot;</span>:<span class="hljs-string">&quot;utf-8&quot;</span>,<span class="hljs-string">&quot;outCharset&quot;</span>:<span class="hljs-string">&quot;utf-8&quot;</span>,<span class="hljs-string">&quot;notice&quot;</span>:0,<span class="hljs-string">&quot;platform&quot;</span>:<span class="hljs-string">&quot;yqq.json&quot;</span>,<span class="hljs-string">&quot;needNewCode&quot;</span>:1,<span class="hljs-string">&quot;uin&quot;</span>:0,<span class="hljs-string">&quot;g_tk_new_20200303&quot;</span>:5381,<span class="hljs-string">&quot;g_tk&quot;</span>:5381&#125;,<span class="hljs-string">&quot;req_1&quot;</span>:&#123;<span class="hljs-string">&quot;module&quot;</span>:<span class="hljs-string">&quot;music.musicasset.SongFavRead&quot;</span>,<span class="hljs-string">&quot;method&quot;</span>:<span class="hljs-string">&quot;IsSongFanByMid&quot;</span>,<span class="hljs-string">&quot;param&quot;</span>:&#123;<span class="hljs-string">&quot;v_songMid&quot;</span>:[<span class="hljs-string">&quot;00218E3L0kU0fb&quot;</span>,<span class="hljs-string">&quot;002VQQ8b2nNPe3&quot;</span>]&#125;&#125;,<span class="hljs-string">&quot;req_2&quot;</span>:&#123;<span class="hljs-string">&quot;module&quot;</span>:<span class="hljs-string">&quot;music.musichallSong.PlayLyricInfo&quot;</span>,<span class="hljs-string">&quot;method&quot;</span>:<span class="hljs-string">&quot;GetPlayLyricInfo&quot;</span>,<span class="hljs-string">&quot;param&quot;</span>:&#123;<span class="hljs-string">&quot;songMID&quot;</span>:<span class="hljs-string">&quot;00218E3L0kU0fb&quot;</span>,<span class="hljs-string">&quot;songID&quot;</span>:492489014&#125;&#125;,<span class="hljs-string">&quot;req_3&quot;</span>:&#123;<span class="hljs-string">&quot;method&quot;</span>:<span class="hljs-string">&quot;GetCommentCount&quot;</span>,<span class="hljs-string">&quot;module&quot;</span>:<span class="hljs-string">&quot;music.globalComment.GlobalCommentRead&quot;</span>,<span class="hljs-string">&quot;param&quot;</span>:&#123;<span class="hljs-string">&quot;request_list&quot;</span>:[&#123;<span class="hljs-string">&quot;biz_type&quot;</span>:1,<span class="hljs-string">&quot;biz_id&quot;</span>:<span class="hljs-string">&quot;492489014&quot;</span>,<span class="hljs-string">&quot;biz_sub_type&quot;</span>:0&#125;]&#125;&#125;,<span class="hljs-string">&quot;req_4&quot;</span>:&#123;<span class="hljs-string">&quot;module&quot;</span>:<span class="hljs-string">&quot;music.musichallAlbum.AlbumInfoServer&quot;</span>,<span class="hljs-string">&quot;method&quot;</span>:<span class="hljs-string">&quot;GetAlbumDetail&quot;</span>,<span class="hljs-string">&quot;param&quot;</span>:&#123;<span class="hljs-string">&quot;albumMid&quot;</span>:<span class="hljs-string">&quot;0001sESa0DlBPj&quot;</span>&#125;&#125;,<span class="hljs-string">&quot;req_5&quot;</span>:&#123;<span class="hljs-string">&quot;module&quot;</span>:<span class="hljs-string">&quot;vkey.GetVkeyServer&quot;</span>,<span class="hljs-string">&quot;method&quot;</span>:<span class="hljs-string">&quot;CgiGetVkey&quot;</span>,<span class="hljs-string">&quot;param&quot;</span>:&#123;<span class="hljs-string">&quot;guid&quot;</span>:<span class="hljs-string">&quot;6077141855&quot;</span>,<span class="hljs-string">&quot;songmid&quot;</span>:[<span class="hljs-string">&quot;00218E3L0kU0fb&quot;</span>],<span class="hljs-string">&quot;songtype&quot;</span>:[0],<span class="hljs-string">&quot;uin&quot;</span>:<span class="hljs-string">&quot;0&quot;</span>,<span class="hljs-string">&quot;loginflag&quot;</span>:1,<span class="hljs-string">&quot;platform&quot;</span>:<span class="hljs-string">&quot;20&quot;</span>&#125;&#125;&#125;<br><br>sign : zzbf6cbf2b9yja4wk8sobpsltf0vq9naffd16483<br></code></pre></td></tr></table></figure><p>上面是我的，你也可以拿我的</p><p>现在我们声明了<code>window.bing</code>是加载器的，模块也放进数组里了，索引为0，官方调用的时候还传了<code>default</code>函数，因此我们也要传这个函数</p><p>因此调用<code>sign</code>的方法是<code>window.bing(0).default(data)</code></p><p><img src="https://pic.imgdb.cn/item/66668f135e6d1bfa05c641e9.png" alt=""></p><p>但环境报错了，**这里报错的意思-&gt;**加载器尝试调用一个函数，但是没找到</p><p>写句打印，查看是调用那个名字的函数</p><p><img src="https://pic.imgdb.cn/item/66668f985e6d1bfa05c964c4.png" alt=""></p><p>调用的是<code>110</code>的函数，我们要找到在哪调用，而且这个函数的代码，方法也是一样的，回到浏览器控制台 输入<code>n(110)</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">function</span>(<span class="hljs-params">t, e</span>) &#123;<br>        <span class="hljs-keyword">var</span> n;<br>        n = <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span><br>        &#125;();<br>        <span class="hljs-keyword">try</span> &#123;<br>            n = n || <span class="hljs-keyword">new</span> <span class="hljs-title class_">Function</span>(<span class="hljs-string">&quot;return this&quot;</span>)()<br>        &#125; <span class="hljs-keyword">catch</span> (r) &#123;<br>            <span class="hljs-string">&quot;object&quot;</span> === <span class="hljs-keyword">typeof</span> <span class="hljs-variable language_">window</span> &amp;&amp; (n = <span class="hljs-variable language_">window</span>)<br>        &#125;<br>        t.<span class="hljs-property">exports</span> = n<br>    &#125;<br></code></pre></td></tr></table></figure><p>把这个补到加载器的模块里，同时把调用的地方改成<code>window.bing(1)</code>，具体位置在第一个模块的末尾处</p><p><img src="https://pic.imgdb.cn/item/6666918d5e6d1bfa05d3fb3d.png" alt=""></p><p>运行一下，<code>sign</code>就计算出来了</p><p>但是和目标值不同也 <code>正确答案是 zzbf6cbf2b9yja4wk8sobpsltf0vq9naffd16483</code></p><p>这里我挂了几个代理，发现<code>user-agent和host跟sign有关</code></p><p>在开头补上</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs javascript">location = &#123;&#125;<br>location.<span class="hljs-property">host</span> = <span class="hljs-string">&quot;y.qq.com&quot;</span><br>navigator = &#123;&#125;<br>navigator.<span class="hljs-property">userAgent</span> = <span class="hljs-string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/125.0.0.0 Safari/537.36&quot;</span><br></code></pre></td></tr></table></figure><p>再运行一下</p><p><img src="https://pic.imgdb.cn/item/6666925e5e6d1bfa05d84c9c.png" alt=""></p><p>和官方加密的是一样的，签名就弄好了</p><p>那这期就到这里结束了，成品在下面</p><hr><h2 id="成品">成品</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br><span class="line">736</span><br><span class="line">737</span><br><span class="line">738</span><br><span class="line">739</span><br><span class="line">740</span><br><span class="line">741</span><br><span class="line">742</span><br><span class="line">743</span><br><span class="line">744</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-variable language_">window</span> = <span class="hljs-variable language_">global</span><br>location = &#123;&#125;<br>location.<span class="hljs-property">host</span> = <span class="hljs-string">&quot;y.qq.com&quot;</span><br>navigator = &#123;&#125;<br>navigator.<span class="hljs-property">userAgent</span> = <span class="hljs-string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/125.0.0.0 Safari/537.36&quot;</span><br><br>!<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>) &#123;<br>    <span class="hljs-keyword">function</span> <span class="hljs-title function_">t</span>(<span class="hljs-params">t</span>) &#123;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> a, n, d = t[<span class="hljs-number">0</span>], c = t[<span class="hljs-number">1</span>], i = t[<span class="hljs-number">2</span>], l = <span class="hljs-number">0</span>, u = []; l &lt; d.<span class="hljs-property">length</span>; l++)<br>            n = d[l],<br>            <span class="hljs-title class_">Object</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">hasOwnProperty</span>.<span class="hljs-title function_">call</span>(o, n) &amp;&amp; o[n] &amp;&amp; u.<span class="hljs-title function_">push</span>(o[n][<span class="hljs-number">0</span>]),<br>                o[n] = <span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">for</span> (a <span class="hljs-keyword">in</span> c)<br>            <span class="hljs-title class_">Object</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">hasOwnProperty</span>.<span class="hljs-title function_">call</span>(c, a) &amp;&amp; (e[a] = c[a]);<br>        <span class="hljs-keyword">for</span> (b &amp;&amp; <span class="hljs-title function_">b</span>(t); u.<span class="hljs-property">length</span>; )<br>            u.<span class="hljs-title function_">shift</span>()();<br>        <span class="hljs-keyword">return</span> f.<span class="hljs-property">push</span>.<span class="hljs-title function_">apply</span>(f, i || []),<br>            <span class="hljs-title function_">r</span>()<br>    &#125;<br>    <span class="hljs-keyword">function</span> <span class="hljs-title function_">r</span>(<span class="hljs-params"></span>) &#123;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> e, t = <span class="hljs-number">0</span>; t &lt; f.<span class="hljs-property">length</span>; t++) &#123;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> r = f[t], a = !<span class="hljs-number">0</span>, n = <span class="hljs-number">1</span>; n &lt; r.<span class="hljs-property">length</span>; n++) &#123;<br>                <span class="hljs-keyword">var</span> c = r[n];<br>                <span class="hljs-number">0</span> !== o[c] &amp;&amp; (a = !<span class="hljs-number">1</span>)<br>            &#125;<br>            a &amp;&amp; (f.<span class="hljs-title function_">splice</span>(t--, <span class="hljs-number">1</span>),<br>                e = <span class="hljs-title function_">d</span>(d.<span class="hljs-property">s</span> = r[<span class="hljs-number">0</span>]))<br>        &#125;<br>        <span class="hljs-keyword">return</span> e<br>    &#125;<br>    <span class="hljs-keyword">var</span> a = &#123;&#125;<br>        , n = &#123;<br>        <span class="hljs-number">21</span>: <span class="hljs-number">0</span><br>    &#125;<br>        , o = &#123;<br>        <span class="hljs-number">21</span>: <span class="hljs-number">0</span><br>    &#125;<br>        , f = [];<br>    <span class="hljs-keyword">function</span> <span class="hljs-title function_">d</span>(<span class="hljs-params">t</span>) &#123;<br>        <span class="hljs-keyword">if</span> (a[t])<br>            <span class="hljs-keyword">return</span> a[t].<span class="hljs-property">exports</span>;<br>        <span class="hljs-keyword">var</span> r = a[t] = &#123;<br>            <span class="hljs-attr">i</span>: t,<br>            <span class="hljs-attr">l</span>: !<span class="hljs-number">1</span>,<br>            <span class="hljs-attr">exports</span>: &#123;&#125;<br>        &#125;;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(r)<br>        <span class="hljs-keyword">return</span> e[t].<span class="hljs-title function_">call</span>(r.<span class="hljs-property">exports</span>, r, r.<span class="hljs-property">exports</span>, d),<br>            r.<span class="hljs-property">l</span> = !<span class="hljs-number">0</span>,<br>            r.<span class="hljs-property">exports</span><br>    &#125;<br>    d.<span class="hljs-property">e</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>) &#123;<br>        <span class="hljs-keyword">var</span> t = [];<br>        n[e] ? t.<span class="hljs-title function_">push</span>(n[e]) : <span class="hljs-number">0</span> !== n[e] &amp;&amp; &#123;<br>            <span class="hljs-number">1</span>: <span class="hljs-number">1</span>,<br>            <span class="hljs-number">3</span>: <span class="hljs-number">1</span>,<br>            <span class="hljs-number">4</span>: <span class="hljs-number">1</span>,<br>            <span class="hljs-number">5</span>: <span class="hljs-number">1</span>,<br>            <span class="hljs-number">6</span>: <span class="hljs-number">1</span>,<br>            <span class="hljs-number">7</span>: <span class="hljs-number">1</span>,<br>            <span class="hljs-number">8</span>: <span class="hljs-number">1</span>,<br>            <span class="hljs-number">9</span>: <span class="hljs-number">1</span>,<br>            <span class="hljs-number">10</span>: <span class="hljs-number">1</span>,<br>            <span class="hljs-number">11</span>: <span class="hljs-number">1</span>,<br>            <span class="hljs-number">12</span>: <span class="hljs-number">1</span>,<br>            <span class="hljs-number">13</span>: <span class="hljs-number">1</span>,<br>            <span class="hljs-number">14</span>: <span class="hljs-number">1</span>,<br>            <span class="hljs-number">15</span>: <span class="hljs-number">1</span>,<br>            <span class="hljs-number">16</span>: <span class="hljs-number">1</span>,<br>            <span class="hljs-number">17</span>: <span class="hljs-number">1</span>,<br>            <span class="hljs-number">18</span>: <span class="hljs-number">1</span>,<br>            <span class="hljs-number">19</span>: <span class="hljs-number">1</span>,<br>            <span class="hljs-number">20</span>: <span class="hljs-number">1</span>,<br>            <span class="hljs-number">22</span>: <span class="hljs-number">1</span>,<br>            <span class="hljs-number">23</span>: <span class="hljs-number">1</span>,<br>            <span class="hljs-number">24</span>: <span class="hljs-number">1</span>,<br>            <span class="hljs-number">25</span>: <span class="hljs-number">1</span>,<br>            <span class="hljs-number">26</span>: <span class="hljs-number">1</span><br>        &#125;[e] &amp;&amp; t.<span class="hljs-title function_">push</span>(n[e] = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Promise</span>((<span class="hljs-keyword">function</span>(<span class="hljs-params">t, r</span>) &#123;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> a = <span class="hljs-string">&quot;css/&quot;</span> + (&#123;<br>                    <span class="hljs-number">1</span>: <span class="hljs-string">&quot;common&quot;</span>,<br>                    <span class="hljs-number">3</span>: <span class="hljs-string">&quot;album&quot;</span>,<br>                    <span class="hljs-number">4</span>: <span class="hljs-string">&quot;albumDetail&quot;</span>,<br>                    <span class="hljs-number">5</span>: <span class="hljs-string">&quot;album_mall&quot;</span>,<br>                    <span class="hljs-number">6</span>: <span class="hljs-string">&quot;category&quot;</span>,<br>                    <span class="hljs-number">7</span>: <span class="hljs-string">&quot;cmtpage&quot;</span>,<br>                    <span class="hljs-number">8</span>: <span class="hljs-string">&quot;download_detail&quot;</span>,<br>                    <span class="hljs-number">9</span>: <span class="hljs-string">&quot;index&quot;</span>,<br>                    <span class="hljs-number">10</span>: <span class="hljs-string">&quot;msg_center&quot;</span>,<br>                    <span class="hljs-number">11</span>: <span class="hljs-string">&quot;mv&quot;</span>,<br>                    <span class="hljs-number">12</span>: <span class="hljs-string">&quot;mvList&quot;</span>,<br>                    <span class="hljs-number">13</span>: <span class="hljs-string">&quot;mv_toplist&quot;</span>,<br>                    <span class="hljs-number">14</span>: <span class="hljs-string">&quot;notfound&quot;</span>,<br>                    <span class="hljs-number">15</span>: <span class="hljs-string">&quot;player&quot;</span>,<br>                    <span class="hljs-number">16</span>: <span class="hljs-string">&quot;player_radio&quot;</span>,<br>                    <span class="hljs-number">17</span>: <span class="hljs-string">&quot;playlist&quot;</span>,<br>                    <span class="hljs-number">18</span>: <span class="hljs-string">&quot;playlist_edit&quot;</span>,<br>                    <span class="hljs-number">19</span>: <span class="hljs-string">&quot;profile&quot;</span>,<br>                    <span class="hljs-number">20</span>: <span class="hljs-string">&quot;radio&quot;</span>,<br>                    <span class="hljs-number">22</span>: <span class="hljs-string">&quot;search&quot;</span>,<br>                    <span class="hljs-number">23</span>: <span class="hljs-string">&quot;singer&quot;</span>,<br>                    <span class="hljs-number">24</span>: <span class="hljs-string">&quot;singer_list&quot;</span>,<br>                    <span class="hljs-number">25</span>: <span class="hljs-string">&quot;songDetail&quot;</span>,<br>                    <span class="hljs-number">26</span>: <span class="hljs-string">&quot;toplist&quot;</span><br>                &#125;[e] || e) + <span class="hljs-string">&quot;.&quot;</span> + &#123;<br>                    <span class="hljs-number">1</span>: <span class="hljs-string">&quot;2e3d715e72682303d35b&quot;</span>,<br>                    <span class="hljs-number">3</span>: <span class="hljs-string">&quot;5cf0d69eaf29bcab23d2&quot;</span>,<br>                    <span class="hljs-number">4</span>: <span class="hljs-string">&quot;798353db5b0eb05d5358&quot;</span>,<br>                    <span class="hljs-number">5</span>: <span class="hljs-string">&quot;df4c243f917604263e58&quot;</span>,<br>                    <span class="hljs-number">6</span>: <span class="hljs-string">&quot;20d532d798099a44bc88&quot;</span>,<br>                    <span class="hljs-number">7</span>: <span class="hljs-string">&quot;e3bedf2b5810f8db0684&quot;</span>,<br>                    <span class="hljs-number">8</span>: <span class="hljs-string">&quot;e3bedf2b5810f8db0684&quot;</span>,<br>                    <span class="hljs-number">9</span>: <span class="hljs-string">&quot;ea0adb959fef9011fc25&quot;</span>,<br>                    <span class="hljs-number">10</span>: <span class="hljs-string">&quot;020422608fe8bfb1719a&quot;</span>,<br>                    <span class="hljs-number">11</span>: <span class="hljs-string">&quot;8bdb1df6c5436b790baa&quot;</span>,<br>                    <span class="hljs-number">12</span>: <span class="hljs-string">&quot;47ce9300786df1b70584&quot;</span>,<br>                    <span class="hljs-number">13</span>: <span class="hljs-string">&quot;4aee33230ba2d6b81dce&quot;</span>,<br>                    <span class="hljs-number">14</span>: <span class="hljs-string">&quot;e6f63b0cf57dd029fbd6&quot;</span>,<br>                    <span class="hljs-number">15</span>: <span class="hljs-string">&quot;1d2dbefbea113438324a&quot;</span>,<br>                    <span class="hljs-number">16</span>: <span class="hljs-string">&quot;d893492de07ce97d8048&quot;</span>,<br>                    <span class="hljs-number">17</span>: <span class="hljs-string">&quot;9484fde660fe93d9f9f0&quot;</span>,<br>                    <span class="hljs-number">18</span>: <span class="hljs-string">&quot;67fb85e7f96455763c83&quot;</span>,<br>                    <span class="hljs-number">19</span>: <span class="hljs-string">&quot;5e8c651e74b13244f7cf&quot;</span>,<br>                    <span class="hljs-number">20</span>: <span class="hljs-string">&quot;3befd83c10b19893ec66&quot;</span>,<br>                    <span class="hljs-number">22</span>: <span class="hljs-string">&quot;b2d11f89ea6a512a2302&quot;</span>,<br>                    <span class="hljs-number">23</span>: <span class="hljs-string">&quot;c7a38353c5f4ebb47491&quot;</span>,<br>                    <span class="hljs-number">24</span>: <span class="hljs-string">&quot;df0961952a2d3f022894&quot;</span>,<br>                    <span class="hljs-number">25</span>: <span class="hljs-string">&quot;4c080567e394fd45608b&quot;</span>,<br>                    <span class="hljs-number">26</span>: <span class="hljs-string">&quot;8edb142553f97482e00f&quot;</span><br>                &#125;[e] + <span class="hljs-string">&quot;.chunk.css?max_age=2592000&quot;</span>, o = d.<span class="hljs-property">p</span> + a, f = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementsByTagName</span>(<span class="hljs-string">&quot;link&quot;</span>), c = <span class="hljs-number">0</span>; c &lt; f.<span class="hljs-property">length</span>; c++) &#123;<br>                    <span class="hljs-keyword">var</span> i = (b = f[c]).<span class="hljs-title function_">getAttribute</span>(<span class="hljs-string">&quot;data-href&quot;</span>) || b.<span class="hljs-title function_">getAttribute</span>(<span class="hljs-string">&quot;href&quot;</span>);<br>                    <span class="hljs-keyword">if</span> (<span class="hljs-string">&quot;stylesheet&quot;</span> === b.<span class="hljs-property">rel</span> &amp;&amp; (i === a || i === o))<br>                        <span class="hljs-keyword">return</span> <span class="hljs-title function_">t</span>()<br>                &#125;<br>                <span class="hljs-keyword">var</span> l = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementsByTagName</span>(<span class="hljs-string">&quot;style&quot;</span>);<br>                <span class="hljs-keyword">for</span> (c = <span class="hljs-number">0</span>; c &lt; l.<span class="hljs-property">length</span>; c++) &#123;<br>                    <span class="hljs-keyword">var</span> b;<br>                    <span class="hljs-keyword">if</span> ((i = (b = l[c]).<span class="hljs-title function_">getAttribute</span>(<span class="hljs-string">&quot;data-href&quot;</span>)) === a || i === o)<br>                        <span class="hljs-keyword">return</span> <span class="hljs-title function_">t</span>()<br>                &#125;<br>                <span class="hljs-keyword">var</span> u = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">createElement</span>(<span class="hljs-string">&quot;link&quot;</span>);<br>                u.<span class="hljs-property">rel</span> = <span class="hljs-string">&quot;stylesheet&quot;</span>,<br>                    u.<span class="hljs-property">type</span> = <span class="hljs-string">&quot;text/css&quot;</span>,<br>                    u.<span class="hljs-property">onload</span> = t,<br>                    u.<span class="hljs-property">onerror</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params">t</span>) &#123;<br>                        <span class="hljs-keyword">var</span> a = t &amp;&amp; t.<span class="hljs-property">target</span> &amp;&amp; t.<span class="hljs-property">target</span>.<span class="hljs-property">src</span> || o<br>                            , f = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Error</span>(<span class="hljs-string">&quot;Loading CSS chunk &quot;</span> + e + <span class="hljs-string">&quot; failed.\n(&quot;</span> + a + <span class="hljs-string">&quot;)&quot;</span>);<br>                        f.<span class="hljs-property">code</span> = <span class="hljs-string">&quot;CSS_CHUNK_LOAD_FAILED&quot;</span>,<br>                            f.<span class="hljs-property">request</span> = a,<br>                            <span class="hljs-keyword">delete</span> n[e],<br>                            u.<span class="hljs-property">parentNode</span>.<span class="hljs-title function_">removeChild</span>(u),<br>                            <span class="hljs-title function_">r</span>(f)<br>                    &#125;<br>                    ,<br>                    u.<span class="hljs-property">href</span> = o,<br>                <span class="hljs-number">0</span> !== u.<span class="hljs-property">href</span>.<span class="hljs-title function_">indexOf</span>(<span class="hljs-variable language_">window</span>.<span class="hljs-property">location</span>.<span class="hljs-property">origin</span> + <span class="hljs-string">&quot;/&quot;</span>) &amp;&amp; (u.<span class="hljs-property">crossOrigin</span> = <span class="hljs-string">&quot;anonymous&quot;</span>),<br>                    <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementsByTagName</span>(<span class="hljs-string">&quot;head&quot;</span>)[<span class="hljs-number">0</span>].<span class="hljs-title function_">appendChild</span>(u)<br>            &#125;<br>        )).<span class="hljs-title function_">then</span>((<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>                n[e] = <span class="hljs-number">0</span><br>            &#125;<br>        )));<br>        <span class="hljs-keyword">var</span> r = o[e];<br>        <span class="hljs-keyword">if</span> (<span class="hljs-number">0</span> !== r)<br>            <span class="hljs-keyword">if</span> (r)<br>                t.<span class="hljs-title function_">push</span>(r[<span class="hljs-number">2</span>]);<br>            <span class="hljs-keyword">else</span> &#123;<br>                <span class="hljs-keyword">var</span> a = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Promise</span>((<span class="hljs-keyword">function</span>(<span class="hljs-params">t, a</span>) &#123;<br>                        r = o[e] = [t, a]<br>                    &#125;<br>                ));<br>                t.<span class="hljs-title function_">push</span>(r[<span class="hljs-number">2</span>] = a);<br>                <span class="hljs-keyword">var</span> f, c = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">createElement</span>(<span class="hljs-string">&quot;script&quot;</span>);<br>                c.<span class="hljs-property">charset</span> = <span class="hljs-string">&quot;utf-8&quot;</span>,<br>                    c.<span class="hljs-property">timeout</span> = <span class="hljs-number">120</span>,<br>                d.<span class="hljs-property">nc</span> &amp;&amp; c.<span class="hljs-title function_">setAttribute</span>(<span class="hljs-string">&quot;nonce&quot;</span>, d.<span class="hljs-property">nc</span>),<br>                    c.<span class="hljs-property">src</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>) &#123;<br>                        <span class="hljs-keyword">return</span> d.<span class="hljs-property">p</span> + <span class="hljs-string">&quot;js/&quot;</span> + (&#123;<br>                            <span class="hljs-number">1</span>: <span class="hljs-string">&quot;common&quot;</span>,<br>                            <span class="hljs-number">3</span>: <span class="hljs-string">&quot;album&quot;</span>,<br>                            <span class="hljs-number">4</span>: <span class="hljs-string">&quot;albumDetail&quot;</span>,<br>                            <span class="hljs-number">5</span>: <span class="hljs-string">&quot;album_mall&quot;</span>,<br>                            <span class="hljs-number">6</span>: <span class="hljs-string">&quot;category&quot;</span>,<br>                            <span class="hljs-number">7</span>: <span class="hljs-string">&quot;cmtpage&quot;</span>,<br>                            <span class="hljs-number">8</span>: <span class="hljs-string">&quot;download_detail&quot;</span>,<br>                            <span class="hljs-number">9</span>: <span class="hljs-string">&quot;index&quot;</span>,<br>                            <span class="hljs-number">10</span>: <span class="hljs-string">&quot;msg_center&quot;</span>,<br>                            <span class="hljs-number">11</span>: <span class="hljs-string">&quot;mv&quot;</span>,<br>                            <span class="hljs-number">12</span>: <span class="hljs-string">&quot;mvList&quot;</span>,<br>                            <span class="hljs-number">13</span>: <span class="hljs-string">&quot;mv_toplist&quot;</span>,<br>                            <span class="hljs-number">14</span>: <span class="hljs-string">&quot;notfound&quot;</span>,<br>                            <span class="hljs-number">15</span>: <span class="hljs-string">&quot;player&quot;</span>,<br>                            <span class="hljs-number">16</span>: <span class="hljs-string">&quot;player_radio&quot;</span>,<br>                            <span class="hljs-number">17</span>: <span class="hljs-string">&quot;playlist&quot;</span>,<br>                            <span class="hljs-number">18</span>: <span class="hljs-string">&quot;playlist_edit&quot;</span>,<br>                            <span class="hljs-number">19</span>: <span class="hljs-string">&quot;profile&quot;</span>,<br>                            <span class="hljs-number">20</span>: <span class="hljs-string">&quot;radio&quot;</span>,<br>                            <span class="hljs-number">22</span>: <span class="hljs-string">&quot;search&quot;</span>,<br>                            <span class="hljs-number">23</span>: <span class="hljs-string">&quot;singer&quot;</span>,<br>                            <span class="hljs-number">24</span>: <span class="hljs-string">&quot;singer_list&quot;</span>,<br>                            <span class="hljs-number">25</span>: <span class="hljs-string">&quot;songDetail&quot;</span>,<br>                            <span class="hljs-number">26</span>: <span class="hljs-string">&quot;toplist&quot;</span><br>                        &#125;[e] || e) + <span class="hljs-string">&quot;.chunk.&quot;</span> + &#123;<br>                            <span class="hljs-number">1</span>: <span class="hljs-string">&quot;5e1cf4fe669e008d3018&quot;</span>,<br>                            <span class="hljs-number">3</span>: <span class="hljs-string">&quot;60c3e6466bf86237e3c3&quot;</span>,<br>                            <span class="hljs-number">4</span>: <span class="hljs-string">&quot;805f72801c9039bdba42&quot;</span>,<br>                            <span class="hljs-number">5</span>: <span class="hljs-string">&quot;e7991b6193953db62b75&quot;</span>,<br>                            <span class="hljs-number">6</span>: <span class="hljs-string">&quot;63d12c68f904e8bd4d62&quot;</span>,<br>                            <span class="hljs-number">7</span>: <span class="hljs-string">&quot;3d6ef0cefab73ee07acb&quot;</span>,<br>                            <span class="hljs-number">8</span>: <span class="hljs-string">&quot;400de3c452106624cb2f&quot;</span>,<br>                            <span class="hljs-number">9</span>: <span class="hljs-string">&quot;f35380810bd59ed43e01&quot;</span>,<br>                            <span class="hljs-number">10</span>: <span class="hljs-string">&quot;66c75aabeb4ef645fa45&quot;</span>,<br>                            <span class="hljs-number">11</span>: <span class="hljs-string">&quot;55abde3b3e60e5d208da&quot;</span>,<br>                            <span class="hljs-number">12</span>: <span class="hljs-string">&quot;b381c0102fa5c4afde60&quot;</span>,<br>                            <span class="hljs-number">13</span>: <span class="hljs-string">&quot;9ea1628ad380b2d9b674&quot;</span>,<br>                            <span class="hljs-number">14</span>: <span class="hljs-string">&quot;5ea243997c9b940a0048&quot;</span>,<br>                            <span class="hljs-number">15</span>: <span class="hljs-string">&quot;338035f09211f838463d&quot;</span>,<br>                            <span class="hljs-number">16</span>: <span class="hljs-string">&quot;5a9fe70b49e8cd1e9a8c&quot;</span>,<br>                            <span class="hljs-number">17</span>: <span class="hljs-string">&quot;9eadbe22abeff411fa84&quot;</span>,<br>                            <span class="hljs-number">18</span>: <span class="hljs-string">&quot;6ef03976f240a0d38967&quot;</span>,<br>                            <span class="hljs-number">19</span>: <span class="hljs-string">&quot;280cd4639fdbebe5f12f&quot;</span>,<br>                            <span class="hljs-number">20</span>: <span class="hljs-string">&quot;21252db45de3ea95a092&quot;</span>,<br>                            <span class="hljs-number">22</span>: <span class="hljs-string">&quot;3ab3f879eb1b53f4e1b9&quot;</span>,<br>                            <span class="hljs-number">23</span>: <span class="hljs-string">&quot;d4001fe29c8bc7a90f63&quot;</span>,<br>                            <span class="hljs-number">24</span>: <span class="hljs-string">&quot;06f5c944e03952dce97a&quot;</span>,<br>                            <span class="hljs-number">25</span>: <span class="hljs-string">&quot;f3e1e2a50b799fafc8de&quot;</span>,<br>                            <span class="hljs-number">26</span>: <span class="hljs-string">&quot;38da0668d79ba663e75e&quot;</span><br>                        &#125;[e] + <span class="hljs-string">&quot;.js?max_age=2592000&quot;</span><br>                    &#125;(e),<br>                <span class="hljs-number">0</span> !== c.<span class="hljs-property">src</span>.<span class="hljs-title function_">indexOf</span>(<span class="hljs-variable language_">window</span>.<span class="hljs-property">location</span>.<span class="hljs-property">origin</span> + <span class="hljs-string">&quot;/&quot;</span>) &amp;&amp; (c.<span class="hljs-property">crossOrigin</span> = <span class="hljs-string">&quot;anonymous&quot;</span>);<br>                <span class="hljs-keyword">var</span> i = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Error</span>;<br>                f = <span class="hljs-keyword">function</span>(<span class="hljs-params">t</span>) &#123;<br>                    c.<span class="hljs-property">onerror</span> = c.<span class="hljs-property">onload</span> = <span class="hljs-literal">null</span>,<br>                        <span class="hljs-built_in">clearTimeout</span>(l);<br>                    <span class="hljs-keyword">var</span> r = o[e];<br>                    <span class="hljs-keyword">if</span> (<span class="hljs-number">0</span> !== r) &#123;<br>                        <span class="hljs-keyword">if</span> (r) &#123;<br>                            <span class="hljs-keyword">var</span> a = t &amp;&amp; (<span class="hljs-string">&quot;load&quot;</span> === t.<span class="hljs-property">type</span> ? <span class="hljs-string">&quot;missing&quot;</span> : t.<span class="hljs-property">type</span>)<br>                                , n = t &amp;&amp; t.<span class="hljs-property">target</span> &amp;&amp; t.<span class="hljs-property">target</span>.<span class="hljs-property">src</span>;<br>                            i.<span class="hljs-property">message</span> = <span class="hljs-string">&quot;Loading chunk &quot;</span> + e + <span class="hljs-string">&quot; failed.\n(&quot;</span> + a + <span class="hljs-string">&quot;: &quot;</span> + n + <span class="hljs-string">&quot;)&quot;</span>,<br>                                i.<span class="hljs-property">name</span> = <span class="hljs-string">&quot;ChunkLoadError&quot;</span>,<br>                                i.<span class="hljs-property">type</span> = a,<br>                                i.<span class="hljs-property">request</span> = n,<br>                                r[<span class="hljs-number">1</span>](i)<br>                        &#125;<br>                        o[e] = <span class="hljs-keyword">void</span> <span class="hljs-number">0</span><br>                    &#125;<br>                &#125;<br>                ;<br>                <span class="hljs-keyword">var</span> l = <span class="hljs-built_in">setTimeout</span>((<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>                        <span class="hljs-title function_">f</span>(&#123;<br>                            <span class="hljs-attr">type</span>: <span class="hljs-string">&quot;timeout&quot;</span>,<br>                            <span class="hljs-attr">target</span>: c<br>                        &#125;)<br>                    &#125;<br>                ), <span class="hljs-number">12e4</span>);<br>                c.<span class="hljs-property">onerror</span> = c.<span class="hljs-property">onload</span> = f,<br>                    <span class="hljs-variable language_">document</span>.<span class="hljs-property">head</span>.<span class="hljs-title function_">appendChild</span>(c)<br>            &#125;<br>        <span class="hljs-keyword">return</span> <span class="hljs-title class_">Promise</span>.<span class="hljs-title function_">all</span>(t)<br>    &#125;<br>        ,<br>        d.<span class="hljs-property">m</span> = e,<br>        d.<span class="hljs-property">c</span> = a,<br>        d.<span class="hljs-property">d</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params">e, t, r</span>) &#123;<br>            d.<span class="hljs-title function_">o</span>(e, t) || <span class="hljs-title class_">Object</span>.<span class="hljs-title function_">defineProperty</span>(e, t, &#123;<br>                <span class="hljs-attr">enumerable</span>: !<span class="hljs-number">0</span>,<br>                <span class="hljs-attr">get</span>: r<br>            &#125;)<br>        &#125;<br>        ,<br>        d.<span class="hljs-property">r</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>) &#123;<br>            <span class="hljs-string">&quot;undefined&quot;</span> !== <span class="hljs-keyword">typeof</span> <span class="hljs-title class_">Symbol</span> &amp;&amp; <span class="hljs-title class_">Symbol</span>.<span class="hljs-property">toStringTag</span> &amp;&amp; <span class="hljs-title class_">Object</span>.<span class="hljs-title function_">defineProperty</span>(e, <span class="hljs-title class_">Symbol</span>.<span class="hljs-property">toStringTag</span>, &#123;<br>                <span class="hljs-attr">value</span>: <span class="hljs-string">&quot;Module&quot;</span><br>            &#125;),<br>                <span class="hljs-title class_">Object</span>.<span class="hljs-title function_">defineProperty</span>(e, <span class="hljs-string">&quot;__esModule&quot;</span>, &#123;<br>                    <span class="hljs-attr">value</span>: !<span class="hljs-number">0</span><br>                &#125;)<br>        &#125;<br>        ,<br>        d.<span class="hljs-property">t</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params">e, t</span>) &#123;<br>            <span class="hljs-keyword">if</span> (<span class="hljs-number">1</span> &amp; t &amp;&amp; (e = <span class="hljs-title function_">d</span>(e)),<br>            <span class="hljs-number">8</span> &amp; t)<br>                <span class="hljs-keyword">return</span> e;<br>            <span class="hljs-keyword">if</span> (<span class="hljs-number">4</span> &amp; t &amp;&amp; <span class="hljs-string">&quot;object&quot;</span> === <span class="hljs-keyword">typeof</span> e &amp;&amp; e &amp;&amp; e.<span class="hljs-property">__esModule</span>)<br>                <span class="hljs-keyword">return</span> e;<br>            <span class="hljs-keyword">var</span> r = <span class="hljs-title class_">Object</span>.<span class="hljs-title function_">create</span>(<span class="hljs-literal">null</span>);<br>            <span class="hljs-keyword">if</span> (d.<span class="hljs-title function_">r</span>(r),<br>                <span class="hljs-title class_">Object</span>.<span class="hljs-title function_">defineProperty</span>(r, <span class="hljs-string">&quot;default&quot;</span>, &#123;<br>                    <span class="hljs-attr">enumerable</span>: !<span class="hljs-number">0</span>,<br>                    <span class="hljs-attr">value</span>: e<br>                &#125;),<br>            <span class="hljs-number">2</span> &amp; t &amp;&amp; <span class="hljs-string">&quot;string&quot;</span> != <span class="hljs-keyword">typeof</span> e)<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> a <span class="hljs-keyword">in</span> e)<br>                    d.<span class="hljs-title function_">d</span>(r, a, <span class="hljs-keyword">function</span>(<span class="hljs-params">t</span>) &#123;<br>                        <span class="hljs-keyword">return</span> e[t]<br>                    &#125;<br>                        .<span class="hljs-title function_">bind</span>(<span class="hljs-literal">null</span>, a));<br>            <span class="hljs-keyword">return</span> r<br>        &#125;<br>        ,<br>        d.<span class="hljs-property">n</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>) &#123;<br>            <span class="hljs-keyword">var</span> t = e &amp;&amp; e.<span class="hljs-property">__esModule</span> ? <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>                        <span class="hljs-keyword">return</span> e.<span class="hljs-property">default</span><br>                    &#125;<br>                    : <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>                        <span class="hljs-keyword">return</span> e<br>                    &#125;<br>            ;<br>            <span class="hljs-keyword">return</span> d.<span class="hljs-title function_">d</span>(t, <span class="hljs-string">&quot;a&quot;</span>, t),<br>                t<br>        &#125;<br>        ,<br>        d.<span class="hljs-property">o</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params">e, t</span>) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-title class_">Object</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">hasOwnProperty</span>.<span class="hljs-title function_">call</span>(e, t)<br>        &#125;<br>        ,<br>        d.<span class="hljs-property">p</span> = <span class="hljs-string">&quot;/ryqq/&quot;</span>,<br>        d.<span class="hljs-property">oe</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>) &#123;<br>            <span class="hljs-keyword">throw</span> e<br>        &#125;<br>    ;<br>    <span class="hljs-keyword">var</span> c = <span class="hljs-variable language_">window</span>.<span class="hljs-property">webpackJsonp</span> = <span class="hljs-variable language_">window</span>.<span class="hljs-property">webpackJsonp</span> || []<br>        , i = c.<span class="hljs-property">push</span>.<span class="hljs-title function_">bind</span>(c);<br>    c.<span class="hljs-property">push</span> = t,<br>        c = c.<span class="hljs-title function_">slice</span>();<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> l = <span class="hljs-number">0</span>; l &lt; c.<span class="hljs-property">length</span>; l++)<br>        <span class="hljs-title function_">t</span>(c[l]);<br>    <span class="hljs-keyword">var</span> b = i;<br>    <span class="hljs-title function_">r</span>()<br>    <span class="hljs-variable language_">window</span>.<span class="hljs-property">bing</span> = d; <span class="hljs-comment">// 声明加载器</span><br>&#125;([<br>    <span class="hljs-keyword">function</span>(<span class="hljs-params">t, e, n</span>) &#123;<br>        <span class="hljs-string">&quot;use strict&quot;</span>;<br>        n.<span class="hljs-title function_">r</span>(e),<br>            <span class="hljs-keyword">function</span>(<span class="hljs-params">t</span>) &#123;<br>                <span class="hljs-keyword">var</span> n = <span class="hljs-string">&quot;undefined&quot;</span> !== <span class="hljs-keyword">typeof</span> t ? t : <span class="hljs-string">&quot;undefined&quot;</span> !== <span class="hljs-keyword">typeof</span> <span class="hljs-variable language_">window</span> ? <span class="hljs-variable language_">window</span> : <span class="hljs-string">&quot;undefined&quot;</span> !== <span class="hljs-keyword">typeof</span> self ? self : <span class="hljs-keyword">void</span> <span class="hljs-number">0</span>;<br>                <span class="hljs-keyword">var</span> r = <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>                    <span class="hljs-keyword">function</span> <span class="hljs-title function_">t</span>(<span class="hljs-params">e, n, r, i, o, a, u, s</span>) &#123;<br>                        <span class="hljs-keyword">var</span> c = !i;<br>                        e = +e,<br>                            n = n || [<span class="hljs-number">0</span>],<br>                            i = i || [[<span class="hljs-variable language_">this</span>], [&#123;&#125;]],<br>                            o = o || &#123;&#125;;<br>                        <span class="hljs-keyword">var</span> l, f = [], p = <span class="hljs-literal">null</span>;<br>                        <span class="hljs-title class_">Function</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">bind</span> || (l = [].<span class="hljs-property">slice</span>,<br>                                <span class="hljs-title class_">Function</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">bind</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params">t</span>) &#123;<br>                                    <span class="hljs-keyword">if</span> (<span class="hljs-string">&quot;function&quot;</span> != <span class="hljs-keyword">typeof</span> <span class="hljs-variable language_">this</span>)<br>                                        <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">TypeError</span>(<span class="hljs-string">&quot;bind101&quot;</span>);<br>                                    <span class="hljs-keyword">var</span> e = l.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">arguments</span>, <span class="hljs-number">1</span>)<br>                                        , n = e.<span class="hljs-property">length</span><br>                                        , r = <span class="hljs-variable language_">this</span><br>                                        , i = <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;&#125;<br>                                        , o = <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>                                        <span class="hljs-keyword">return</span> e.<span class="hljs-property">length</span> = n,<br>                                            e.<span class="hljs-property">push</span>.<span class="hljs-title function_">apply</span>(e, <span class="hljs-variable language_">arguments</span>),<br>                                            r.<span class="hljs-title function_">apply</span>(i.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-title function_">isPrototypeOf</span>(<span class="hljs-variable language_">this</span>) ? <span class="hljs-variable language_">this</span> : t, e)<br>                                    &#125;;<br>                                    <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span> &amp;&amp; (i.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>),<br>                                        o.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span> = <span class="hljs-keyword">new</span> i,<br>                                        o<br>                                &#125;<br>                        );<br>                        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> d = [<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>                            i[i.<span class="hljs-property">length</span> - <span class="hljs-number">2</span>] = i[i.<span class="hljs-property">length</span> - <span class="hljs-number">2</span>] + i.<span class="hljs-title function_">pop</span>()<br>                        &#125;<br>                            , <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>                                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> a = n[e++], u = [], s = n[e++], c = n[e++], l = [], f = <span class="hljs-number">0</span>; f &lt; s; f++)<br>                                    u[n[e++]] = i[n[e++]];<br>                                <span class="hljs-keyword">for</span> (f = <span class="hljs-number">0</span>; f &lt; c; f++)<br>                                    l[f] = n[e++];<br>                                i.<span class="hljs-title function_">push</span>((<span class="hljs-keyword">function</span> <span class="hljs-title function_">e</span>(<span class="hljs-params"></span>) &#123;<br>                                        <span class="hljs-keyword">var</span> i = u.<span class="hljs-title function_">slice</span>(<span class="hljs-number">0</span>);<br>                                        i[<span class="hljs-number">0</span>] = [<span class="hljs-variable language_">this</span>],<br>                                            i[<span class="hljs-number">1</span>] = [<span class="hljs-variable language_">arguments</span>],<br>                                            i[<span class="hljs-number">2</span>] = [e];<br>                                        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> s = <span class="hljs-number">0</span>; s &lt; l.<span class="hljs-property">length</span> &amp;&amp; s &lt; <span class="hljs-variable language_">arguments</span>.<span class="hljs-property">length</span>; s++)<br>                                            <span class="hljs-number">0</span> &lt; l[s] &amp;&amp; (i[l[s]] = [<span class="hljs-variable language_">arguments</span>[s]]);<br>                                        <span class="hljs-keyword">return</span> <span class="hljs-title function_">t</span>(a, n, r, i, o)<br>                                    &#125;<br>                                ))<br>                            &#125;<br>                            , <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>                                i[i.<span class="hljs-property">length</span> - <span class="hljs-number">2</span>] = i[i.<span class="hljs-property">length</span> - <span class="hljs-number">2</span>] | i.<span class="hljs-title function_">pop</span>()<br>                            &#125;<br>                            , <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>                                i.<span class="hljs-title function_">push</span>(i[n[e++]][<span class="hljs-number">0</span>])<br>                            &#125;<br>                            , <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>                                <span class="hljs-keyword">var</span> t = n[e++]<br>                                    , r = i[i.<span class="hljs-property">length</span> - <span class="hljs-number">2</span> - t];<br>                                i[i.<span class="hljs-property">length</span> - <span class="hljs-number">2</span> - t] = i.<span class="hljs-title function_">pop</span>(),<br>                                    i.<span class="hljs-title function_">push</span>(r)<br>                            &#125;<br>                            , , <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>                                <span class="hljs-keyword">var</span> t = n[e++]<br>                                    , r = t ? i.<span class="hljs-title function_">slice</span>(-t) : [];<br>                                i.<span class="hljs-property">length</span> -= t,<br>                                    t = i.<span class="hljs-title function_">pop</span>(),<br>                                    i.<span class="hljs-title function_">push</span>(t[<span class="hljs-number">0</span>][t[<span class="hljs-number">1</span>]].<span class="hljs-title function_">apply</span>(t[<span class="hljs-number">0</span>], r))<br>                            &#125;<br>                            , , , <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>                                <span class="hljs-keyword">var</span> t = n[e++];<br>                                i[i.<span class="hljs-property">length</span> - <span class="hljs-number">1</span>] &amp;&amp; (e = t)<br>                            &#125;<br>                            , <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>                                <span class="hljs-keyword">var</span> t = n[e++]<br>                                    , r = t ? i.<span class="hljs-title function_">slice</span>(-t) : [];<br>                                i.<span class="hljs-property">length</span> -= t,<br>                                    r.<span class="hljs-title function_">unshift</span>(<span class="hljs-literal">null</span>),<br>                                    i.<span class="hljs-title function_">push</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>                                        <span class="hljs-keyword">return</span> <span class="hljs-keyword">function</span>(<span class="hljs-params">t, e, n</span>) &#123;<br>                                            <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> (<span class="hljs-title class_">Function</span>.<span class="hljs-property">bind</span>.<span class="hljs-title function_">apply</span>(t, e))<br>                                        &#125;<br>                                            .<span class="hljs-title function_">apply</span>(<span class="hljs-literal">null</span>, <span class="hljs-variable language_">arguments</span>)<br>                                    &#125;(i.<span class="hljs-title function_">pop</span>(), r))<br>                            &#125;<br>                            , <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>                                i[i.<span class="hljs-property">length</span> - <span class="hljs-number">2</span>] = i[i.<span class="hljs-property">length</span> - <span class="hljs-number">2</span>] - i.<span class="hljs-title function_">pop</span>()<br>                            &#125;<br>                            , <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>                                <span class="hljs-keyword">var</span> t = i[i.<span class="hljs-property">length</span> - <span class="hljs-number">2</span>];<br>                                t[<span class="hljs-number">0</span>][t[<span class="hljs-number">1</span>]] = i[i.<span class="hljs-property">length</span> - <span class="hljs-number">1</span>]<br>                            &#125;<br>                            , , <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>                                <span class="hljs-keyword">var</span> t = n[e++];<br>                                i[t] = <span class="hljs-keyword">void</span> <span class="hljs-number">0</span> === i[t] ? [] : i[t]<br>                            &#125;<br>                            , , <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>                                i.<span class="hljs-title function_">push</span>(!i.<span class="hljs-title function_">pop</span>())<br>                            &#125;<br>                            , , , , <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>                                i.<span class="hljs-title function_">push</span>([n[e++]])<br>                            &#125;<br>                            , <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>                                i[i.<span class="hljs-property">length</span> - <span class="hljs-number">1</span>] = r[i[i.<span class="hljs-property">length</span> - <span class="hljs-number">1</span>]]<br>                            &#125;<br>                            , , <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>                                i.<span class="hljs-title function_">push</span>(<span class="hljs-string">&quot;&quot;</span>)<br>                            &#125;<br>                            , , <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>                                i[i.<span class="hljs-property">length</span> - <span class="hljs-number">2</span>] = i[i.<span class="hljs-property">length</span> - <span class="hljs-number">2</span>] &lt;&lt; i.<span class="hljs-title function_">pop</span>()<br>                            &#125;<br>                            , , <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>                                <span class="hljs-keyword">var</span> t = i.<span class="hljs-title function_">pop</span>();<br>                                i.<span class="hljs-title function_">push</span>([i[i.<span class="hljs-title function_">pop</span>()][<span class="hljs-number">0</span>], t])<br>                            &#125;<br>                            , <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>                                i.<span class="hljs-title function_">push</span>(i[i.<span class="hljs-title function_">pop</span>()[<span class="hljs-number">0</span>]][<span class="hljs-number">0</span>])<br>                            &#125;<br>                            , , <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>                                i[i.<span class="hljs-property">length</span> - <span class="hljs-number">1</span>] = n[e++]<br>                            &#125;<br>                            , <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>                                i[i.<span class="hljs-property">length</span> - <span class="hljs-number">2</span>] = i[i.<span class="hljs-property">length</span> - <span class="hljs-number">2</span>] &gt;&gt; i.<span class="hljs-title function_">pop</span>()<br>                            &#125;<br>                            , , <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>                                i.<span class="hljs-title function_">push</span>(!<span class="hljs-number">1</span>)<br>                            &#125;<br>                            , <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>                                i[i.<span class="hljs-property">length</span> - <span class="hljs-number">2</span>] = i[i.<span class="hljs-property">length</span> - <span class="hljs-number">2</span>] &gt; i.<span class="hljs-title function_">pop</span>()<br>                            &#125;<br>                            , , <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>                                i[i.<span class="hljs-property">length</span> - <span class="hljs-number">2</span>] = i[i.<span class="hljs-property">length</span> - <span class="hljs-number">2</span>] ^ i.<span class="hljs-title function_">pop</span>()<br>                            &#125;<br>                            , <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>                                i.<span class="hljs-title function_">push</span>([i.<span class="hljs-title function_">pop</span>(), i.<span class="hljs-title function_">pop</span>()].<span class="hljs-title function_">reverse</span>())<br>                            &#125;<br>                            , <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>                                i.<span class="hljs-title function_">pop</span>()<br>                            &#125;<br>                            , <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>                                i[i[i.<span class="hljs-property">length</span> - <span class="hljs-number">2</span>][<span class="hljs-number">0</span>]][<span class="hljs-number">0</span>] = i[i.<span class="hljs-property">length</span> - <span class="hljs-number">1</span>]<br>                            &#125;<br>                            , , , , <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>                                i.<span class="hljs-title function_">push</span>(i[i.<span class="hljs-property">length</span> - <span class="hljs-number">1</span>])<br>                            &#125;<br>                            , , <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>                                <span class="hljs-keyword">return</span> !<span class="hljs-number">0</span><br>                            &#125;<br>                            , <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>                                i.<span class="hljs-title function_">push</span>([r, i.<span class="hljs-title function_">pop</span>()])<br>                            &#125;<br>                            , <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>                                <span class="hljs-keyword">var</span> t = n[e++]<br>                                    , o = t ? i.<span class="hljs-title function_">slice</span>(-t) : [];<br>                                i.<span class="hljs-property">length</span> -= t,<br>                                    i.<span class="hljs-title function_">push</span>(i.<span class="hljs-title function_">pop</span>().<span class="hljs-title function_">apply</span>(r, o))<br>                            &#125;<br>                            , <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>                                i[i.<span class="hljs-property">length</span> - <span class="hljs-number">2</span>] = i[i.<span class="hljs-property">length</span> - <span class="hljs-number">2</span>] &gt;= i.<span class="hljs-title function_">pop</span>()<br>                            &#125;<br>                            , , , <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>                                i.<span class="hljs-property">length</span> = n[e++]<br>                            &#125;<br>                            , , <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>                                <span class="hljs-keyword">var</span> t = i.<span class="hljs-title function_">pop</span>()<br>                                    , e = i.<span class="hljs-title function_">pop</span>();<br>                                i.<span class="hljs-title function_">push</span>([e[<span class="hljs-number">0</span>][e[<span class="hljs-number">1</span>]], t])<br>                            &#125;<br>                            , , <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>                                i[i.<span class="hljs-property">length</span> - <span class="hljs-number">2</span>] = i[i.<span class="hljs-property">length</span> - <span class="hljs-number">2</span>] &amp; i.<span class="hljs-title function_">pop</span>()<br>                            &#125;<br>                            , <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>                                e = n[e++]<br>                            &#125;<br>                            , , <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>                                i[i.<span class="hljs-property">length</span> - <span class="hljs-number">1</span>] += <span class="hljs-title class_">String</span>.<span class="hljs-title function_">fromCharCode</span>(n[e++])<br>                            &#125;<br>                            , , , <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>                                i[i.<span class="hljs-property">length</span> - <span class="hljs-number">2</span>] = i[i.<span class="hljs-property">length</span> - <span class="hljs-number">2</span>] === i.<span class="hljs-title function_">pop</span>()<br>                            &#125;<br>                            , <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>                                i.<span class="hljs-title function_">push</span>(<span class="hljs-keyword">void</span> <span class="hljs-number">0</span>)<br>                            &#125;<br>                            , <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>                                <span class="hljs-keyword">var</span> t = i.<span class="hljs-title function_">pop</span>();<br>                                i.<span class="hljs-title function_">push</span>(t[<span class="hljs-number">0</span>][t[<span class="hljs-number">1</span>]])<br>                            &#125;<br>                            , , <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>                                i.<span class="hljs-title function_">push</span>(!<span class="hljs-number">0</span>)<br>                            &#125;<br>                            , , <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>                                i[i.<span class="hljs-property">length</span> - <span class="hljs-number">2</span>] = i[i.<span class="hljs-property">length</span> - <span class="hljs-number">2</span>] * i.<span class="hljs-title function_">pop</span>()<br>                            &#125;<br>                            , <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>                                i.<span class="hljs-title function_">push</span>(n[e++])<br>                            &#125;<br>                            , <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>                                i.<span class="hljs-title function_">push</span>(<span class="hljs-keyword">typeof</span> i.<span class="hljs-title function_">pop</span>())<br>                            &#125;<br>                        ]; ; )<br>                            <span class="hljs-keyword">try</span> &#123;<br>                                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> h = !<span class="hljs-number">1</span>; !h; )<br>                                    h = d[n[e++]]();<br>                                <span class="hljs-keyword">if</span> (p)<br>                                    <span class="hljs-keyword">throw</span> p;<br>                                <span class="hljs-keyword">return</span> c ? (i.<span class="hljs-title function_">pop</span>(),<br>                                    i.<span class="hljs-title function_">slice</span>(<span class="hljs-number">3</span> + t.<span class="hljs-property">v</span>)) : i.<span class="hljs-title function_">pop</span>()<br>                            &#125; <span class="hljs-keyword">catch</span> (m) &#123;<br>                                <span class="hljs-keyword">var</span> v = f.<span class="hljs-title function_">pop</span>();<br>                                <span class="hljs-keyword">if</span> (<span class="hljs-keyword">void</span> <span class="hljs-number">0</span> === v)<br>                                    <span class="hljs-keyword">throw</span> m;<br>                                p = m,<br>                                    e = v[<span class="hljs-number">0</span>],<br>                                    i.<span class="hljs-property">length</span> = v[<span class="hljs-number">1</span>],<br>                                v[<span class="hljs-number">2</span>] &amp;&amp; (i[v[<span class="hljs-number">2</span>]][<span class="hljs-number">0</span>] = p)<br>                            &#125;<br>                    &#125;<br>                    <span class="hljs-keyword">return</span> t.<span class="hljs-property">v</span> = <span class="hljs-number">5</span>,<br>                        <span class="hljs-title function_">t</span>(<span class="hljs-number">0</span>, <span class="hljs-keyword">function</span>(<span class="hljs-params">t</span>) &#123;<br>                            <span class="hljs-keyword">var</span> e = t[<span class="hljs-number">1</span>]<br>                                , n = []<br>                                , r = <span class="hljs-keyword">function</span>(<span class="hljs-params">t</span>) &#123;<br>                                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> e, n, r = <span class="hljs-string">&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=&quot;</span>.<span class="hljs-title function_">split</span>(<span class="hljs-string">&quot;&quot;</span>), i = <span class="hljs-title class_">String</span>(t).<span class="hljs-title function_">replace</span>(<span class="hljs-regexp">/[=]+$/</span>, <span class="hljs-string">&quot;&quot;</span>), o = <span class="hljs-number">0</span>, a = <span class="hljs-number">0</span>, u = <span class="hljs-string">&quot;&quot;</span>; n = i.<span class="hljs-title function_">charAt</span>(a++); ~n &amp;&amp; (e = o % <span class="hljs-number">4</span> ? <span class="hljs-number">64</span> * e + n : n,<br>                                o++ % <span class="hljs-number">4</span>) &amp;&amp; (u += <span class="hljs-title class_">String</span>.<span class="hljs-title function_">fromCharCode</span>(<span class="hljs-number">255</span> &amp; e &gt;&gt; (-<span class="hljs-number">2</span> * o &amp; <span class="hljs-number">6</span>))))<br>                                    n = <span class="hljs-keyword">function</span>(<span class="hljs-params">t, e, n</span>) &#123;<br>                                        <span class="hljs-keyword">if</span> (<span class="hljs-string">&quot;function&quot;</span> == <span class="hljs-keyword">typeof</span> <span class="hljs-title class_">Array</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">indexOf</span>)<br>                                            <span class="hljs-keyword">return</span> <span class="hljs-title class_">Array</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">indexOf</span>.<span class="hljs-title function_">call</span>(t, e, n);<br>                                        <span class="hljs-keyword">var</span> r;<br>                                        <span class="hljs-keyword">if</span> (<span class="hljs-literal">null</span> == t)<br>                                            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">TypeError</span>(<span class="hljs-string">&#x27;&quot;array&quot; is null or not defined&#x27;</span>);<br>                                        <span class="hljs-keyword">var</span> i = <span class="hljs-title class_">Object</span>(t)<br>                                            , o = i.<span class="hljs-property">length</span> &gt;&gt;&gt; <span class="hljs-number">0</span>;<br>                                        <span class="hljs-keyword">if</span> (<span class="hljs-number">0</span> == o)<br>                                            <span class="hljs-keyword">return</span> -<span class="hljs-number">1</span>;<br>                                        <span class="hljs-keyword">if</span> (o &lt;= (n |= <span class="hljs-number">0</span>))<br>                                            <span class="hljs-keyword">return</span> -<span class="hljs-number">1</span>;<br>                                        <span class="hljs-keyword">for</span> (r = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">max</span>(<span class="hljs-number">0</span> &lt;= n ? n : o - <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">abs</span>(n), <span class="hljs-number">0</span>); r &lt; o; r++)<br>                                            <span class="hljs-keyword">if</span> (r <span class="hljs-keyword">in</span> i &amp;&amp; i[r] === e)<br>                                                <span class="hljs-keyword">return</span> r;<br>                                        <span class="hljs-keyword">return</span> -<span class="hljs-number">1</span><br>                                    &#125;(r, n);<br>                                <span class="hljs-keyword">return</span> u<br>                            &#125;(t[<span class="hljs-number">0</span>])<br>                                , i = e.<span class="hljs-title function_">shift</span>()<br>                                , o = e.<span class="hljs-title function_">shift</span>()<br>                                , a = <span class="hljs-number">0</span>;<br>                            <span class="hljs-keyword">function</span> <span class="hljs-title function_">u</span>(<span class="hljs-params"></span>) &#123;<br>                                <span class="hljs-keyword">for</span> (; a === i; )<br>                                    n.<span class="hljs-title function_">push</span>(o),<br>                                        a++,<br>                                        i = e.<span class="hljs-title function_">shift</span>(),<br>                                        o = e.<span class="hljs-title function_">shift</span>()<br>                            &#125;<br>                            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> s = <span class="hljs-number">0</span>; s &lt; r.<span class="hljs-property">length</span>; s++) &#123;<br>                                <span class="hljs-keyword">var</span> c = r.<span class="hljs-title function_">charAt</span>(s).<span class="hljs-title function_">charCodeAt</span>(<span class="hljs-number">0</span>);<br>                                <span class="hljs-title function_">u</span>(),<br>                                    n.<span class="hljs-title function_">push</span>(c),<br>                                    a++<br>                            &#125;<br>                            <span class="hljs-keyword">return</span> <span class="hljs-title function_">u</span>(),<br>                                n<br>                        &#125;([<span class="hljs-string">&quot;MwgOAg4DDgQOBQ4GDgc4fzozCQ4CDgMOBA4FDgYOBw4IFzpkOmU6ZjppOm46ZRVFFzpmOnU6bjpjOnQ6aTpvOm49CUc4XzomFzpkOmU6ZjppOm46ZS4XOmE6bTpkNT8JaSYDAy8AOHwJJhc6ZDplOmY6aTpuOmUuAwMGASY+LQERAAEDOAMzCg4CDgMOBA4FDgYOBw4IDgkUCDg8MwgOAg4DDgQOBQ4GDgcXOmc6bDpvOmI6YTpsFUUXOnU6bjpkOmU6ZjppOm46ZTpkPRAJ1iY45gQmFzpnOmw6bzpiOmE6bBUtFzp3Omk6bjpkOm86dxVFFzp1Om46ZDplOmY6aTpuOmU6ZD0QCSY4BiYXOnc6aTpuOmQ6bzp3FS0XOnM6ZTpsOmYVRRc6dTpuOmQ6ZTpmOmk6bjplOmQ9EAkmOAEmFzpzOmU6bDpmFS0+LQGeAAAvACcmJhQJOA0zIg4CDgMOBA4FDgYOBw4IDgkOCg4LDgwODQ4ODg8OEA4RDhIOEw4UDhUOFg4XDhgOGQ4aDhsOHA4dDh4OHw4gFAkXOk86YjpqOmU6Yzp0FQoAKxc6MCVEAAwmJisXOjElRAEMJiYrFzoyJUQCDCYmKxc6MyVEAwwmJisXOjQlRAQMJiYrFzo1JUQFDCYmKxc6NiVEBgwmJisXOjclRAcMJiYrFzo4JUQIDCYmKxc6OSVECQwmJisXOkElRAoMJiYrFzpCJUQLDCYmKxc6QyVEDAwmJisXOkQlRA0MJiYrFzpFJUQODCYmKxc6RiVEI0QUCwwmJicmJhQKFzpBOkI6QzpEOkU6RjpHOkg6STpKOks6TDpNOk46TzpQOlE6UjpTOlQ6VTpWOlc6WDpZOlo6YTpiOmM6ZDplOmY6ZzpoOmk6ajprOmw6bTpuOm86cDpxOnI6czp0OnU6djp3Ong6eTp6OjA6MToyOjM6NDo1OjY6Nzo4Ojk6KzovOj0nJiYUCxQhFzpfOl86czppOmc6bjpfOmg6YTpzOmg6XzoyOjA6MjowOjA6MzowOjUbPwk4MyYhFCEXOl86XzpzOmk6ZzpuOl86aDphOnM6aDpfOjI6MDoyOjA6MDozOjA6NRsDAwYBBAAmFzp0Om86VTpwOnA6ZTpyOkM6YTpzOmUlBgAnJiYUDBc6dzppOm46ZDpvOncVRRc6bzpiOmo6ZTpjOnQ9CTgBJhc6bjphOnY6aTpnOmE6dDpvOnIVRRc6bzpiOmo6ZTpjOnQ9CTgDJhc6bDpvOmM6YTp0Omk6bzpuFUUXOm86YjpqOmU6Yzp0PScmJhQNAwwJOAomFzpSOmU6ZzpFOng6cBUXOkg6ZTphOmQ6bDplOnM6cxc6aS8CFzp0OmU6czp0JRc6bjphOnY6aTpnOmE6dDpvOnIuFzp1OnM6ZTpyOkE6ZzplOm46dDU/BgEnJiYUDhQhFzpfOl86cTptOmY6ZTpfOnM6aTpnOm46XzpjOmg6ZTpjOmsbP0QBPQkmAwwJOAkmAw0QCTg4Jhc6bDpvOmM6YTp0Omk6bzpuLhc6aDpvOnM6dDUXOmk6bjpkOmU6eDpPOmY1FzpxOnE6LjpjOm86bQYBRABEAQsiJyYmFA9BFzpBOnI6cjphOnkVCgArRAAlRC5EGQsMJiYrRAElRAQMJiYrRAIlRAkMJiYrRAMlRDVEGwsMJiYrRAQlRANEDQAMJiYrRAUlRABEFAAMJiYrRAYlRC9EFAsMJiYrRAclRC9EEQsMJiYXOm06YTpwJTgBMwsOAg4DDgQOBQ4GDgcOCBQJAwoJJgMDRAEAOAomAwMbPy0BAgEJCwoOAwYBFzpqOm86aTpuJQQAJhcGAScmJhQQFzpBOnI6cjphOnkVCgArRAAlRAZEDAAMJiYrRAElRAsMJiYrRAIlRAMMJiYrRAMlRAIMJiYrRAQlRAEMJiYrRAUlRAcMJiYrRAYlRAYMJiYrRAclRDlEIAsMJiYXOm06YTpwJTgxMwsOAg4DDgQOBQ4GDgcOCBQJAwoJJgMDRAEAOAEmAwMbPy0BAgEJCwoOAwYBFzpqOm86aTpuJRcGAScmJhQRFzpBOnI6cjphOnkVCgArRAAlRAhEEUQMQwAMJiYrRAElRAtEIgAMJiYrRAIlRDREHAAMJiYrRAMlRDxECAAMJiYrRAQlRA1EDkQNQwAMJiYrRAUlRAdEDEQNQwAMJiYrRAYlRAdEDUQMQwAMJiYrRAclRAtEEEQMQwAMJiYrRAglRAVECEQTQwAMJiYrRAklRApEDkQPQwAMJiYrRAolRBBEEUQOQwAMJiYrRAslRB1EPgAMJiYrRAwlRAxEEUMMJiYrRA0lRApERQAMJiYrRA4lRAdEYQAMJiYrRDxELQslRAYMJiYnJiYDDhAJJjgeJhQRFzpBOnI6cjphOnkVCgArRAAlRBVEBAAMJiYrRAElRBtEJwAMJiYrRAIlRAEMJiYrRAMlRDhEAgAMJiYrRAQlRANEVwAMJiYrRAUlRDVEGQAMJiYrRAYlRDlEQgAMJiYrRAclRBpELQAMJiYrRAglRCVEBAsMJiYrRAklRAwMJiYrRAolRAhECkQRQwAMJiYrRAslRDJEKwAMJiYrRAwlRCFEBwAMJiYrRA0lRApEDEQNQwAMJiYrRA4lRC5EEAAMJiYrRBFEAgslRAhED0QPQwAMJiYnJiYUEhc6QTpyOnI6YTp5FQoAJyYmFBNEACcmJhQTHEQTRAMLMBAJJjgUJhQUFAkUCwMTRAJDGz8bP0Q2RCYLQxQJFAsDE0QCQ0QBABs/Gz8AJyYmFBUUEQMTGz8nJiYUEhc6cDp1OnM6aBsDFAMVJAYBJhQTKxwrBAEEAEQBACcmHgAEAAImOEQUERQLFAkhJwQAJicEACYnJiYUHRcnJiYUHkQAJyYmFB4cRAUwEAkmOBQmFBYUEgMeRANDGz8nJiYUFxQSAx5EA0NEAQAbPycmJhQYFBIDHkQDQ0QCABs/JyYmFBkDFkQCHycmJhQaAxZEAzdEBBkDF0QEHwInJiYUGwMXRAVECgA3RAIZAxhEBh8CJyYmFBwDGEQ1RAoANycmJhQdAx0UCgMZGz8AFAoDGhs/ABQKAxsbPwAUCgMcGz8AJyYmFB4rHCsEAQQARAEAJyYeAAQAAiY4LxQdAx0UChQSRAhEBwAbP0QCHxs/ABQKFBJEC0QEABs/RAM3RAQZGz8AJyYmFBIhJyYmFB8UHRc6cjplOnA6bDphOmM6ZRsXOlI6ZTpnOkU6eDpwFRc6WzpcOi86KzpdFzpnLwIXBgInJiYUIBc6ejp6OmIDDwADHwADEAAnJiYUDxQQFB8UHRQKIScEACYnBAAmJwQAJicEACYnJiYUIBc6dDpvOkw6bzp3OmU6cjpDOmE6czplGwYALQEBASEIAycmJhQIFzpfOmc6ZTp0OlM6ZTpjOnU6cjppOnQ6eTpTOmk6ZzpuGwMJDCYmPi0BhwAALwEmPi0=&quot;</span>, [<span class="hljs-number">133</span>, <span class="hljs-number">2628</span>, <span class="hljs-number">156</span>, <span class="hljs-number">340</span>, <span class="hljs-number">267</span>, <span class="hljs-number">272</span>, <span class="hljs-number">270</span>, <span class="hljs-number">288</span>, <span class="hljs-number">321</span>, <span class="hljs-number">326</span>, <span class="hljs-number">324</span>, <span class="hljs-number">338</span>, <span class="hljs-number">352</span>, <span class="hljs-number">2575</span>, <span class="hljs-number">786</span>, <span class="hljs-number">790</span>, <span class="hljs-number">788</span>, <span class="hljs-number">869</span>, <span class="hljs-number">904</span>, <span class="hljs-number">908</span>, <span class="hljs-number">906</span>, <span class="hljs-number">944</span>, <span class="hljs-number">945</span>, <span class="hljs-number">949</span>, <span class="hljs-number">947</span>, <span class="hljs-number">983</span>, <span class="hljs-number">991</span>, <span class="hljs-number">995</span>, <span class="hljs-number">993</span>, <span class="hljs-number">1085</span>, <span class="hljs-number">1133</span>, <span class="hljs-number">1217</span>, <span class="hljs-number">1138</span>, <span class="hljs-number">1142</span>, <span class="hljs-number">1140</span>, <span class="hljs-number">1146</span>, <span class="hljs-number">1147</span>, <span class="hljs-number">1151</span>, <span class="hljs-number">1149</span>, <span class="hljs-number">1217</span>, <span class="hljs-number">1336</span>, <span class="hljs-number">1375</span>, <span class="hljs-number">1359</span>, <span class="hljs-number">1369</span>, <span class="hljs-number">1367</span>, <span class="hljs-number">1372</span>, <span class="hljs-number">1376</span>, <span class="hljs-number">1338</span>, <span class="hljs-number">1508</span>, <span class="hljs-number">1547</span>, <span class="hljs-number">1531</span>, <span class="hljs-number">1541</span>, <span class="hljs-number">1539</span>, <span class="hljs-number">1544</span>, <span class="hljs-number">1548</span>, <span class="hljs-number">1510</span>, <span class="hljs-number">1813</span>, <span class="hljs-number">1818</span>, <span class="hljs-number">1816</span>, <span class="hljs-number">2036</span>, <span class="hljs-number">2073</span>, <span class="hljs-number">2078</span>, <span class="hljs-number">2076</span>, <span class="hljs-number">2174</span>, <span class="hljs-number">2172</span>, <span class="hljs-number">2062</span>, <span class="hljs-number">2213</span>, <span class="hljs-number">2218</span>, <span class="hljs-number">2216</span>, <span class="hljs-number">2389</span>, <span class="hljs-number">2387</span>, <span class="hljs-number">2205</span>, <span class="hljs-number">2576</span>, <span class="hljs-number">354</span>]]), n)<br>                &#125;();<br>                r.<span class="hljs-property">g</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>                    <span class="hljs-keyword">return</span> r.<span class="hljs-title function_">shift</span>()[<span class="hljs-number">0</span>]<br>                &#125;<br>                    ,<br>                    n.<span class="hljs-property">__sign_hash_20200305</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params">t</span>) &#123;<br>                        <span class="hljs-keyword">function</span> <span class="hljs-title function_">e</span>(<span class="hljs-params">t, e</span>) &#123;<br>                            <span class="hljs-keyword">var</span> n = (<span class="hljs-number">65535</span> &amp; t) + (<span class="hljs-number">65535</span> &amp; e);<br>                            <span class="hljs-keyword">return</span> (t &gt;&gt; <span class="hljs-number">16</span>) + (e &gt;&gt; <span class="hljs-number">16</span>) + (n &gt;&gt; <span class="hljs-number">16</span>) &lt;&lt; <span class="hljs-number">16</span> | <span class="hljs-number">65535</span> &amp; n<br>                        &#125;<br>                        <span class="hljs-keyword">function</span> <span class="hljs-title function_">n</span>(<span class="hljs-params">t, n, r, i, o, a</span>) &#123;<br>                            <span class="hljs-keyword">return</span> <span class="hljs-title function_">e</span>((u = <span class="hljs-title function_">e</span>(<span class="hljs-title function_">e</span>(n, t), <span class="hljs-title function_">e</span>(i, a))) &lt;&lt; (s = o) | u &gt;&gt;&gt; <span class="hljs-number">32</span> - s, r);<br>                            <span class="hljs-keyword">var</span> u, s<br>                        &#125;<br>                        <span class="hljs-keyword">function</span> <span class="hljs-title function_">r</span>(<span class="hljs-params">t, e, r, i, o, a, u</span>) &#123;<br>                            <span class="hljs-keyword">return</span> <span class="hljs-title function_">n</span>(e &amp; r | ~e &amp; i, t, e, o, a, u)<br>                        &#125;<br>                        <span class="hljs-keyword">function</span> <span class="hljs-title function_">i</span>(<span class="hljs-params">t, e, r, i, o, a, u</span>) &#123;<br>                            <span class="hljs-keyword">return</span> <span class="hljs-title function_">n</span>(e &amp; i | r &amp; ~i, t, e, o, a, u)<br>                        &#125;<br>                        <span class="hljs-keyword">function</span> <span class="hljs-title function_">o</span>(<span class="hljs-params">t, e, r, i, o, a, u</span>) &#123;<br>                            <span class="hljs-keyword">return</span> <span class="hljs-title function_">n</span>(e ^ r ^ i, t, e, o, a, u)<br>                        &#125;<br>                        <span class="hljs-keyword">function</span> <span class="hljs-title function_">a</span>(<span class="hljs-params">t, e, r, i, o, a, u</span>) &#123;<br>                            <span class="hljs-keyword">return</span> <span class="hljs-title function_">n</span>(r ^ (e | ~i), t, e, o, a, u)<br>                        &#125;<br>                        <span class="hljs-keyword">function</span> <span class="hljs-title function_">u</span>(<span class="hljs-params">t</span>) &#123;<br>                            <span class="hljs-keyword">return</span> <span class="hljs-keyword">function</span>(<span class="hljs-params">t</span>) &#123;<br>                                <span class="hljs-keyword">var</span> e, n = <span class="hljs-string">&quot;&quot;</span>;<br>                                <span class="hljs-keyword">for</span> (e = <span class="hljs-number">0</span>; e &lt; <span class="hljs-number">32</span> * t.<span class="hljs-property">length</span>; e += <span class="hljs-number">8</span>)<br>                                    n += <span class="hljs-title class_">String</span>.<span class="hljs-title function_">fromCharCode</span>(t[e &gt;&gt; <span class="hljs-number">5</span>] &gt;&gt;&gt; e % <span class="hljs-number">32</span> &amp; <span class="hljs-number">255</span>);<br>                                <span class="hljs-keyword">return</span> n<br>                            &#125;(<span class="hljs-keyword">function</span>(<span class="hljs-params">t, n</span>) &#123;<br>                                t[n &gt;&gt; <span class="hljs-number">5</span>] |= <span class="hljs-number">128</span> &lt;&lt; n % <span class="hljs-number">32</span>,<br>                                    t[<span class="hljs-number">14</span> + (n + <span class="hljs-number">64</span> &gt;&gt;&gt; <span class="hljs-number">9</span> &lt;&lt; <span class="hljs-number">4</span>)] = n;<br>                                <span class="hljs-keyword">var</span> u, s, c, l, f, p = <span class="hljs-number">1732584193</span>, d = -<span class="hljs-number">271733879</span>, h = -<span class="hljs-number">1732584194</span>, v = <span class="hljs-number">271733878</span>;<br>                                <span class="hljs-keyword">for</span> (u = <span class="hljs-number">0</span>; u &lt; t.<span class="hljs-property">length</span>; u += <span class="hljs-number">16</span>)<br>                                    s = p,<br>                                        c = d,<br>                                        l = h,<br>                                        f = v,<br>                                        p = <span class="hljs-title function_">r</span>(p, d, h, v, t[u], <span class="hljs-number">7</span>, -<span class="hljs-number">680876936</span>),<br>                                        v = <span class="hljs-title function_">r</span>(v, p, d, h, t[u + <span class="hljs-number">1</span>], <span class="hljs-number">12</span>, -<span class="hljs-number">389564586</span>),<br>                                        h = <span class="hljs-title function_">r</span>(h, v, p, d, t[u + <span class="hljs-number">2</span>], <span class="hljs-number">17</span>, <span class="hljs-number">606105819</span>),<br>                                        d = <span class="hljs-title function_">r</span>(d, h, v, p, t[u + <span class="hljs-number">3</span>], <span class="hljs-number">22</span>, -<span class="hljs-number">1044525330</span>),<br>                                        p = <span class="hljs-title function_">r</span>(p, d, h, v, t[u + <span class="hljs-number">4</span>], <span class="hljs-number">7</span>, -<span class="hljs-number">176418897</span>),<br>                                        v = <span class="hljs-title function_">r</span>(v, p, d, h, t[u + <span class="hljs-number">5</span>], <span class="hljs-number">12</span>, <span class="hljs-number">1200080426</span>),<br>                                        h = <span class="hljs-title function_">r</span>(h, v, p, d, t[u + <span class="hljs-number">6</span>], <span class="hljs-number">17</span>, -<span class="hljs-number">1473231341</span>),<br>                                        d = <span class="hljs-title function_">r</span>(d, h, v, p, t[u + <span class="hljs-number">7</span>], <span class="hljs-number">22</span>, -<span class="hljs-number">45705983</span>),<br>                                        p = <span class="hljs-title function_">r</span>(p, d, h, v, t[u + <span class="hljs-number">8</span>], <span class="hljs-number">7</span>, <span class="hljs-number">1770035416</span>),<br>                                        v = <span class="hljs-title function_">r</span>(v, p, d, h, t[u + <span class="hljs-number">9</span>], <span class="hljs-number">12</span>, -<span class="hljs-number">1958414417</span>),<br>                                        h = <span class="hljs-title function_">r</span>(h, v, p, d, t[u + <span class="hljs-number">10</span>], <span class="hljs-number">17</span>, -<span class="hljs-number">42063</span>),<br>                                        d = <span class="hljs-title function_">r</span>(d, h, v, p, t[u + <span class="hljs-number">11</span>], <span class="hljs-number">22</span>, -<span class="hljs-number">1990404162</span>),<br>                                        p = <span class="hljs-title function_">r</span>(p, d, h, v, t[u + <span class="hljs-number">12</span>], <span class="hljs-number">7</span>, <span class="hljs-number">1804603682</span>),<br>                                        v = <span class="hljs-title function_">r</span>(v, p, d, h, t[u + <span class="hljs-number">13</span>], <span class="hljs-number">12</span>, -<span class="hljs-number">40341101</span>),<br>                                        h = <span class="hljs-title function_">r</span>(h, v, p, d, t[u + <span class="hljs-number">14</span>], <span class="hljs-number">17</span>, -<span class="hljs-number">1502002290</span>),<br>                                        p = <span class="hljs-title function_">i</span>(p, d = <span class="hljs-title function_">r</span>(d, h, v, p, t[u + <span class="hljs-number">15</span>], <span class="hljs-number">22</span>, <span class="hljs-number">1236535329</span>), h, v, t[u + <span class="hljs-number">1</span>], <span class="hljs-number">5</span>, -<span class="hljs-number">165796510</span>),<br>                                        v = <span class="hljs-title function_">i</span>(v, p, d, h, t[u + <span class="hljs-number">6</span>], <span class="hljs-number">9</span>, -<span class="hljs-number">1069501632</span>),<br>                                        h = <span class="hljs-title function_">i</span>(h, v, p, d, t[u + <span class="hljs-number">11</span>], <span class="hljs-number">14</span>, <span class="hljs-number">643717713</span>),<br>                                        d = <span class="hljs-title function_">i</span>(d, h, v, p, t[u], <span class="hljs-number">20</span>, -<span class="hljs-number">373897302</span>),<br>                                        p = <span class="hljs-title function_">i</span>(p, d, h, v, t[u + <span class="hljs-number">5</span>], <span class="hljs-number">5</span>, -<span class="hljs-number">701558691</span>),<br>                                        v = <span class="hljs-title function_">i</span>(v, p, d, h, t[u + <span class="hljs-number">10</span>], <span class="hljs-number">9</span>, <span class="hljs-number">38016083</span>),<br>                                        h = <span class="hljs-title function_">i</span>(h, v, p, d, t[u + <span class="hljs-number">15</span>], <span class="hljs-number">14</span>, -<span class="hljs-number">660478335</span>),<br>                                        d = <span class="hljs-title function_">i</span>(d, h, v, p, t[u + <span class="hljs-number">4</span>], <span class="hljs-number">20</span>, -<span class="hljs-number">405537848</span>),<br>                                        p = <span class="hljs-title function_">i</span>(p, d, h, v, t[u + <span class="hljs-number">9</span>], <span class="hljs-number">5</span>, <span class="hljs-number">568446438</span>),<br>                                        v = <span class="hljs-title function_">i</span>(v, p, d, h, t[u + <span class="hljs-number">14</span>], <span class="hljs-number">9</span>, -<span class="hljs-number">1019803690</span>),<br>                                        h = <span class="hljs-title function_">i</span>(h, v, p, d, t[u + <span class="hljs-number">3</span>], <span class="hljs-number">14</span>, -<span class="hljs-number">187363961</span>),<br>                                        d = <span class="hljs-title function_">i</span>(d, h, v, p, t[u + <span class="hljs-number">8</span>], <span class="hljs-number">20</span>, <span class="hljs-number">1163531501</span>),<br>                                        p = <span class="hljs-title function_">i</span>(p, d, h, v, t[u + <span class="hljs-number">13</span>], <span class="hljs-number">5</span>, -<span class="hljs-number">1444681467</span>),<br>                                        v = <span class="hljs-title function_">i</span>(v, p, d, h, t[u + <span class="hljs-number">2</span>], <span class="hljs-number">9</span>, -<span class="hljs-number">51403784</span>),<br>                                        h = <span class="hljs-title function_">i</span>(h, v, p, d, t[u + <span class="hljs-number">7</span>], <span class="hljs-number">14</span>, <span class="hljs-number">1735328473</span>),<br>                                        p = <span class="hljs-title function_">o</span>(p, d = <span class="hljs-title function_">i</span>(d, h, v, p, t[u + <span class="hljs-number">12</span>], <span class="hljs-number">20</span>, -<span class="hljs-number">1926607734</span>), h, v, t[u + <span class="hljs-number">5</span>], <span class="hljs-number">4</span>, -<span class="hljs-number">378558</span>),<br>                                        v = <span class="hljs-title function_">o</span>(v, p, d, h, t[u + <span class="hljs-number">8</span>], <span class="hljs-number">11</span>, -<span class="hljs-number">2022574463</span>),<br>                                        h = <span class="hljs-title function_">o</span>(h, v, p, d, t[u + <span class="hljs-number">11</span>], <span class="hljs-number">16</span>, <span class="hljs-number">1839030562</span>),<br>                                        d = <span class="hljs-title function_">o</span>(d, h, v, p, t[u + <span class="hljs-number">14</span>], <span class="hljs-number">23</span>, -<span class="hljs-number">35309556</span>),<br>                                        p = <span class="hljs-title function_">o</span>(p, d, h, v, t[u + <span class="hljs-number">1</span>], <span class="hljs-number">4</span>, -<span class="hljs-number">1530992060</span>),<br>                                        v = <span class="hljs-title function_">o</span>(v, p, d, h, t[u + <span class="hljs-number">4</span>], <span class="hljs-number">11</span>, <span class="hljs-number">1272893353</span>),<br>                                        h = <span class="hljs-title function_">o</span>(h, v, p, d, t[u + <span class="hljs-number">7</span>], <span class="hljs-number">16</span>, -<span class="hljs-number">155497632</span>),<br>                                        d = <span class="hljs-title function_">o</span>(d, h, v, p, t[u + <span class="hljs-number">10</span>], <span class="hljs-number">23</span>, -<span class="hljs-number">1094730640</span>),<br>                                        p = <span class="hljs-title function_">o</span>(p, d, h, v, t[u + <span class="hljs-number">13</span>], <span class="hljs-number">4</span>, <span class="hljs-number">681279174</span>),<br>                                        v = <span class="hljs-title function_">o</span>(v, p, d, h, t[u], <span class="hljs-number">11</span>, -<span class="hljs-number">358537222</span>),<br>                                        h = <span class="hljs-title function_">o</span>(h, v, p, d, t[u + <span class="hljs-number">3</span>], <span class="hljs-number">16</span>, -<span class="hljs-number">722521979</span>),<br>                                        d = <span class="hljs-title function_">o</span>(d, h, v, p, t[u + <span class="hljs-number">6</span>], <span class="hljs-number">23</span>, <span class="hljs-number">76029189</span>),<br>                                        p = <span class="hljs-title function_">o</span>(p, d, h, v, t[u + <span class="hljs-number">9</span>], <span class="hljs-number">4</span>, -<span class="hljs-number">640364487</span>),<br>                                        v = <span class="hljs-title function_">o</span>(v, p, d, h, t[u + <span class="hljs-number">12</span>], <span class="hljs-number">11</span>, -<span class="hljs-number">421815835</span>),<br>                                        h = <span class="hljs-title function_">o</span>(h, v, p, d, t[u + <span class="hljs-number">15</span>], <span class="hljs-number">16</span>, <span class="hljs-number">530742520</span>),<br>                                        p = <span class="hljs-title function_">a</span>(p, d = <span class="hljs-title function_">o</span>(d, h, v, p, t[u + <span class="hljs-number">2</span>], <span class="hljs-number">23</span>, -<span class="hljs-number">995338651</span>), h, v, t[u], <span class="hljs-number">6</span>, -<span class="hljs-number">198630844</span>),<br>                                        v = <span class="hljs-title function_">a</span>(v, p, d, h, t[u + <span class="hljs-number">7</span>], <span class="hljs-number">10</span>, <span class="hljs-number">1126891415</span>),<br>                                        h = <span class="hljs-title function_">a</span>(h, v, p, d, t[u + <span class="hljs-number">14</span>], <span class="hljs-number">15</span>, -<span class="hljs-number">1416354905</span>),<br>                                        d = <span class="hljs-title function_">a</span>(d, h, v, p, t[u + <span class="hljs-number">5</span>], <span class="hljs-number">21</span>, -<span class="hljs-number">57434055</span>),<br>                                        p = <span class="hljs-title function_">a</span>(p, d, h, v, t[u + <span class="hljs-number">12</span>], <span class="hljs-number">6</span>, <span class="hljs-number">1700485571</span>),<br>                                        v = <span class="hljs-title function_">a</span>(v, p, d, h, t[u + <span class="hljs-number">3</span>], <span class="hljs-number">10</span>, -<span class="hljs-number">1894986606</span>),<br>                                        h = <span class="hljs-title function_">a</span>(h, v, p, d, t[u + <span class="hljs-number">10</span>], <span class="hljs-number">15</span>, -<span class="hljs-number">1051523</span>),<br>                                        d = <span class="hljs-title function_">a</span>(d, h, v, p, t[u + <span class="hljs-number">1</span>], <span class="hljs-number">21</span>, -<span class="hljs-number">2054922799</span>),<br>                                        p = <span class="hljs-title function_">a</span>(p, d, h, v, t[u + <span class="hljs-number">8</span>], <span class="hljs-number">6</span>, <span class="hljs-number">1873313359</span>),<br>                                        v = <span class="hljs-title function_">a</span>(v, p, d, h, t[u + <span class="hljs-number">15</span>], <span class="hljs-number">10</span>, -<span class="hljs-number">30611744</span>),<br>                                        h = <span class="hljs-title function_">a</span>(h, v, p, d, t[u + <span class="hljs-number">6</span>], <span class="hljs-number">15</span>, -<span class="hljs-number">1560198380</span>),<br>                                        d = <span class="hljs-title function_">a</span>(d, h, v, p, t[u + <span class="hljs-number">13</span>], <span class="hljs-number">21</span>, <span class="hljs-number">1309151649</span>),<br>                                        p = <span class="hljs-title function_">a</span>(p, d, h, v, t[u + <span class="hljs-number">4</span>], <span class="hljs-number">6</span>, -<span class="hljs-number">145523070</span>),<br>                                        v = <span class="hljs-title function_">a</span>(v, p, d, h, t[u + <span class="hljs-number">11</span>], <span class="hljs-number">10</span>, -<span class="hljs-number">1120210379</span>),<br>                                        h = <span class="hljs-title function_">a</span>(h, v, p, d, t[u + <span class="hljs-number">2</span>], <span class="hljs-number">15</span>, <span class="hljs-number">718787259</span>),<br>                                        d = <span class="hljs-title function_">a</span>(d, h, v, p, t[u + <span class="hljs-number">9</span>], <span class="hljs-number">21</span>, -<span class="hljs-number">343485551</span>),<br>                                        p = <span class="hljs-title function_">e</span>(p, s),<br>                                        d = <span class="hljs-title function_">e</span>(d, c),<br>                                        h = <span class="hljs-title function_">e</span>(h, l),<br>                                        v = <span class="hljs-title function_">e</span>(v, f);<br>                                <span class="hljs-keyword">return</span> [p, d, h, v]<br>                            &#125;(<span class="hljs-keyword">function</span>(<span class="hljs-params">t</span>) &#123;<br>                                <span class="hljs-keyword">var</span> e, n = [];<br>                                <span class="hljs-keyword">for</span> (n[(t.<span class="hljs-property">length</span> &gt;&gt; <span class="hljs-number">2</span>) - <span class="hljs-number">1</span>] = <span class="hljs-keyword">void</span> <span class="hljs-number">0</span>,<br>                                         e = <span class="hljs-number">0</span>; e &lt; n.<span class="hljs-property">length</span>; e += <span class="hljs-number">1</span>)<br>                                    n[e] = <span class="hljs-number">0</span>;<br>                                <span class="hljs-keyword">for</span> (e = <span class="hljs-number">0</span>; e &lt; <span class="hljs-number">8</span> * t.<span class="hljs-property">length</span>; e += <span class="hljs-number">8</span>)<br>                                    n[e &gt;&gt; <span class="hljs-number">5</span>] |= (<span class="hljs-number">255</span> &amp; t.<span class="hljs-title function_">charCodeAt</span>(e / <span class="hljs-number">8</span>)) &lt;&lt; e % <span class="hljs-number">32</span>;<br>                                <span class="hljs-keyword">return</span> n<br>                            &#125;(t), <span class="hljs-number">8</span> * t.<span class="hljs-property">length</span>))<br>                        &#125;<br>                        <span class="hljs-keyword">function</span> <span class="hljs-title function_">s</span>(<span class="hljs-params">t</span>) &#123;<br>                            <span class="hljs-keyword">return</span> <span class="hljs-title function_">u</span>(<span class="hljs-built_in">unescape</span>(<span class="hljs-built_in">encodeURIComponent</span>(t)))<br>                        &#125;<br>                        <span class="hljs-keyword">return</span> <span class="hljs-keyword">function</span>(<span class="hljs-params">t</span>) &#123;<br>                            <span class="hljs-keyword">var</span> e, n, r = <span class="hljs-string">&quot;&quot;</span>;<br>                            <span class="hljs-keyword">for</span> (n = <span class="hljs-number">0</span>; n &lt; t.<span class="hljs-property">length</span>; n += <span class="hljs-number">1</span>)<br>                                e = t.<span class="hljs-title function_">charCodeAt</span>(n),<br>                                    r += <span class="hljs-string">&quot;0123456789abcdef&quot;</span>.<span class="hljs-title function_">charAt</span>(e &gt;&gt;&gt; <span class="hljs-number">4</span> &amp; <span class="hljs-number">15</span>) + <span class="hljs-string">&quot;0123456789abcdef&quot;</span>.<span class="hljs-title function_">charAt</span>(<span class="hljs-number">15</span> &amp; e);<br>                            <span class="hljs-keyword">return</span> r<br>                        &#125;(<span class="hljs-title function_">s</span>(t))<br>                    &#125;<br>                ;<br>                <span class="hljs-keyword">var</span> i = n.<span class="hljs-property">_getSecuritySign</span>;<br>                <span class="hljs-keyword">delete</span> n.<span class="hljs-property">_getSecuritySign</span>,<br>                    e.<span class="hljs-property">default</span> = i<br>            &#125;<br>                .<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>, <span class="hljs-variable language_">window</span>.<span class="hljs-title function_">bing</span>(<span class="hljs-number">1</span>))<br>    &#125;,<br>    <span class="hljs-keyword">function</span>(<span class="hljs-params">t, e</span>) &#123;<br>        <span class="hljs-keyword">var</span> n;<br>        n = <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span><br>        &#125;();<br>        <span class="hljs-keyword">try</span> &#123;<br>            n = n || <span class="hljs-keyword">new</span> <span class="hljs-title class_">Function</span>(<span class="hljs-string">&quot;return this&quot;</span>)()<br>        &#125; <span class="hljs-keyword">catch</span> (r) &#123;<br>            <span class="hljs-string">&quot;object&quot;</span> === <span class="hljs-keyword">typeof</span> <span class="hljs-variable language_">window</span> &amp;&amp; (n = <span class="hljs-variable language_">window</span>)<br>        &#125;<br>        t.<span class="hljs-property">exports</span> = n<br>    &#125;<br>]);<br><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-variable language_">window</span>.<span class="hljs-title function_">bing</span>(<span class="hljs-number">0</span>).<span class="hljs-title function_">default</span>(<span class="hljs-string">&#x27;&#123;&quot;comm&quot;:&#123;&quot;cv&quot;:4747474,&quot;ct&quot;:24,&quot;format&quot;:&quot;json&quot;,&quot;inCharset&quot;:&quot;utf-8&quot;,&quot;outCharset&quot;:&quot;utf-8&quot;,&quot;notice&quot;:0,&quot;platform&quot;:&quot;yqq.json&quot;,&quot;needNewCode&quot;:1,&quot;uin&quot;:0,&quot;g_tk_new_20200303&quot;:5381,&quot;g_tk&quot;:5381&#125;,&quot;req_1&quot;:&#123;&quot;module&quot;:&quot;music.musicasset.SongFavRead&quot;,&quot;method&quot;:&quot;IsSongFanByMid&quot;,&quot;param&quot;:&#123;&quot;v_songMid&quot;:[&quot;00218E3L0kU0fb&quot;,&quot;002VQQ8b2nNPe3&quot;]&#125;&#125;,&quot;req_2&quot;:&#123;&quot;module&quot;:&quot;music.musichallSong.PlayLyricInfo&quot;,&quot;method&quot;:&quot;GetPlayLyricInfo&quot;,&quot;param&quot;:&#123;&quot;songMID&quot;:&quot;00218E3L0kU0fb&quot;,&quot;songID&quot;:492489014&#125;&#125;,&quot;req_3&quot;:&#123;&quot;method&quot;:&quot;GetCommentCount&quot;,&quot;module&quot;:&quot;music.globalComment.GlobalCommentRead&quot;,&quot;param&quot;:&#123;&quot;request_list&quot;:[&#123;&quot;biz_type&quot;:1,&quot;biz_id&quot;:&quot;492489014&quot;,&quot;biz_sub_type&quot;:0&#125;]&#125;&#125;,&quot;req_4&quot;:&#123;&quot;module&quot;:&quot;music.musichallAlbum.AlbumInfoServer&quot;,&quot;method&quot;:&quot;GetAlbumDetail&quot;,&quot;param&quot;:&#123;&quot;albumMid&quot;:&quot;0001sESa0DlBPj&quot;&#125;&#125;,&quot;req_5&quot;:&#123;&quot;module&quot;:&quot;vkey.GetVkeyServer&quot;,&quot;method&quot;:&quot;CgiGetVkey&quot;,&quot;param&quot;:&#123;&quot;guid&quot;:&quot;6077141855&quot;,&quot;songmid&quot;:[&quot;00218E3L0kU0fb&quot;],&quot;songtype&quot;:[0],&quot;uin&quot;:&quot;0&quot;,&quot;loginflag&quot;:1,&quot;platform&quot;:&quot;20&quot;&#125;&#125;&#125;&#x27;</span>))<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>web逆向</category>
      
      <category>音乐类</category>
      
    </categories>
    
    
    <tags>
      
      <tag>code</tag>
      
      <tag>编程</tag>
      
      <tag>js逆向</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>网易云音乐api params和encSecKey抓取分析-2024</title>
    <link href="/2024/06/08/wyy_sign/"/>
    <url>/2024/06/08/wyy_sign/</url>
    
    <content type="html"><![CDATA[<h2 id="前言">前言</h2><p>真的很久没更新博客了，由于一些需求，需要用到网易云的<code>api</code>，没想到过了几年变化真大。</p><h2 id="开始实践">开始实践</h2><p>先来搞一下获取搜索音乐这个基础功能吧</p><span id="more"></span><p><img src="https://pic.imgdb.cn/item/666420b15e6d1bfa056cb4c9.png" alt=""></p><p>可以发现，现在网页端需要登录，才能搜索音乐了</p><p>但今天我们要做的是免登录 搜索</p><p><img src="https://pic.imgdb.cn/item/666421305e6d1bfa056d331f.png" alt=""></p><p>那我们是不是可以抓这里搜索建议的<code>api</code>呢？<strong>——答案是可以的</strong></p><p>废话不多说，打开<code>f12</code>选择<code>网络</code>，尝试抓取</p><p><img src="https://pic.imgdb.cn/item/666421935e6d1bfa056d8ebb.png" alt=""></p><p>抓到了一个是<code>web?csrf_token=</code>的<code>api</code>，<strong>同时返回结果也是包含歌曲id的</strong></p><p><img src="https://pic.imgdb.cn/item/666422745e6d1bfa056e67cf.png" alt=""></p><p>看一下<code>post</code>发送的数据，是两个加密的参数</p><p><img src="https://pic.imgdb.cn/item/666422b45e6d1bfa056ea3f9.png" alt=""></p><p>那现在的任务就变成解密这两个参数了</p><hr><h2 id="解密params和encSecKey">解密params和encSecKey</h2><p>和<strong>常规方法</strong>一样，点这里进入<code>api</code>调用的<code>js</code>文件</p><p><img src="https://pic.imgdb.cn/item/6664233c5e6d1bfa056f2b99.png" alt=""></p><p>进去之后全局搜索<code>params</code></p><p><img src="https://pic.imgdb.cn/item/666423b15e6d1bfa056fa575.png" alt=""></p><p>一路上搜索到这里，总算找到能打断点的地方了，在这里的<strong>e0x</strong>的数据带了两个参数，分别是<strong>params和encSecKey</strong></p><p>由此得知，<strong>网易应该是把这两个加密参数放一起了</strong>，真是一举两得，而且来自同一个函数<strong>bvi2x</strong></p><p>没想到<code>bvi2x</code>就在上面，于是我们在上面打个点</p><p><img src="https://pic.imgdb.cn/item/666424ea5e6d1bfa0570d4c8.png" alt=""></p><p>返回搜索栏，随便打入一个字符，如果不出问题的话，<strong>会进入到调试模式</strong>，<strong>如果没有下图反应，请尝试回到主页搜索框输入字符并刷新网页</strong></p><p><img src="https://pic.imgdb.cn/item/666425715e6d1bfa05715309.png" alt=""></p><p>进入<code>bi2x</code>函数的内部结构</p><p><img src="https://pic.imgdb.cn/item/6664265b5e6d1bfa05723593.png" alt=""></p><p><img src="https://pic.imgdb.cn/item/666427295e6d1bfa0573028b.png" alt=""></p><p>这里我把函数调用的流程用不同颜色的箭头标注出来了，<strong>h.enctext</strong>是<strong>params</strong></p><p><strong>h.enctext</strong>是调用了两次<code>b</code>函数，<strong>h.encseckey</strong>就是<strong>encseckey</strong>，</p><p>调用<code>b</code>函数的<code>d</code>和<code>g</code>值我们要继续打断点，其中<code>i</code>是<code>16位数字+字母随机生成的</code>，具体看<code>function a</code>的代码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">function</span> <span class="hljs-title function_">a</span>(<span class="hljs-params">a</span>) &#123; <span class="hljs-comment">// 随机生成16位字母+数字</span><br>       <span class="hljs-keyword">var</span> d, e, b = <span class="hljs-string">&quot;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789&quot;</span>, c = <span class="hljs-string">&quot;&quot;</span>;<br>       <span class="hljs-keyword">for</span> (d = <span class="hljs-number">0</span>; a &gt; d; d += <span class="hljs-number">1</span>)<br>           e = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">random</span>() * b.<span class="hljs-property">length</span>,<br>           e = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>(e),<br>           c += b.<span class="hljs-title function_">charAt</span>(e);<br>       <span class="hljs-keyword">return</span> c<br>   &#125;<br>   <span class="hljs-keyword">function</span> <span class="hljs-title function_">b</span>(<span class="hljs-params">a, b</span>) &#123;<br>       <span class="hljs-comment">// 一个aes的加密 crypto是js的一个加密库</span><br>       <span class="hljs-keyword">var</span> c = <span class="hljs-title class_">CryptoJS</span>.<span class="hljs-property">enc</span>.<span class="hljs-property">Utf8</span>.<span class="hljs-title function_">parse</span>(b)<br>         , d = <span class="hljs-title class_">CryptoJS</span>.<span class="hljs-property">enc</span>.<span class="hljs-property">Utf8</span>.<span class="hljs-title function_">parse</span>(<span class="hljs-string">&quot;0102030405060708&quot;</span>)<br>         , e = <span class="hljs-title class_">CryptoJS</span>.<span class="hljs-property">enc</span>.<span class="hljs-property">Utf8</span>.<span class="hljs-title function_">parse</span>(a)<br>         , f = <span class="hljs-title class_">CryptoJS</span>.<span class="hljs-property">AES</span>.<span class="hljs-title function_">encrypt</span>(e, c, &#123;<br>           <span class="hljs-attr">iv</span>: d,<br>           <span class="hljs-attr">mode</span>: <span class="hljs-title class_">CryptoJS</span>.<span class="hljs-property">mode</span>.<span class="hljs-property">CBC</span><br>       &#125;);<br>       <span class="hljs-keyword">return</span> f.<span class="hljs-title function_">toString</span>()<br>   &#125;<br></code></pre></td></tr></table></figure><p>从这里打个点，再次输入字符，我这里以w为示例</p><p><img src="https://pic.imgdb.cn/item/666429855e6d1bfa0575219f.png" alt=""></p><p>得到了一组数据，现在我们知道<code>d</code>是<code>&quot;&#123;&quot;s&quot;:&quot;w&quot;,&quot;limit&quot;:&quot;8&quot;,&quot;csrf_token&quot;:&quot;&quot;&#125;&quot;</code></p><ul><li><code>s</code>是我们搜索的东西</li><li><code>limit</code>是获取的条数</li><li><code>csrf_token</code>是登录的令牌</li></ul><p>我多试了几次，<code>g</code>是一个定值，值为<code>0CoJUm6Qyw8W8jud</code></p><p>然后把<code>a</code>和<code>b</code>函数，放到<strong>IDE</strong>里执行，是否和官方加密的一样，<strong>因为这里的i是随机的，为了测试是否和官方一致，我这里使用同样的数据</strong></p><p><img src="https://pic.imgdb.cn/item/66642ba45e6d1bfa05787bd0.png" alt=""></p><p><img src="https://pic.imgdb.cn/item/66642ba45e6d1bfa05787bec.png" alt=""></p><p>和官方是一样的，那接下来是<code>encseckey</code>了</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> <span class="hljs-title class_">CryptoJS</span> = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;crypto-js&quot;</span>);<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">a</span>(<span class="hljs-params">a</span>) &#123; <span class="hljs-comment">// 随机生成16位字母+数字</span><br>    <span class="hljs-keyword">var</span> d, e, b = <span class="hljs-string">&quot;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789&quot;</span>, c = <span class="hljs-string">&quot;&quot;</span>;<br>    <span class="hljs-keyword">for</span> (d = <span class="hljs-number">0</span>; a &gt; d; d += <span class="hljs-number">1</span>)<br>        e = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">random</span>() * b.<span class="hljs-property">length</span>,<br>        e = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>(e),<br>        c += b.<span class="hljs-title function_">charAt</span>(e);<br>    <span class="hljs-keyword">return</span> c<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">b</span>(<span class="hljs-params">a, b</span>) &#123;<br>    <span class="hljs-comment">// 一个aes的加密 crypto是js的一个加密库</span><br>    <span class="hljs-keyword">var</span> c = <span class="hljs-title class_">CryptoJS</span>.<span class="hljs-property">enc</span>.<span class="hljs-property">Utf8</span>.<span class="hljs-title function_">parse</span>(b)<br>      , d = <span class="hljs-title class_">CryptoJS</span>.<span class="hljs-property">enc</span>.<span class="hljs-property">Utf8</span>.<span class="hljs-title function_">parse</span>(<span class="hljs-string">&quot;0102030405060708&quot;</span>)<br>      , e = <span class="hljs-title class_">CryptoJS</span>.<span class="hljs-property">enc</span>.<span class="hljs-property">Utf8</span>.<span class="hljs-title function_">parse</span>(a)<br>      , f = <span class="hljs-title class_">CryptoJS</span>.<span class="hljs-property">AES</span>.<span class="hljs-title function_">encrypt</span>(e, c, &#123;<br>        <span class="hljs-attr">iv</span>: d,<br>        <span class="hljs-attr">mode</span>: <span class="hljs-title class_">CryptoJS</span>.<span class="hljs-property">mode</span>.<span class="hljs-property">CBC</span><br>    &#125;);<br>    <span class="hljs-keyword">return</span> f.<span class="hljs-title function_">toString</span>()<br>&#125;<br><br><span class="hljs-keyword">var</span> params = <span class="hljs-title function_">b</span>(<span class="hljs-string">&#x27;&#123;&quot;s&quot;:&quot;w&quot;,&quot;limit&quot;:&quot;8&quot;,&quot;csrf_token&quot;:&quot;&quot;&#125;&#x27;</span>, <span class="hljs-string">&quot;0CoJUm6Qyw8W8jud&quot;</span>)<br>params = <span class="hljs-title function_">b</span>(params, <span class="hljs-title function_">a</span>(<span class="hljs-number">16</span>))<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(params)<br></code></pre></td></tr></table></figure><p>也是同样的道理</p><p><img src="https://pic.imgdb.cn/item/66642c305e6d1bfa05793b3e.png" alt=""></p><p><img src="https://pic.imgdb.cn/item/66642c945e6d1bfa05799108.png" alt=""></p><p>经过多次测试，<code>e</code>和<code>f</code>也是定值</p><ul><li><code>e</code>值为<code>010001</code></li><li><code>f</code>值为<code>00e0b509f6259df8642dbc35662901477df22677ec152b5ff68ace615bb7b725152b3ab17a876aea8a5aa76d2e417629ec4ee341f56135fccf695280104e0312ecbda92557c93870114af6c9d05c4f7f0c3685b7a46bee255932575cce10b424d813cfe4875d3e82047b97ddef52741d546b8e289dc6935b3ece0462db0a22b8e7</code></li></ul><p><img src="https://pic.imgdb.cn/item/66642d1f5e6d1bfa057a15a2.png" alt=""></p><p><code>c</code>函数中有<code>setMaxDigits</code>,<code>RSAKeyPair</code>,<code>encryptedString</code>三个函数，由于包含的<code>function</code>太多了，我这里直接复制到下面</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">function</span> <span class="hljs-title function_">RSAKeyPair</span>(<span class="hljs-params">a, b, c</span>) &#123;<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">e</span> = <span class="hljs-title function_">biFromHex</span>(a),<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">d</span> = <span class="hljs-title function_">biFromHex</span>(b),<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">m</span> = <span class="hljs-title function_">biFromHex</span>(c),<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">chunkSize</span> = <span class="hljs-number">2</span> * <span class="hljs-title function_">biHighIndex</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">m</span>),<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">radix</span> = <span class="hljs-number">16</span>,<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">barrett</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">BarrettMu</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">m</span>)<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">twoDigit</span>(<span class="hljs-params">a</span>) &#123;<br>    <span class="hljs-keyword">return</span> (<span class="hljs-number">10</span> &gt; a ? <span class="hljs-string">&quot;0&quot;</span> : <span class="hljs-string">&quot;&quot;</span>) + <span class="hljs-title class_">String</span>(a)<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">encryptedString</span>(<span class="hljs-params">a, b</span>) &#123;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> f, g, h, i, j, k, l, c = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Array</span>, d = b.<span class="hljs-property">length</span>, e = <span class="hljs-number">0</span>; d &gt; e; )<br>        c[e] = b.<span class="hljs-title function_">charCodeAt</span>(e),<br>        e++;<br>    <span class="hljs-keyword">for</span> (; <span class="hljs-number">0</span> != c.<span class="hljs-property">length</span> % a.<span class="hljs-property">chunkSize</span>; )<br>        c[e++] = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span> (f = c.<span class="hljs-property">length</span>,<br>    g = <span class="hljs-string">&quot;&quot;</span>,<br>    e = <span class="hljs-number">0</span>; f &gt; e; e += a.<span class="hljs-property">chunkSize</span>) &#123;<br>        <span class="hljs-keyword">for</span> (j = <span class="hljs-keyword">new</span> <span class="hljs-title class_">BigInt</span>,<br>        h = <span class="hljs-number">0</span>,<br>        i = e; i &lt; e + a.<span class="hljs-property">chunkSize</span>; ++h)<br>            j.<span class="hljs-property">digits</span>[h] = c[i++],<br>            j.<span class="hljs-property">digits</span>[h] += c[i++] &lt;&lt; <span class="hljs-number">8</span>;<br>        k = a.<span class="hljs-property">barrett</span>.<span class="hljs-title function_">powMod</span>(j, a.<span class="hljs-property">e</span>),<br>        l = <span class="hljs-number">16</span> == a.<span class="hljs-property">radix</span> ? <span class="hljs-title function_">biToHex</span>(k) : <span class="hljs-title function_">biToString</span>(k, a.<span class="hljs-property">radix</span>),<br>        g += l + <span class="hljs-string">&quot; &quot;</span><br>    &#125;<br>    <span class="hljs-keyword">return</span> g.<span class="hljs-title function_">substring</span>(<span class="hljs-number">0</span>, g.<span class="hljs-property">length</span> - <span class="hljs-number">1</span>)<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">decryptedString</span>(<span class="hljs-params">a, b</span>) &#123;<br>    <span class="hljs-keyword">var</span> e, f, g, h, c = b.<span class="hljs-title function_">split</span>(<span class="hljs-string">&quot; &quot;</span>), d = <span class="hljs-string">&quot;&quot;</span>;<br>    <span class="hljs-keyword">for</span> (e = <span class="hljs-number">0</span>; e &lt; c.<span class="hljs-property">length</span>; ++e)<br>        <span class="hljs-keyword">for</span> (h = <span class="hljs-number">16</span> == a.<span class="hljs-property">radix</span> ? <span class="hljs-title function_">biFromHex</span>(c[e]) : <span class="hljs-title function_">biFromString</span>(c[e], a.<span class="hljs-property">radix</span>),<br>        g = a.<span class="hljs-property">barrett</span>.<span class="hljs-title function_">powMod</span>(h, a.<span class="hljs-property">d</span>),<br>        f = <span class="hljs-number">0</span>; f &lt;= <span class="hljs-title function_">biHighIndex</span>(g); ++f)<br>            d += <span class="hljs-title class_">String</span>.<span class="hljs-title function_">fromCharCode</span>(<span class="hljs-number">255</span> &amp; g.<span class="hljs-property">digits</span>[f], g.<span class="hljs-property">digits</span>[f] &gt;&gt; <span class="hljs-number">8</span>);<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span> == d.<span class="hljs-title function_">charCodeAt</span>(d.<span class="hljs-property">length</span> - <span class="hljs-number">1</span>) &amp;&amp; (d = d.<span class="hljs-title function_">substring</span>(<span class="hljs-number">0</span>, d.<span class="hljs-property">length</span> - <span class="hljs-number">1</span>)),<br>    d<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">setMaxDigits</span>(<span class="hljs-params">a</span>) &#123;<br>    maxDigits = a,<br>    <span class="hljs-variable constant_">ZERO_ARRAY</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Array</span>(maxDigits);<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> b = <span class="hljs-number">0</span>; b &lt; <span class="hljs-variable constant_">ZERO_ARRAY</span>.<span class="hljs-property">length</span>; b++)<br>        <span class="hljs-variable constant_">ZERO_ARRAY</span>[b] = <span class="hljs-number">0</span>;<br>    bigZero = <span class="hljs-keyword">new</span> <span class="hljs-title class_">BigInt</span>,<br>    bigOne = <span class="hljs-keyword">new</span> <span class="hljs-title class_">BigInt</span>,<br>    bigOne.<span class="hljs-property">digits</span>[<span class="hljs-number">0</span>] = <span class="hljs-number">1</span><br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">BigInt</span>(<span class="hljs-params">a</span>) &#123;<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">digits</span> = <span class="hljs-string">&quot;boolean&quot;</span> == <span class="hljs-keyword">typeof</span> a &amp;&amp; <span class="hljs-number">1</span> == a ? <span class="hljs-literal">null</span> : <span class="hljs-variable constant_">ZERO_ARRAY</span>.<span class="hljs-title function_">slice</span>(<span class="hljs-number">0</span>),<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">isNeg</span> = !<span class="hljs-number">1</span><br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">biFromDecimal</span>(<span class="hljs-params">a</span>) &#123;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> d, e, f, b = <span class="hljs-string">&quot;-&quot;</span> == a.<span class="hljs-title function_">charAt</span>(<span class="hljs-number">0</span>), c = b ? <span class="hljs-number">1</span> : <span class="hljs-number">0</span>; c &lt; a.<span class="hljs-property">length</span> &amp;&amp; <span class="hljs-string">&quot;0&quot;</span> == a.<span class="hljs-title function_">charAt</span>(c); )<br>        ++c;<br>    <span class="hljs-keyword">if</span> (c == a.<span class="hljs-property">length</span>)<br>        d = <span class="hljs-keyword">new</span> <span class="hljs-title class_">BigInt</span>;<br>    <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-keyword">for</span> (e = a.<span class="hljs-property">length</span> - c,<br>        f = e % dpl10,<br>        <span class="hljs-number">0</span> == f &amp;&amp; (f = dpl10),<br>        d = <span class="hljs-title function_">biFromNumber</span>(<span class="hljs-title class_">Number</span>(a.<span class="hljs-title function_">substr</span>(c, f))),<br>        c += f; c &lt; a.<span class="hljs-property">length</span>; )<br>            d = <span class="hljs-title function_">biAdd</span>(<span class="hljs-title function_">biMultiply</span>(d, lr10), <span class="hljs-title function_">biFromNumber</span>(<span class="hljs-title class_">Number</span>(a.<span class="hljs-title function_">substr</span>(c, dpl10)))),<br>            c += dpl10;<br>        d.<span class="hljs-property">isNeg</span> = b<br>    &#125;<br>    <span class="hljs-keyword">return</span> d<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">biCopy</span>(<span class="hljs-params">a</span>) &#123;<br>    <span class="hljs-keyword">var</span> b = <span class="hljs-keyword">new</span> <span class="hljs-title class_">BigInt</span>(!<span class="hljs-number">0</span>);<br>    <span class="hljs-keyword">return</span> b.<span class="hljs-property">digits</span> = a.<span class="hljs-property">digits</span>.<span class="hljs-title function_">slice</span>(<span class="hljs-number">0</span>),<br>    b.<span class="hljs-property">isNeg</span> = a.<span class="hljs-property">isNeg</span>,<br>    b<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">biFromNumber</span>(<span class="hljs-params">a</span>) &#123;<br>    <span class="hljs-keyword">var</span> c, b = <span class="hljs-keyword">new</span> <span class="hljs-title class_">BigInt</span>;<br>    <span class="hljs-keyword">for</span> (b.<span class="hljs-property">isNeg</span> = <span class="hljs-number">0</span> &gt; a,<br>    a = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">abs</span>(a),<br>    c = <span class="hljs-number">0</span>; a &gt; <span class="hljs-number">0</span>; )<br>        b.<span class="hljs-property">digits</span>[c++] = a &amp; maxDigitVal,<br>        a &gt;&gt;= biRadixBits;<br>    <span class="hljs-keyword">return</span> b<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">reverseStr</span>(<span class="hljs-params">a</span>) &#123;<br>    <span class="hljs-keyword">var</span> c, b = <span class="hljs-string">&quot;&quot;</span>;<br>    <span class="hljs-keyword">for</span> (c = a.<span class="hljs-property">length</span> - <span class="hljs-number">1</span>; c &gt; -<span class="hljs-number">1</span>; --c)<br>        b += a.<span class="hljs-title function_">charAt</span>(c);<br>    <span class="hljs-keyword">return</span> b<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">biToString</span>(<span class="hljs-params">a, b</span>) &#123;<br>    <span class="hljs-keyword">var</span> d, e, c = <span class="hljs-keyword">new</span> <span class="hljs-title class_">BigInt</span>;<br>    <span class="hljs-keyword">for</span> (c.<span class="hljs-property">digits</span>[<span class="hljs-number">0</span>] = b,<br>    d = <span class="hljs-title function_">biDivideModulo</span>(a, c),<br>    e = hexatrigesimalToChar[d[<span class="hljs-number">1</span>].<span class="hljs-property">digits</span>[<span class="hljs-number">0</span>]]; <span class="hljs-number">1</span> == <span class="hljs-title function_">biCompare</span>(d[<span class="hljs-number">0</span>], bigZero); )<br>        d = <span class="hljs-title function_">biDivideModulo</span>(d[<span class="hljs-number">0</span>], c),<br>        digit = d[<span class="hljs-number">1</span>].<span class="hljs-property">digits</span>[<span class="hljs-number">0</span>],<br>        e += hexatrigesimalToChar[d[<span class="hljs-number">1</span>].<span class="hljs-property">digits</span>[<span class="hljs-number">0</span>]];<br>    <span class="hljs-keyword">return</span> (a.<span class="hljs-property">isNeg</span> ? <span class="hljs-string">&quot;-&quot;</span> : <span class="hljs-string">&quot;&quot;</span>) + <span class="hljs-title function_">reverseStr</span>(e)<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">biToDecimal</span>(<span class="hljs-params">a</span>) &#123;<br>    <span class="hljs-keyword">var</span> c, d, b = <span class="hljs-keyword">new</span> <span class="hljs-title class_">BigInt</span>;<br>    <span class="hljs-keyword">for</span> (b.<span class="hljs-property">digits</span>[<span class="hljs-number">0</span>] = <span class="hljs-number">10</span>,<br>    c = <span class="hljs-title function_">biDivideModulo</span>(a, b),<br>    d = <span class="hljs-title class_">String</span>(c[<span class="hljs-number">1</span>].<span class="hljs-property">digits</span>[<span class="hljs-number">0</span>]); <span class="hljs-number">1</span> == <span class="hljs-title function_">biCompare</span>(c[<span class="hljs-number">0</span>], bigZero); )<br>        c = <span class="hljs-title function_">biDivideModulo</span>(c[<span class="hljs-number">0</span>], b),<br>        d += <span class="hljs-title class_">String</span>(c[<span class="hljs-number">1</span>].<span class="hljs-property">digits</span>[<span class="hljs-number">0</span>]);<br>    <span class="hljs-keyword">return</span> (a.<span class="hljs-property">isNeg</span> ? <span class="hljs-string">&quot;-&quot;</span> : <span class="hljs-string">&quot;&quot;</span>) + <span class="hljs-title function_">reverseStr</span>(d)<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">digitToHex</span>(<span class="hljs-params">a</span>) &#123;<br>    <span class="hljs-keyword">var</span> b = <span class="hljs-number">15</span><br>      , c = <span class="hljs-string">&quot;&quot;</span>;<br>    <span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; <span class="hljs-number">4</span> &gt; i; ++i)<br>        c += hexToChar[a &amp; b],<br>        a &gt;&gt;&gt;= <span class="hljs-number">4</span>;<br>    <span class="hljs-keyword">return</span> <span class="hljs-title function_">reverseStr</span>(c)<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">biToHex</span>(<span class="hljs-params">a</span>) &#123;<br>    <span class="hljs-keyword">var</span> d, b = <span class="hljs-string">&quot;&quot;</span>;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-title function_">biHighIndex</span>(a),<br>    d = <span class="hljs-title function_">biHighIndex</span>(a); d &gt; -<span class="hljs-number">1</span>; --d)<br>        b += <span class="hljs-title function_">digitToHex</span>(a.<span class="hljs-property">digits</span>[d]);<br>    <span class="hljs-keyword">return</span> b<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">charToHex</span>(<span class="hljs-params">a</span>) &#123;<br>    <span class="hljs-keyword">var</span> h, b = <span class="hljs-number">48</span>, c = b + <span class="hljs-number">9</span>, d = <span class="hljs-number">97</span>, e = d + <span class="hljs-number">25</span>, f = <span class="hljs-number">65</span>, g = <span class="hljs-number">90</span>;<br>    <span class="hljs-keyword">return</span> h = a &gt;= b &amp;&amp; c &gt;= a ? a - b : a &gt;= f &amp;&amp; g &gt;= a ? <span class="hljs-number">10</span> + a - f : a &gt;= d &amp;&amp; e &gt;= a ? <span class="hljs-number">10</span> + a - d : <span class="hljs-number">0</span><br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">hexToDigit</span>(<span class="hljs-params">a</span>) &#123;<br>    <span class="hljs-keyword">var</span> d, b = <span class="hljs-number">0</span>, c = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">min</span>(a.<span class="hljs-property">length</span>, <span class="hljs-number">4</span>);<br>    <span class="hljs-keyword">for</span> (d = <span class="hljs-number">0</span>; c &gt; d; ++d)<br>        b &lt;&lt;= <span class="hljs-number">4</span>,<br>        b |= <span class="hljs-title function_">charToHex</span>(a.<span class="hljs-title function_">charCodeAt</span>(d));<br>    <span class="hljs-keyword">return</span> b<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">biFromHex</span>(<span class="hljs-params">a</span>) &#123;<br>    <span class="hljs-keyword">var</span> d, e, b = <span class="hljs-keyword">new</span> <span class="hljs-title class_">BigInt</span>, c = a.<span class="hljs-property">length</span>;<br>    <span class="hljs-keyword">for</span> (d = c,<br>    e = <span class="hljs-number">0</span>; d &gt; <span class="hljs-number">0</span>; d -= <span class="hljs-number">4</span>,<br>    ++e)<br>        b.<span class="hljs-property">digits</span>[e] = <span class="hljs-title function_">hexToDigit</span>(a.<span class="hljs-title function_">substr</span>(<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">max</span>(d - <span class="hljs-number">4</span>, <span class="hljs-number">0</span>), <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">min</span>(d, <span class="hljs-number">4</span>)));<br>    <span class="hljs-keyword">return</span> b<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">biFromString</span>(<span class="hljs-params">a, b</span>) &#123;<br>    <span class="hljs-keyword">var</span> g, h, i, j, c = <span class="hljs-string">&quot;-&quot;</span> == a.<span class="hljs-title function_">charAt</span>(<span class="hljs-number">0</span>), d = c ? <span class="hljs-number">1</span> : <span class="hljs-number">0</span>, e = <span class="hljs-keyword">new</span> <span class="hljs-title class_">BigInt</span>, f = <span class="hljs-keyword">new</span> <span class="hljs-title class_">BigInt</span>;<br>    <span class="hljs-keyword">for</span> (f.<span class="hljs-property">digits</span>[<span class="hljs-number">0</span>] = <span class="hljs-number">1</span>,<br>    g = a.<span class="hljs-property">length</span> - <span class="hljs-number">1</span>; g &gt;= d; g--)<br>        h = a.<span class="hljs-title function_">charCodeAt</span>(g),<br>        i = <span class="hljs-title function_">charToHex</span>(h),<br>        j = <span class="hljs-title function_">biMultiplyDigit</span>(f, i),<br>        e = <span class="hljs-title function_">biAdd</span>(e, j),<br>        f = <span class="hljs-title function_">biMultiplyDigit</span>(f, b);<br>    <span class="hljs-keyword">return</span> e.<span class="hljs-property">isNeg</span> = c,<br>    e<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">biDump</span>(<span class="hljs-params">a</span>) &#123;<br>    <span class="hljs-keyword">return</span> (a.<span class="hljs-property">isNeg</span> ? <span class="hljs-string">&quot;-&quot;</span> : <span class="hljs-string">&quot;&quot;</span>) + a.<span class="hljs-property">digits</span>.<span class="hljs-title function_">join</span>(<span class="hljs-string">&quot; &quot;</span>)<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">biAdd</span>(<span class="hljs-params">a, b</span>) &#123;<br>    <span class="hljs-keyword">var</span> c, d, e, f;<br>    <span class="hljs-keyword">if</span> (a.<span class="hljs-property">isNeg</span> != b.<span class="hljs-property">isNeg</span>)<br>        b.<span class="hljs-property">isNeg</span> = !b.<span class="hljs-property">isNeg</span>,<br>        c = <span class="hljs-title function_">biSubtract</span>(a, b),<br>        b.<span class="hljs-property">isNeg</span> = !b.<span class="hljs-property">isNeg</span>;<br>    <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-keyword">for</span> (c = <span class="hljs-keyword">new</span> <span class="hljs-title class_">BigInt</span>,<br>        d = <span class="hljs-number">0</span>,<br>        f = <span class="hljs-number">0</span>; f &lt; a.<span class="hljs-property">digits</span>.<span class="hljs-property">length</span>; ++f)<br>            e = a.<span class="hljs-property">digits</span>[f] + b.<span class="hljs-property">digits</span>[f] + d,<br>            c.<span class="hljs-property">digits</span>[f] = <span class="hljs-number">65535</span> &amp; e,<br>            d = <span class="hljs-title class_">Number</span>(e &gt;= biRadix);<br>        c.<span class="hljs-property">isNeg</span> = a.<span class="hljs-property">isNeg</span><br>    &#125;<br>    <span class="hljs-keyword">return</span> c<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">biSubtract</span>(<span class="hljs-params">a, b</span>) &#123;<br>    <span class="hljs-keyword">var</span> c, d, e, f;<br>    <span class="hljs-keyword">if</span> (a.<span class="hljs-property">isNeg</span> != b.<span class="hljs-property">isNeg</span>)<br>        b.<span class="hljs-property">isNeg</span> = !b.<span class="hljs-property">isNeg</span>,<br>        c = <span class="hljs-title function_">biAdd</span>(a, b),<br>        b.<span class="hljs-property">isNeg</span> = !b.<span class="hljs-property">isNeg</span>;<br>    <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-keyword">for</span> (c = <span class="hljs-keyword">new</span> <span class="hljs-title class_">BigInt</span>,<br>        e = <span class="hljs-number">0</span>,<br>        f = <span class="hljs-number">0</span>; f &lt; a.<span class="hljs-property">digits</span>.<span class="hljs-property">length</span>; ++f)<br>            d = a.<span class="hljs-property">digits</span>[f] - b.<span class="hljs-property">digits</span>[f] + e,<br>            c.<span class="hljs-property">digits</span>[f] = <span class="hljs-number">65535</span> &amp; d,<br>            c.<span class="hljs-property">digits</span>[f] &lt; <span class="hljs-number">0</span> &amp;&amp; (c.<span class="hljs-property">digits</span>[f] += biRadix),<br>            e = <span class="hljs-number">0</span> - <span class="hljs-title class_">Number</span>(<span class="hljs-number">0</span> &gt; d);<br>        <span class="hljs-keyword">if</span> (-<span class="hljs-number">1</span> == e) &#123;<br>            <span class="hljs-keyword">for</span> (e = <span class="hljs-number">0</span>,<br>            f = <span class="hljs-number">0</span>; f &lt; a.<span class="hljs-property">digits</span>.<span class="hljs-property">length</span>; ++f)<br>                d = <span class="hljs-number">0</span> - c.<span class="hljs-property">digits</span>[f] + e,<br>                c.<span class="hljs-property">digits</span>[f] = <span class="hljs-number">65535</span> &amp; d,<br>                c.<span class="hljs-property">digits</span>[f] &lt; <span class="hljs-number">0</span> &amp;&amp; (c.<span class="hljs-property">digits</span>[f] += biRadix),<br>                e = <span class="hljs-number">0</span> - <span class="hljs-title class_">Number</span>(<span class="hljs-number">0</span> &gt; d);<br>            c.<span class="hljs-property">isNeg</span> = !a.<span class="hljs-property">isNeg</span><br>        &#125; <span class="hljs-keyword">else</span><br>            c.<span class="hljs-property">isNeg</span> = a.<span class="hljs-property">isNeg</span><br>    &#125;<br>    <span class="hljs-keyword">return</span> c<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">biHighIndex</span>(<span class="hljs-params">a</span>) &#123;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> b = a.<span class="hljs-property">digits</span>.<span class="hljs-property">length</span> - <span class="hljs-number">1</span>; b &gt; <span class="hljs-number">0</span> &amp;&amp; <span class="hljs-number">0</span> == a.<span class="hljs-property">digits</span>[b]; )<br>        --b;<br>    <span class="hljs-keyword">return</span> b<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">biNumBits</span>(<span class="hljs-params">a</span>) &#123;<br>    <span class="hljs-keyword">var</span> e, b = <span class="hljs-title function_">biHighIndex</span>(a), c = a.<span class="hljs-property">digits</span>[b], d = (b + <span class="hljs-number">1</span>) * bitsPerDigit;<br>    <span class="hljs-keyword">for</span> (e = d; e &gt; d - bitsPerDigit &amp;&amp; <span class="hljs-number">0</span> == (<span class="hljs-number">32768</span> &amp; c); --e)<br>        c &lt;&lt;= <span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">return</span> e<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">biMultiply</span>(<span class="hljs-params">a, b</span>) &#123;<br>    <span class="hljs-keyword">var</span> d, h, i, k, c = <span class="hljs-keyword">new</span> <span class="hljs-title class_">BigInt</span>, e = <span class="hljs-title function_">biHighIndex</span>(a), f = <span class="hljs-title function_">biHighIndex</span>(b);<br>    <span class="hljs-keyword">for</span> (k = <span class="hljs-number">0</span>; f &gt;= k; ++k) &#123;<br>        <span class="hljs-keyword">for</span> (d = <span class="hljs-number">0</span>,<br>        i = k,<br>        j = <span class="hljs-number">0</span>; e &gt;= j; ++j,<br>        ++i)<br>            h = c.<span class="hljs-property">digits</span>[i] + a.<span class="hljs-property">digits</span>[j] * b.<span class="hljs-property">digits</span>[k] + d,<br>            c.<span class="hljs-property">digits</span>[i] = h &amp; maxDigitVal,<br>            d = h &gt;&gt;&gt; biRadixBits;<br>        c.<span class="hljs-property">digits</span>[k + e + <span class="hljs-number">1</span>] = d<br>    &#125;<br>    <span class="hljs-keyword">return</span> c.<span class="hljs-property">isNeg</span> = a.<span class="hljs-property">isNeg</span> != b.<span class="hljs-property">isNeg</span>,<br>    c<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">biMultiplyDigit</span>(<span class="hljs-params">a, b</span>) &#123;<br>    <span class="hljs-keyword">var</span> c, d, e, f;<br>    <span class="hljs-keyword">for</span> (result = <span class="hljs-keyword">new</span> <span class="hljs-title class_">BigInt</span>,<br>    c = <span class="hljs-title function_">biHighIndex</span>(a),<br>    d = <span class="hljs-number">0</span>,<br>    f = <span class="hljs-number">0</span>; c &gt;= f; ++f)<br>        e = result.<span class="hljs-property">digits</span>[f] + a.<span class="hljs-property">digits</span>[f] * b + d,<br>        result.<span class="hljs-property">digits</span>[f] = e &amp; maxDigitVal,<br>        d = e &gt;&gt;&gt; biRadixBits;<br>    <span class="hljs-keyword">return</span> result.<span class="hljs-property">digits</span>[<span class="hljs-number">1</span> + c] = d,<br>    result<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">arrayCopy</span>(<span class="hljs-params">a, b, c, d, e</span>) &#123;<br>    <span class="hljs-keyword">var</span> g, h, f = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">min</span>(b + e, a.<span class="hljs-property">length</span>);<br>    <span class="hljs-keyword">for</span> (g = b,<br>    h = d; f &gt; g; ++g,<br>    ++h)<br>        c[h] = a[g]<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">biShiftLeft</span>(<span class="hljs-params">a, b</span>) &#123;<br>    <span class="hljs-keyword">var</span> e, f, g, h, c = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>(b / bitsPerDigit), d = <span class="hljs-keyword">new</span> <span class="hljs-title class_">BigInt</span>;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-title function_">arrayCopy</span>(a.<span class="hljs-property">digits</span>, <span class="hljs-number">0</span>, d.<span class="hljs-property">digits</span>, c, d.<span class="hljs-property">digits</span>.<span class="hljs-property">length</span> - c),<br>    e = b % bitsPerDigit,<br>    f = bitsPerDigit - e,<br>    g = d.<span class="hljs-property">digits</span>.<span class="hljs-property">length</span> - <span class="hljs-number">1</span>,<br>    h = g - <span class="hljs-number">1</span>; g &gt; <span class="hljs-number">0</span>; --g,<br>    --h)<br>        d.<span class="hljs-property">digits</span>[g] = d.<span class="hljs-property">digits</span>[g] &lt;&lt; e &amp; maxDigitVal | (d.<span class="hljs-property">digits</span>[h] &amp; highBitMasks[e]) &gt;&gt;&gt; f;<br>    <span class="hljs-keyword">return</span> d.<span class="hljs-property">digits</span>[<span class="hljs-number">0</span>] = d.<span class="hljs-property">digits</span>[g] &lt;&lt; e &amp; maxDigitVal,<br>    d.<span class="hljs-property">isNeg</span> = a.<span class="hljs-property">isNeg</span>,<br>    d<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">biShiftRight</span>(<span class="hljs-params">a, b</span>) &#123;<br>    <span class="hljs-keyword">var</span> e, f, g, h, c = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>(b / bitsPerDigit), d = <span class="hljs-keyword">new</span> <span class="hljs-title class_">BigInt</span>;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-title function_">arrayCopy</span>(a.<span class="hljs-property">digits</span>, c, d.<span class="hljs-property">digits</span>, <span class="hljs-number">0</span>, a.<span class="hljs-property">digits</span>.<span class="hljs-property">length</span> - c),<br>    e = b % bitsPerDigit,<br>    f = bitsPerDigit - e,<br>    g = <span class="hljs-number">0</span>,<br>    h = g + <span class="hljs-number">1</span>; g &lt; d.<span class="hljs-property">digits</span>.<span class="hljs-property">length</span> - <span class="hljs-number">1</span>; ++g,<br>    ++h)<br>        d.<span class="hljs-property">digits</span>[g] = d.<span class="hljs-property">digits</span>[g] &gt;&gt;&gt; e | (d.<span class="hljs-property">digits</span>[h] &amp; lowBitMasks[e]) &lt;&lt; f;<br>    <span class="hljs-keyword">return</span> d.<span class="hljs-property">digits</span>[d.<span class="hljs-property">digits</span>.<span class="hljs-property">length</span> - <span class="hljs-number">1</span>] &gt;&gt;&gt;= e,<br>    d.<span class="hljs-property">isNeg</span> = a.<span class="hljs-property">isNeg</span>,<br>    d<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">biMultiplyByRadixPower</span>(<span class="hljs-params">a, b</span>) &#123;<br>    <span class="hljs-keyword">var</span> c = <span class="hljs-keyword">new</span> <span class="hljs-title class_">BigInt</span>;<br>    <span class="hljs-keyword">return</span> <span class="hljs-title function_">arrayCopy</span>(a.<span class="hljs-property">digits</span>, <span class="hljs-number">0</span>, c.<span class="hljs-property">digits</span>, b, c.<span class="hljs-property">digits</span>.<span class="hljs-property">length</span> - b),<br>    c<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">biDivideByRadixPower</span>(<span class="hljs-params">a, b</span>) &#123;<br>    <span class="hljs-keyword">var</span> c = <span class="hljs-keyword">new</span> <span class="hljs-title class_">BigInt</span>;<br>    <span class="hljs-keyword">return</span> <span class="hljs-title function_">arrayCopy</span>(a.<span class="hljs-property">digits</span>, b, c.<span class="hljs-property">digits</span>, <span class="hljs-number">0</span>, c.<span class="hljs-property">digits</span>.<span class="hljs-property">length</span> - b),<br>    c<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">biModuloByRadixPower</span>(<span class="hljs-params">a, b</span>) &#123;<br>    <span class="hljs-keyword">var</span> c = <span class="hljs-keyword">new</span> <span class="hljs-title class_">BigInt</span>;<br>    <span class="hljs-keyword">return</span> <span class="hljs-title function_">arrayCopy</span>(a.<span class="hljs-property">digits</span>, <span class="hljs-number">0</span>, c.<span class="hljs-property">digits</span>, <span class="hljs-number">0</span>, b),<br>    c<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">biCompare</span>(<span class="hljs-params">a, b</span>) &#123;<br>    <span class="hljs-keyword">if</span> (a.<span class="hljs-property">isNeg</span> != b.<span class="hljs-property">isNeg</span>)<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">1</span> - <span class="hljs-number">2</span> * <span class="hljs-title class_">Number</span>(a.<span class="hljs-property">isNeg</span>);<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> c = a.<span class="hljs-property">digits</span>.<span class="hljs-property">length</span> - <span class="hljs-number">1</span>; c &gt;= <span class="hljs-number">0</span>; --c)<br>        <span class="hljs-keyword">if</span> (a.<span class="hljs-property">digits</span>[c] != b.<span class="hljs-property">digits</span>[c])<br>            <span class="hljs-keyword">return</span> a.<span class="hljs-property">isNeg</span> ? <span class="hljs-number">1</span> - <span class="hljs-number">2</span> * <span class="hljs-title class_">Number</span>(a.<span class="hljs-property">digits</span>[c] &gt; b.<span class="hljs-property">digits</span>[c]) : <span class="hljs-number">1</span> - <span class="hljs-number">2</span> * <span class="hljs-title class_">Number</span>(a.<span class="hljs-property">digits</span>[c] &lt; b.<span class="hljs-property">digits</span>[c]);<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span><br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">biDivideModulo</span>(<span class="hljs-params">a, b</span>) &#123;<br>    <span class="hljs-keyword">var</span> f, g, h, i, j, k, l, m, n, o, p, q, r, s, c = <span class="hljs-title function_">biNumBits</span>(a), d = <span class="hljs-title function_">biNumBits</span>(b), e = b.<span class="hljs-property">isNeg</span>;<br>    <span class="hljs-keyword">if</span> (d &gt; c)<br>        <span class="hljs-keyword">return</span> a.<span class="hljs-property">isNeg</span> ? (f = <span class="hljs-title function_">biCopy</span>(bigOne),<br>        f.<span class="hljs-property">isNeg</span> = !b.<span class="hljs-property">isNeg</span>,<br>        a.<span class="hljs-property">isNeg</span> = !<span class="hljs-number">1</span>,<br>        b.<span class="hljs-property">isNeg</span> = !<span class="hljs-number">1</span>,<br>        g = <span class="hljs-title function_">biSubtract</span>(b, a),<br>        a.<span class="hljs-property">isNeg</span> = !<span class="hljs-number">0</span>,<br>        b.<span class="hljs-property">isNeg</span> = e) : (f = <span class="hljs-keyword">new</span> <span class="hljs-title class_">BigInt</span>,<br>        g = <span class="hljs-title function_">biCopy</span>(a)),<br>        <span class="hljs-keyword">new</span> <span class="hljs-title class_">Array</span>(f,g);<br>    <span class="hljs-keyword">for</span> (f = <span class="hljs-keyword">new</span> <span class="hljs-title class_">BigInt</span>,<br>    g = a,<br>    h = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">ceil</span>(d / bitsPerDigit) - <span class="hljs-number">1</span>,<br>    i = <span class="hljs-number">0</span>; b.<span class="hljs-property">digits</span>[h] &lt; biHalfRadix; )<br>        b = <span class="hljs-title function_">biShiftLeft</span>(b, <span class="hljs-number">1</span>),<br>        ++i,<br>        ++d,<br>        h = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">ceil</span>(d / bitsPerDigit) - <span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">for</span> (g = <span class="hljs-title function_">biShiftLeft</span>(g, i),<br>    c += i,<br>    j = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">ceil</span>(c / bitsPerDigit) - <span class="hljs-number">1</span>,<br>    k = <span class="hljs-title function_">biMultiplyByRadixPower</span>(b, j - h); -<span class="hljs-number">1</span> != <span class="hljs-title function_">biCompare</span>(g, k); )<br>        ++f.<span class="hljs-property">digits</span>[j - h],<br>        g = <span class="hljs-title function_">biSubtract</span>(g, k);<br>    <span class="hljs-keyword">for</span> (l = j; l &gt; h; --l) &#123;<br>        <span class="hljs-keyword">for</span> (m = l &gt;= g.<span class="hljs-property">digits</span>.<span class="hljs-property">length</span> ? <span class="hljs-number">0</span> : g.<span class="hljs-property">digits</span>[l],<br>        n = l - <span class="hljs-number">1</span> &gt;= g.<span class="hljs-property">digits</span>.<span class="hljs-property">length</span> ? <span class="hljs-number">0</span> : g.<span class="hljs-property">digits</span>[l - <span class="hljs-number">1</span>],<br>        o = l - <span class="hljs-number">2</span> &gt;= g.<span class="hljs-property">digits</span>.<span class="hljs-property">length</span> ? <span class="hljs-number">0</span> : g.<span class="hljs-property">digits</span>[l - <span class="hljs-number">2</span>],<br>        p = h &gt;= b.<span class="hljs-property">digits</span>.<span class="hljs-property">length</span> ? <span class="hljs-number">0</span> : b.<span class="hljs-property">digits</span>[h],<br>        q = h - <span class="hljs-number">1</span> &gt;= b.<span class="hljs-property">digits</span>.<span class="hljs-property">length</span> ? <span class="hljs-number">0</span> : b.<span class="hljs-property">digits</span>[h - <span class="hljs-number">1</span>],<br>        f.<span class="hljs-property">digits</span>[l - h - <span class="hljs-number">1</span>] = m == p ? maxDigitVal : <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>((m * biRadix + n) / p),<br>        r = f.<span class="hljs-property">digits</span>[l - h - <span class="hljs-number">1</span>] * (p * biRadix + q),<br>        s = m * biRadixSquared + (n * biRadix + o); r &gt; s; )<br>            --f.<span class="hljs-property">digits</span>[l - h - <span class="hljs-number">1</span>],<br>            r = f.<span class="hljs-property">digits</span>[l - h - <span class="hljs-number">1</span>] * (p * biRadix | q),<br>            s = m * biRadix * biRadix + (n * biRadix + o);<br>        k = <span class="hljs-title function_">biMultiplyByRadixPower</span>(b, l - h - <span class="hljs-number">1</span>),<br>        g = <span class="hljs-title function_">biSubtract</span>(g, <span class="hljs-title function_">biMultiplyDigit</span>(k, f.<span class="hljs-property">digits</span>[l - h - <span class="hljs-number">1</span>])),<br>        g.<span class="hljs-property">isNeg</span> &amp;&amp; (g = <span class="hljs-title function_">biAdd</span>(g, k),<br>        --f.<span class="hljs-property">digits</span>[l - h - <span class="hljs-number">1</span>])<br>    &#125;<br>    <span class="hljs-keyword">return</span> g = <span class="hljs-title function_">biShiftRight</span>(g, i),<br>    f.<span class="hljs-property">isNeg</span> = a.<span class="hljs-property">isNeg</span> != e,<br>    a.<span class="hljs-property">isNeg</span> &amp;&amp; (f = e ? <span class="hljs-title function_">biAdd</span>(f, bigOne) : <span class="hljs-title function_">biSubtract</span>(f, bigOne),<br>    b = <span class="hljs-title function_">biShiftRight</span>(b, i),<br>    g = <span class="hljs-title function_">biSubtract</span>(b, g)),<br>    <span class="hljs-number">0</span> == g.<span class="hljs-property">digits</span>[<span class="hljs-number">0</span>] &amp;&amp; <span class="hljs-number">0</span> == <span class="hljs-title function_">biHighIndex</span>(g) &amp;&amp; (g.<span class="hljs-property">isNeg</span> = !<span class="hljs-number">1</span>),<br>    <span class="hljs-keyword">new</span> <span class="hljs-title class_">Array</span>(f,g)<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">biDivide</span>(<span class="hljs-params">a, b</span>) &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-title function_">biDivideModulo</span>(a, b)[<span class="hljs-number">0</span>]<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">biModulo</span>(<span class="hljs-params">a, b</span>) &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-title function_">biDivideModulo</span>(a, b)[<span class="hljs-number">1</span>]<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">biMultiplyMod</span>(<span class="hljs-params">a, b, c</span>) &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-title function_">biModulo</span>(<span class="hljs-title function_">biMultiply</span>(a, b), c)<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">biPow</span>(<span class="hljs-params">a, b</span>) &#123;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> c = bigOne, d = a; ; ) &#123;<br>        <span class="hljs-keyword">if</span> (<span class="hljs-number">0</span> != (<span class="hljs-number">1</span> &amp; b) &amp;&amp; (c = <span class="hljs-title function_">biMultiply</span>(c, d)),<br>        b &gt;&gt;= <span class="hljs-number">1</span>,<br>        <span class="hljs-number">0</span> == b)<br>            <span class="hljs-keyword">break</span>;<br>        d = <span class="hljs-title function_">biMultiply</span>(d, d)<br>    &#125;<br>    <span class="hljs-keyword">return</span> c<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">biPowMod</span>(<span class="hljs-params">a, b, c</span>) &#123;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> d = bigOne, e = a, f = b; ; ) &#123;<br>        <span class="hljs-keyword">if</span> (<span class="hljs-number">0</span> != (<span class="hljs-number">1</span> &amp; f.<span class="hljs-property">digits</span>[<span class="hljs-number">0</span>]) &amp;&amp; (d = <span class="hljs-title function_">biMultiplyMod</span>(d, e, c)),<br>        f = <span class="hljs-title function_">biShiftRight</span>(f, <span class="hljs-number">1</span>),<br>        <span class="hljs-number">0</span> == f.<span class="hljs-property">digits</span>[<span class="hljs-number">0</span>] &amp;&amp; <span class="hljs-number">0</span> == <span class="hljs-title function_">biHighIndex</span>(f))<br>            <span class="hljs-keyword">break</span>;<br>        e = <span class="hljs-title function_">biMultiplyMod</span>(e, e, c)<br>    &#125;<br>    <span class="hljs-keyword">return</span> d<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">BarrettMu</span>(<span class="hljs-params">a</span>) &#123;<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">modulus</span> = <span class="hljs-title function_">biCopy</span>(a),<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">k</span> = <span class="hljs-title function_">biHighIndex</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">modulus</span>) + <span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">var</span> b = <span class="hljs-keyword">new</span> <span class="hljs-title class_">BigInt</span>;<br>    b.<span class="hljs-property">digits</span>[<span class="hljs-number">2</span> * <span class="hljs-variable language_">this</span>.<span class="hljs-property">k</span>] = <span class="hljs-number">1</span>,<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">mu</span> = <span class="hljs-title function_">biDivide</span>(b, <span class="hljs-variable language_">this</span>.<span class="hljs-property">modulus</span>),<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">bkplus1</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">BigInt</span>,<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">bkplus1</span>.<span class="hljs-property">digits</span>[<span class="hljs-variable language_">this</span>.<span class="hljs-property">k</span> + <span class="hljs-number">1</span>] = <span class="hljs-number">1</span>,<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">modulo</span> = <span class="hljs-title class_">BarrettMu</span>_modulo,<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">multiplyMod</span> = <span class="hljs-title class_">BarrettMu</span>_multiplyMod,<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">powMod</span> = <span class="hljs-title class_">BarrettMu</span>_powMod<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">BarrettMu_modulo</span>(<span class="hljs-params">a</span>) &#123;<br>    <span class="hljs-keyword">var</span> i, b = <span class="hljs-title function_">biDivideByRadixPower</span>(a, <span class="hljs-variable language_">this</span>.<span class="hljs-property">k</span> - <span class="hljs-number">1</span>), c = <span class="hljs-title function_">biMultiply</span>(b, <span class="hljs-variable language_">this</span>.<span class="hljs-property">mu</span>), d = <span class="hljs-title function_">biDivideByRadixPower</span>(c, <span class="hljs-variable language_">this</span>.<span class="hljs-property">k</span> + <span class="hljs-number">1</span>), e = <span class="hljs-title function_">biModuloByRadixPower</span>(a, <span class="hljs-variable language_">this</span>.<span class="hljs-property">k</span> + <span class="hljs-number">1</span>), f = <span class="hljs-title function_">biMultiply</span>(d, <span class="hljs-variable language_">this</span>.<span class="hljs-property">modulus</span>), g = <span class="hljs-title function_">biModuloByRadixPower</span>(f, <span class="hljs-variable language_">this</span>.<span class="hljs-property">k</span> + <span class="hljs-number">1</span>), h = <span class="hljs-title function_">biSubtract</span>(e, g);<br>    <span class="hljs-keyword">for</span> (h.<span class="hljs-property">isNeg</span> &amp;&amp; (h = <span class="hljs-title function_">biAdd</span>(h, <span class="hljs-variable language_">this</span>.<span class="hljs-property">bkplus1</span>)),<br>    i = <span class="hljs-title function_">biCompare</span>(h, <span class="hljs-variable language_">this</span>.<span class="hljs-property">modulus</span>) &gt;= <span class="hljs-number">0</span>; i; )<br>        h = <span class="hljs-title function_">biSubtract</span>(h, <span class="hljs-variable language_">this</span>.<span class="hljs-property">modulus</span>),<br>        i = <span class="hljs-title function_">biCompare</span>(h, <span class="hljs-variable language_">this</span>.<span class="hljs-property">modulus</span>) &gt;= <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">return</span> h<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">BarrettMu_multiplyMod</span>(<span class="hljs-params">a, b</span>) &#123;<br>    <span class="hljs-keyword">var</span> c = <span class="hljs-title function_">biMultiply</span>(a, b);<br>    <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">modulo</span>(c)<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">BarrettMu_powMod</span>(<span class="hljs-params">a, b</span>) &#123;<br>    <span class="hljs-keyword">var</span> d, e, c = <span class="hljs-keyword">new</span> <span class="hljs-title class_">BigInt</span>;<br>    <span class="hljs-keyword">for</span> (c.<span class="hljs-property">digits</span>[<span class="hljs-number">0</span>] = <span class="hljs-number">1</span>,<br>    d = a,<br>    e = b; ; ) &#123;<br>        <span class="hljs-keyword">if</span> (<span class="hljs-number">0</span> != (<span class="hljs-number">1</span> &amp; e.<span class="hljs-property">digits</span>[<span class="hljs-number">0</span>]) &amp;&amp; (c = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">multiplyMod</span>(c, d)),<br>        e = <span class="hljs-title function_">biShiftRight</span>(e, <span class="hljs-number">1</span>),<br>        <span class="hljs-number">0</span> == e.<span class="hljs-property">digits</span>[<span class="hljs-number">0</span>] &amp;&amp; <span class="hljs-number">0</span> == <span class="hljs-title function_">biHighIndex</span>(e))<br>            <span class="hljs-keyword">break</span>;<br>        d = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">multiplyMod</span>(d, d)<br>    &#125;<br>    <span class="hljs-keyword">return</span> c<br>&#125;<br><span class="hljs-keyword">var</span> maxDigits, <span class="hljs-variable constant_">ZERO_ARRAY</span>, bigZero, bigOne, dpl10, lr10, hexatrigesimalToChar, hexToChar, highBitMasks, lowBitMasks, biRadixBase = <span class="hljs-number">2</span>, biRadixBits = <span class="hljs-number">16</span>, bitsPerDigit = biRadixBits, biRadix = <span class="hljs-number">65536</span>, biHalfRadix = biRadix &gt;&gt;&gt; <span class="hljs-number">1</span>, biRadixSquared = biRadix * biRadix, maxDigitVal = biRadix - <span class="hljs-number">1</span>, maxInteger = <span class="hljs-number">9999999999999998</span>;<br><span class="hljs-title function_">setMaxDigits</span>(<span class="hljs-number">20</span>),<br>dpl10 = <span class="hljs-number">15</span>,<br>lr10 = <span class="hljs-title function_">biFromNumber</span>(<span class="hljs-number">1e15</span>),<br>hexatrigesimalToChar = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Array</span>(<span class="hljs-string">&quot;0&quot;</span>,<span class="hljs-string">&quot;1&quot;</span>,<span class="hljs-string">&quot;2&quot;</span>,<span class="hljs-string">&quot;3&quot;</span>,<span class="hljs-string">&quot;4&quot;</span>,<span class="hljs-string">&quot;5&quot;</span>,<span class="hljs-string">&quot;6&quot;</span>,<span class="hljs-string">&quot;7&quot;</span>,<span class="hljs-string">&quot;8&quot;</span>,<span class="hljs-string">&quot;9&quot;</span>,<span class="hljs-string">&quot;a&quot;</span>,<span class="hljs-string">&quot;b&quot;</span>,<span class="hljs-string">&quot;c&quot;</span>,<span class="hljs-string">&quot;d&quot;</span>,<span class="hljs-string">&quot;e&quot;</span>,<span class="hljs-string">&quot;f&quot;</span>,<span class="hljs-string">&quot;g&quot;</span>,<span class="hljs-string">&quot;h&quot;</span>,<span class="hljs-string">&quot;i&quot;</span>,<span class="hljs-string">&quot;j&quot;</span>,<span class="hljs-string">&quot;k&quot;</span>,<span class="hljs-string">&quot;l&quot;</span>,<span class="hljs-string">&quot;m&quot;</span>,<span class="hljs-string">&quot;n&quot;</span>,<span class="hljs-string">&quot;o&quot;</span>,<span class="hljs-string">&quot;p&quot;</span>,<span class="hljs-string">&quot;q&quot;</span>,<span class="hljs-string">&quot;r&quot;</span>,<span class="hljs-string">&quot;s&quot;</span>,<span class="hljs-string">&quot;t&quot;</span>,<span class="hljs-string">&quot;u&quot;</span>,<span class="hljs-string">&quot;v&quot;</span>,<span class="hljs-string">&quot;w&quot;</span>,<span class="hljs-string">&quot;x&quot;</span>,<span class="hljs-string">&quot;y&quot;</span>,<span class="hljs-string">&quot;z&quot;</span>),<br>hexToChar = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Array</span>(<span class="hljs-string">&quot;0&quot;</span>,<span class="hljs-string">&quot;1&quot;</span>,<span class="hljs-string">&quot;2&quot;</span>,<span class="hljs-string">&quot;3&quot;</span>,<span class="hljs-string">&quot;4&quot;</span>,<span class="hljs-string">&quot;5&quot;</span>,<span class="hljs-string">&quot;6&quot;</span>,<span class="hljs-string">&quot;7&quot;</span>,<span class="hljs-string">&quot;8&quot;</span>,<span class="hljs-string">&quot;9&quot;</span>,<span class="hljs-string">&quot;a&quot;</span>,<span class="hljs-string">&quot;b&quot;</span>,<span class="hljs-string">&quot;c&quot;</span>,<span class="hljs-string">&quot;d&quot;</span>,<span class="hljs-string">&quot;e&quot;</span>,<span class="hljs-string">&quot;f&quot;</span>),<br>highBitMasks = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Array</span>(<span class="hljs-number">0</span>,<span class="hljs-number">32768</span>,<span class="hljs-number">49152</span>,<span class="hljs-number">57344</span>,<span class="hljs-number">61440</span>,<span class="hljs-number">63488</span>,<span class="hljs-number">64512</span>,<span class="hljs-number">65024</span>,<span class="hljs-number">65280</span>,<span class="hljs-number">65408</span>,<span class="hljs-number">65472</span>,<span class="hljs-number">65504</span>,<span class="hljs-number">65520</span>,<span class="hljs-number">65528</span>,<span class="hljs-number">65532</span>,<span class="hljs-number">65534</span>,<span class="hljs-number">65535</span>),<br>lowBitMasks = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Array</span>(<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">3</span>,<span class="hljs-number">7</span>,<span class="hljs-number">15</span>,<span class="hljs-number">31</span>,<span class="hljs-number">63</span>,<span class="hljs-number">127</span>,<span class="hljs-number">255</span>,<span class="hljs-number">511</span>,<span class="hljs-number">1023</span>,<span class="hljs-number">2047</span>,<span class="hljs-number">4095</span>,<span class="hljs-number">8191</span>,<span class="hljs-number">16383</span>,<span class="hljs-number">32767</span>,<span class="hljs-number">65535</span>);<br></code></pre></td></tr></table></figure><p>放到<code>ide</code>里运行</p><p><img src="https://pic.imgdb.cn/item/66642e775e6d1bfa057b552f.png" alt=""></p><p>大功告成了，把他封装一下，成品看最后</p><hr><h2 id="最后">最后</h2><p>下一期我们来搞<code>QQ音乐</code>，qq音乐用了webpack，做的很精细，也给逆向来了不少难度</p><p><strong>webpack</strong> 是一个用于现代 JavaScript 应用程序的 <em>静态模块打包工具</em>。当 webpack 处理应用程序时，它会在内部从一个或多个入口点构建一个 <a href="https://www.webpackjs.com/concepts/dependency-graph/">依赖图(dependency graph)</a>，然后将你项目中所需的每一个模块组合成一个或多个 <em>bundles</em>，它们均为静态资源，用于展示你的内容。</p><hr><h2 id="成品">成品</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> <span class="hljs-title class_">CryptoJS</span> = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;crypto-js&quot;</span>);<br><br><span class="hljs-keyword">var</span> biRadix = -<span class="hljs-number">1</span><br>lowBitMasks = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Array</span>(<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">3</span>,<span class="hljs-number">7</span>,<span class="hljs-number">15</span>,<span class="hljs-number">31</span>,<span class="hljs-number">63</span>,<span class="hljs-number">127</span>,<span class="hljs-number">255</span>,<span class="hljs-number">511</span>,<span class="hljs-number">1023</span>,<span class="hljs-number">2047</span>,<span class="hljs-number">4095</span>,<span class="hljs-number">8191</span>,<span class="hljs-number">16383</span>,<span class="hljs-number">32767</span>,<span class="hljs-number">65535</span>);<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">b</span>(<span class="hljs-params">a,b</span>)&#123;<br>    <span class="hljs-keyword">const</span> key = <span class="hljs-title class_">CryptoJS</span>.<span class="hljs-property">enc</span>.<span class="hljs-property">Utf8</span>.<span class="hljs-title function_">parse</span>(b);<br>    <span class="hljs-keyword">const</span> iv = <span class="hljs-title class_">CryptoJS</span>.<span class="hljs-property">enc</span>.<span class="hljs-property">Utf8</span>.<span class="hljs-title function_">parse</span>(<span class="hljs-string">&#x27;0102030405060708&#x27;</span>);<br>    <span class="hljs-keyword">const</span> plaintext = <span class="hljs-title class_">CryptoJS</span>.<span class="hljs-property">enc</span>.<span class="hljs-property">Utf8</span>.<span class="hljs-title function_">parse</span>(a);<br>    <span class="hljs-keyword">const</span> encrypted = <span class="hljs-title class_">CryptoJS</span>.<span class="hljs-property">AES</span>.<span class="hljs-title function_">encrypt</span>(plaintext, key, &#123;<br>        <span class="hljs-attr">iv</span>: iv,<br>        <span class="hljs-attr">mode</span>: <span class="hljs-title class_">CryptoJS</span>.<span class="hljs-property">mode</span>.<span class="hljs-property">CBC</span><br>    &#125;);<br>    <span class="hljs-keyword">return</span> encrypted.<span class="hljs-title function_">toString</span>();<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">a_</span>(<span class="hljs-params">a</span>) &#123;<br>    <span class="hljs-keyword">var</span> d, e, b = <span class="hljs-string">&quot;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789&quot;</span>, c = <span class="hljs-string">&quot;&quot;</span>;<br>    <span class="hljs-keyword">for</span> (d = <span class="hljs-number">0</span>; a &gt; d; d += <span class="hljs-number">1</span>)<br>        e = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">random</span>() * b.<span class="hljs-property">length</span>,<br>        e = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>(e),<br>        c += b.<span class="hljs-title function_">charAt</span>(e);<br>    <span class="hljs-keyword">return</span> c<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">RSAKeyPair</span>(<span class="hljs-params">a, b, c</span>) &#123;<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">e</span> = <span class="hljs-title function_">biFromHex</span>(a),<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">d</span> = <span class="hljs-title function_">biFromHex</span>(b),<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">m</span> = <span class="hljs-title function_">biFromHex</span>(c),<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">chunkSize</span> = <span class="hljs-number">2</span> * <span class="hljs-title function_">biHighIndex</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">m</span>),<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">radix</span> = <span class="hljs-number">16</span>,<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">barrett</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">BarrettMu</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">m</span>)<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">twoDigit</span>(<span class="hljs-params">a</span>) &#123;<br>    <span class="hljs-keyword">return</span> (<span class="hljs-number">10</span> &gt; a ? <span class="hljs-string">&quot;0&quot;</span> : <span class="hljs-string">&quot;&quot;</span>) + <span class="hljs-title class_">String</span>(a)<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">encryptedString</span>(<span class="hljs-params">a, b</span>) &#123;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> f, g, h, i, j, k, l, c = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Array</span>, d = b.<span class="hljs-property">length</span>, e = <span class="hljs-number">0</span>; d &gt; e; )<br>        c[e] = b.<span class="hljs-title function_">charCodeAt</span>(e),<br>        e++;<br>    <span class="hljs-keyword">for</span> (; <span class="hljs-number">0</span> != c.<span class="hljs-property">length</span> % a.<span class="hljs-property">chunkSize</span>; )<br>        c[e++] = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span> (f = c.<span class="hljs-property">length</span>,<br>    g = <span class="hljs-string">&quot;&quot;</span>,<br>    e = <span class="hljs-number">0</span>; f &gt; e; e += a.<span class="hljs-property">chunkSize</span>) &#123;<br>        <span class="hljs-keyword">for</span> (j = <span class="hljs-keyword">new</span> <span class="hljs-title class_">BigInt</span>,<br>        h = <span class="hljs-number">0</span>,<br>        i = e; i &lt; e + a.<span class="hljs-property">chunkSize</span>; ++h)<br>            j.<span class="hljs-property">digits</span>[h] = c[i++],<br>            j.<span class="hljs-property">digits</span>[h] += c[i++] &lt;&lt; <span class="hljs-number">8</span>;<br>        k = a.<span class="hljs-property">barrett</span>.<span class="hljs-title function_">powMod</span>(j, a.<span class="hljs-property">e</span>),<br>        l = <span class="hljs-number">16</span> == a.<span class="hljs-property">radix</span> ? <span class="hljs-title function_">biToHex</span>(k) : <span class="hljs-title function_">biToString</span>(k, a.<span class="hljs-property">radix</span>),<br>        g += l + <span class="hljs-string">&quot; &quot;</span><br>    &#125;<br>    <span class="hljs-keyword">return</span> g.<span class="hljs-title function_">substring</span>(<span class="hljs-number">0</span>, g.<span class="hljs-property">length</span> - <span class="hljs-number">1</span>)<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">decryptedString</span>(<span class="hljs-params">a, b</span>) &#123;<br>    <span class="hljs-keyword">var</span> e, f, g, h, c = b.<span class="hljs-title function_">split</span>(<span class="hljs-string">&quot; &quot;</span>), d = <span class="hljs-string">&quot;&quot;</span>;<br>    <span class="hljs-keyword">for</span> (e = <span class="hljs-number">0</span>; e &lt; c.<span class="hljs-property">length</span>; ++e)<br>        <span class="hljs-keyword">for</span> (h = <span class="hljs-number">16</span> == a.<span class="hljs-property">radix</span> ? <span class="hljs-title function_">biFromHex</span>(c[e]) : <span class="hljs-title function_">biFromString</span>(c[e], a.<span class="hljs-property">radix</span>),<br>        g = a.<span class="hljs-property">barrett</span>.<span class="hljs-title function_">powMod</span>(h, a.<span class="hljs-property">d</span>),<br>        f = <span class="hljs-number">0</span>; f &lt;= <span class="hljs-title function_">biHighIndex</span>(g); ++f)<br>            d += <span class="hljs-title class_">String</span>.<span class="hljs-title function_">fromCharCode</span>(<span class="hljs-number">255</span> &amp; g.<span class="hljs-property">digits</span>[f], g.<span class="hljs-property">digits</span>[f] &gt;&gt; <span class="hljs-number">8</span>);<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span> == d.<span class="hljs-title function_">charCodeAt</span>(d.<span class="hljs-property">length</span> - <span class="hljs-number">1</span>) &amp;&amp; (d = d.<span class="hljs-title function_">substring</span>(<span class="hljs-number">0</span>, d.<span class="hljs-property">length</span> - <span class="hljs-number">1</span>)),<br>    d<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">setMaxDigits</span>(<span class="hljs-params">a</span>) &#123;<br>    maxDigits = a,<br>    <span class="hljs-variable constant_">ZERO_ARRAY</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Array</span>(maxDigits);<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> b = <span class="hljs-number">0</span>; b &lt; <span class="hljs-variable constant_">ZERO_ARRAY</span>.<span class="hljs-property">length</span>; b++)<br>        <span class="hljs-variable constant_">ZERO_ARRAY</span>[b] = <span class="hljs-number">0</span>;<br>    bigZero = <span class="hljs-keyword">new</span> <span class="hljs-title class_">BigInt</span>,<br>    bigOne = <span class="hljs-keyword">new</span> <span class="hljs-title class_">BigInt</span>,<br>    bigOne.<span class="hljs-property">digits</span>[<span class="hljs-number">0</span>] = <span class="hljs-number">1</span><br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">BigInt</span>(<span class="hljs-params">a</span>) &#123;<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">digits</span> = <span class="hljs-string">&quot;boolean&quot;</span> == <span class="hljs-keyword">typeof</span> a &amp;&amp; <span class="hljs-number">1</span> == a ? <span class="hljs-literal">null</span> : <span class="hljs-variable constant_">ZERO_ARRAY</span>.<span class="hljs-title function_">slice</span>(<span class="hljs-number">0</span>),<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">isNeg</span> = !<span class="hljs-number">1</span><br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">biFromDecimal</span>(<span class="hljs-params">a</span>) &#123;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> d, e, f, b = <span class="hljs-string">&quot;-&quot;</span> == a.<span class="hljs-title function_">charAt</span>(<span class="hljs-number">0</span>), c = b ? <span class="hljs-number">1</span> : <span class="hljs-number">0</span>; c &lt; a.<span class="hljs-property">length</span> &amp;&amp; <span class="hljs-string">&quot;0&quot;</span> == a.<span class="hljs-title function_">charAt</span>(c); )<br>        ++c;<br>    <span class="hljs-keyword">if</span> (c == a.<span class="hljs-property">length</span>)<br>        d = <span class="hljs-keyword">new</span> <span class="hljs-title class_">BigInt</span>;<br>    <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-keyword">for</span> (e = a.<span class="hljs-property">length</span> - c,<br>        f = e % dpl10,<br>        <span class="hljs-number">0</span> == f &amp;&amp; (f = dpl10),<br>        d = <span class="hljs-title function_">biFromNumber</span>(<span class="hljs-title class_">Number</span>(a.<span class="hljs-title function_">substr</span>(c, f))),<br>        c += f; c &lt; a.<span class="hljs-property">length</span>; )<br>            d = <span class="hljs-title function_">biAdd</span>(<span class="hljs-title function_">biMultiply</span>(d, lr10), <span class="hljs-title function_">biFromNumber</span>(<span class="hljs-title class_">Number</span>(a.<span class="hljs-title function_">substr</span>(c, dpl10)))),<br>            c += dpl10;<br>        d.<span class="hljs-property">isNeg</span> = b<br>    &#125;<br>    <span class="hljs-keyword">return</span> d<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">biCopy</span>(<span class="hljs-params">a</span>) &#123;<br>    <span class="hljs-keyword">var</span> b = <span class="hljs-keyword">new</span> <span class="hljs-title class_">BigInt</span>(!<span class="hljs-number">0</span>);<br>    <span class="hljs-keyword">return</span> b.<span class="hljs-property">digits</span> = a.<span class="hljs-property">digits</span>.<span class="hljs-title function_">slice</span>(<span class="hljs-number">0</span>),<br>    b.<span class="hljs-property">isNeg</span> = a.<span class="hljs-property">isNeg</span>,<br>    b<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">biFromNumber</span>(<span class="hljs-params">a</span>) &#123;<br>    <span class="hljs-keyword">var</span> c, b = <span class="hljs-keyword">new</span> <span class="hljs-title class_">BigInt</span>;<br>    <span class="hljs-keyword">for</span> (b.<span class="hljs-property">isNeg</span> = <span class="hljs-number">0</span> &gt; a,<br>    a = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">abs</span>(a),<br>    c = <span class="hljs-number">0</span>; a &gt; <span class="hljs-number">0</span>; )<br>        b.<span class="hljs-property">digits</span>[c++] = a &amp; maxDigitVal,<br>        a &gt;&gt;= biRadixBits;<br>    <span class="hljs-keyword">return</span> b<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">reverseStr</span>(<span class="hljs-params">a</span>) &#123;<br>    <span class="hljs-keyword">var</span> c, b = <span class="hljs-string">&quot;&quot;</span>;<br>    <span class="hljs-keyword">for</span> (c = a.<span class="hljs-property">length</span> - <span class="hljs-number">1</span>; c &gt; -<span class="hljs-number">1</span>; --c)<br>        b += a.<span class="hljs-title function_">charAt</span>(c);<br>    <span class="hljs-keyword">return</span> b<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">biToString</span>(<span class="hljs-params">a, b</span>) &#123;<br>    <span class="hljs-keyword">var</span> d, e, c = <span class="hljs-keyword">new</span> <span class="hljs-title class_">BigInt</span>;<br>    <span class="hljs-keyword">for</span> (c.<span class="hljs-property">digits</span>[<span class="hljs-number">0</span>] = b,<br>    d = <span class="hljs-title function_">biDivideModulo</span>(a, c),<br>    e = hexatrigesimalToChar[d[<span class="hljs-number">1</span>].<span class="hljs-property">digits</span>[<span class="hljs-number">0</span>]]; <span class="hljs-number">1</span> == <span class="hljs-title function_">biCompare</span>(d[<span class="hljs-number">0</span>], bigZero); )<br>        d = <span class="hljs-title function_">biDivideModulo</span>(d[<span class="hljs-number">0</span>], c),<br>        digit = d[<span class="hljs-number">1</span>].<span class="hljs-property">digits</span>[<span class="hljs-number">0</span>],<br>        e += hexatrigesimalToChar[d[<span class="hljs-number">1</span>].<span class="hljs-property">digits</span>[<span class="hljs-number">0</span>]];<br>    <span class="hljs-keyword">return</span> (a.<span class="hljs-property">isNeg</span> ? <span class="hljs-string">&quot;-&quot;</span> : <span class="hljs-string">&quot;&quot;</span>) + <span class="hljs-title function_">reverseStr</span>(e)<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">biToDecimal</span>(<span class="hljs-params">a</span>) &#123;<br>    <span class="hljs-keyword">var</span> c, d, b = <span class="hljs-keyword">new</span> <span class="hljs-title class_">BigInt</span>;<br>    <span class="hljs-keyword">for</span> (b.<span class="hljs-property">digits</span>[<span class="hljs-number">0</span>] = <span class="hljs-number">10</span>,<br>    c = <span class="hljs-title function_">biDivideModulo</span>(a, b),<br>    d = <span class="hljs-title class_">String</span>(c[<span class="hljs-number">1</span>].<span class="hljs-property">digits</span>[<span class="hljs-number">0</span>]); <span class="hljs-number">1</span> == <span class="hljs-title function_">biCompare</span>(c[<span class="hljs-number">0</span>], bigZero); )<br>        c = <span class="hljs-title function_">biDivideModulo</span>(c[<span class="hljs-number">0</span>], b),<br>        d += <span class="hljs-title class_">String</span>(c[<span class="hljs-number">1</span>].<span class="hljs-property">digits</span>[<span class="hljs-number">0</span>]);<br>    <span class="hljs-keyword">return</span> (a.<span class="hljs-property">isNeg</span> ? <span class="hljs-string">&quot;-&quot;</span> : <span class="hljs-string">&quot;&quot;</span>) + <span class="hljs-title function_">reverseStr</span>(d)<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">digitToHex</span>(<span class="hljs-params">a</span>) &#123;<br>    <span class="hljs-keyword">var</span> b = <span class="hljs-number">15</span><br>      , c = <span class="hljs-string">&quot;&quot;</span>;<br>    <span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; <span class="hljs-number">4</span> &gt; i; ++i)<br>        c += hexToChar[a &amp; b],<br>        a &gt;&gt;&gt;= <span class="hljs-number">4</span>;<br>    <span class="hljs-keyword">return</span> <span class="hljs-title function_">reverseStr</span>(c)<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">biToHex</span>(<span class="hljs-params">a</span>) &#123;<br>    <span class="hljs-keyword">var</span> d, b = <span class="hljs-string">&quot;&quot;</span>;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-title function_">biHighIndex</span>(a),<br>    d = <span class="hljs-title function_">biHighIndex</span>(a); d &gt; -<span class="hljs-number">1</span>; --d)<br>        b += <span class="hljs-title function_">digitToHex</span>(a.<span class="hljs-property">digits</span>[d]);<br>    <span class="hljs-keyword">return</span> b<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">charToHex</span>(<span class="hljs-params">a</span>) &#123;<br>    <span class="hljs-keyword">var</span> h, b = <span class="hljs-number">48</span>, c = b + <span class="hljs-number">9</span>, d = <span class="hljs-number">97</span>, e = d + <span class="hljs-number">25</span>, f = <span class="hljs-number">65</span>, g = <span class="hljs-number">90</span>;<br>    <span class="hljs-keyword">return</span> h = a &gt;= b &amp;&amp; c &gt;= a ? a - b : a &gt;= f &amp;&amp; g &gt;= a ? <span class="hljs-number">10</span> + a - f : a &gt;= d &amp;&amp; e &gt;= a ? <span class="hljs-number">10</span> + a - d : <span class="hljs-number">0</span><br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">hexToDigit</span>(<span class="hljs-params">a</span>) &#123;<br>    <span class="hljs-keyword">var</span> d, b = <span class="hljs-number">0</span>, c = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">min</span>(a.<span class="hljs-property">length</span>, <span class="hljs-number">4</span>);<br>    <span class="hljs-keyword">for</span> (d = <span class="hljs-number">0</span>; c &gt; d; ++d)<br>        b &lt;&lt;= <span class="hljs-number">4</span>,<br>        b |= <span class="hljs-title function_">charToHex</span>(a.<span class="hljs-title function_">charCodeAt</span>(d));<br>    <span class="hljs-keyword">return</span> b<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">biFromHex</span>(<span class="hljs-params">a</span>) &#123;<br>    <span class="hljs-keyword">var</span> d, e, b = <span class="hljs-keyword">new</span> <span class="hljs-title class_">BigInt</span>, c = a.<span class="hljs-property">length</span>;<br>    <span class="hljs-keyword">for</span> (d = c,<br>    e = <span class="hljs-number">0</span>; d &gt; <span class="hljs-number">0</span>; d -= <span class="hljs-number">4</span>,<br>    ++e)<br>        b.<span class="hljs-property">digits</span>[e] = <span class="hljs-title function_">hexToDigit</span>(a.<span class="hljs-title function_">substr</span>(<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">max</span>(d - <span class="hljs-number">4</span>, <span class="hljs-number">0</span>), <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">min</span>(d, <span class="hljs-number">4</span>)));<br>    <span class="hljs-keyword">return</span> b<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">biFromString</span>(<span class="hljs-params">a, b</span>) &#123;<br>    <span class="hljs-keyword">var</span> g, h, i, j, c = <span class="hljs-string">&quot;-&quot;</span> == a.<span class="hljs-title function_">charAt</span>(<span class="hljs-number">0</span>), d = c ? <span class="hljs-number">1</span> : <span class="hljs-number">0</span>, e = <span class="hljs-keyword">new</span> <span class="hljs-title class_">BigInt</span>, f = <span class="hljs-keyword">new</span> <span class="hljs-title class_">BigInt</span>;<br>    <span class="hljs-keyword">for</span> (f.<span class="hljs-property">digits</span>[<span class="hljs-number">0</span>] = <span class="hljs-number">1</span>,<br>    g = a.<span class="hljs-property">length</span> - <span class="hljs-number">1</span>; g &gt;= d; g--)<br>        h = a.<span class="hljs-title function_">charCodeAt</span>(g),<br>        i = <span class="hljs-title function_">charToHex</span>(h),<br>        j = <span class="hljs-title function_">biMultiplyDigit</span>(f, i),<br>        e = <span class="hljs-title function_">biAdd</span>(e, j),<br>        f = <span class="hljs-title function_">biMultiplyDigit</span>(f, b);<br>    <span class="hljs-keyword">return</span> e.<span class="hljs-property">isNeg</span> = c,<br>    e<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">biDump</span>(<span class="hljs-params">a</span>) &#123;<br>    <span class="hljs-keyword">return</span> (a.<span class="hljs-property">isNeg</span> ? <span class="hljs-string">&quot;-&quot;</span> : <span class="hljs-string">&quot;&quot;</span>) + a.<span class="hljs-property">digits</span>.<span class="hljs-title function_">join</span>(<span class="hljs-string">&quot; &quot;</span>)<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">biAdd</span>(<span class="hljs-params">a, b</span>) &#123;<br>    <span class="hljs-keyword">var</span> c, d, e, f;<br>    <span class="hljs-keyword">if</span> (a.<span class="hljs-property">isNeg</span> != b.<span class="hljs-property">isNeg</span>)<br>        b.<span class="hljs-property">isNeg</span> = !b.<span class="hljs-property">isNeg</span>,<br>        c = <span class="hljs-title function_">biSubtract</span>(a, b),<br>        b.<span class="hljs-property">isNeg</span> = !b.<span class="hljs-property">isNeg</span>;<br>    <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-keyword">for</span> (c = <span class="hljs-keyword">new</span> <span class="hljs-title class_">BigInt</span>,<br>        d = <span class="hljs-number">0</span>,<br>        f = <span class="hljs-number">0</span>; f &lt; a.<span class="hljs-property">digits</span>.<span class="hljs-property">length</span>; ++f)<br>            e = a.<span class="hljs-property">digits</span>[f] + b.<span class="hljs-property">digits</span>[f] + d,<br>            c.<span class="hljs-property">digits</span>[f] = <span class="hljs-number">65535</span> &amp; e,<br>            d = <span class="hljs-title class_">Number</span>(e &gt;= biRadix);<br>        c.<span class="hljs-property">isNeg</span> = a.<span class="hljs-property">isNeg</span><br>    &#125;<br>    <span class="hljs-keyword">return</span> c<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">biSubtract</span>(<span class="hljs-params">a, b</span>) &#123;<br>    <span class="hljs-keyword">var</span> c, d, e, f;<br>    <span class="hljs-keyword">if</span> (a.<span class="hljs-property">isNeg</span> != b.<span class="hljs-property">isNeg</span>)<br>        b.<span class="hljs-property">isNeg</span> = !b.<span class="hljs-property">isNeg</span>,<br>        c = <span class="hljs-title function_">biAdd</span>(a, b),<br>        b.<span class="hljs-property">isNeg</span> = !b.<span class="hljs-property">isNeg</span>;<br>    <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-keyword">for</span> (c = <span class="hljs-keyword">new</span> <span class="hljs-title class_">BigInt</span>,<br>        e = <span class="hljs-number">0</span>,<br>        f = <span class="hljs-number">0</span>; f &lt; a.<span class="hljs-property">digits</span>.<span class="hljs-property">length</span>; ++f)<br>            d = a.<span class="hljs-property">digits</span>[f] - b.<span class="hljs-property">digits</span>[f] + e,<br>            c.<span class="hljs-property">digits</span>[f] = <span class="hljs-number">65535</span> &amp; d,<br>            c.<span class="hljs-property">digits</span>[f] &lt; <span class="hljs-number">0</span> &amp;&amp; (c.<span class="hljs-property">digits</span>[f] += biRadix),<br>            e = <span class="hljs-number">0</span> - <span class="hljs-title class_">Number</span>(<span class="hljs-number">0</span> &gt; d);<br>        <span class="hljs-keyword">if</span> (-<span class="hljs-number">1</span> == e) &#123;<br>            <span class="hljs-keyword">for</span> (e = <span class="hljs-number">0</span>,<br>            f = <span class="hljs-number">0</span>; f &lt; a.<span class="hljs-property">digits</span>.<span class="hljs-property">length</span>; ++f)<br>                d = <span class="hljs-number">0</span> - c.<span class="hljs-property">digits</span>[f] + e,<br>                c.<span class="hljs-property">digits</span>[f] = <span class="hljs-number">65535</span> &amp; d,<br>                c.<span class="hljs-property">digits</span>[f] &lt; <span class="hljs-number">0</span> &amp;&amp; (c.<span class="hljs-property">digits</span>[f] += biRadix),<br>                e = <span class="hljs-number">0</span> - <span class="hljs-title class_">Number</span>(<span class="hljs-number">0</span> &gt; d);<br>            c.<span class="hljs-property">isNeg</span> = !a.<span class="hljs-property">isNeg</span><br>        &#125; <span class="hljs-keyword">else</span><br>            c.<span class="hljs-property">isNeg</span> = a.<span class="hljs-property">isNeg</span><br>    &#125;<br>    <span class="hljs-keyword">return</span> c<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">biHighIndex</span>(<span class="hljs-params">a</span>) &#123;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> b = a.<span class="hljs-property">digits</span>.<span class="hljs-property">length</span> - <span class="hljs-number">1</span>; b &gt; <span class="hljs-number">0</span> &amp;&amp; <span class="hljs-number">0</span> == a.<span class="hljs-property">digits</span>[b]; )<br>        --b;<br>    <span class="hljs-keyword">return</span> b<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">biNumBits</span>(<span class="hljs-params">a</span>) &#123;<br>    <span class="hljs-keyword">var</span> e, b = <span class="hljs-title function_">biHighIndex</span>(a), c = a.<span class="hljs-property">digits</span>[b], d = (b + <span class="hljs-number">1</span>) * bitsPerDigit;<br>    <span class="hljs-keyword">for</span> (e = d; e &gt; d - bitsPerDigit &amp;&amp; <span class="hljs-number">0</span> == (<span class="hljs-number">32768</span> &amp; c); --e)<br>        c &lt;&lt;= <span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">return</span> e<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">biMultiply</span>(<span class="hljs-params">a, b</span>) &#123;<br>    <span class="hljs-keyword">var</span> d, h, i, k, c = <span class="hljs-keyword">new</span> <span class="hljs-title class_">BigInt</span>, e = <span class="hljs-title function_">biHighIndex</span>(a), f = <span class="hljs-title function_">biHighIndex</span>(b);<br>    <span class="hljs-keyword">for</span> (k = <span class="hljs-number">0</span>; f &gt;= k; ++k) &#123;<br>        <span class="hljs-keyword">for</span> (d = <span class="hljs-number">0</span>,<br>        i = k,<br>        j = <span class="hljs-number">0</span>; e &gt;= j; ++j,<br>        ++i)<br>            h = c.<span class="hljs-property">digits</span>[i] + a.<span class="hljs-property">digits</span>[j] * b.<span class="hljs-property">digits</span>[k] + d,<br>            c.<span class="hljs-property">digits</span>[i] = h &amp; maxDigitVal,<br>            d = h &gt;&gt;&gt; biRadixBits;<br>        c.<span class="hljs-property">digits</span>[k + e + <span class="hljs-number">1</span>] = d<br>    &#125;<br>    <span class="hljs-keyword">return</span> c.<span class="hljs-property">isNeg</span> = a.<span class="hljs-property">isNeg</span> != b.<span class="hljs-property">isNeg</span>,<br>    c<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">biMultiplyDigit</span>(<span class="hljs-params">a, b</span>) &#123;<br>    <span class="hljs-keyword">var</span> c, d, e, f;<br>    <span class="hljs-keyword">for</span> (result = <span class="hljs-keyword">new</span> <span class="hljs-title class_">BigInt</span>,<br>    c = <span class="hljs-title function_">biHighIndex</span>(a),<br>    d = <span class="hljs-number">0</span>,<br>    f = <span class="hljs-number">0</span>; c &gt;= f; ++f)<br>        e = result.<span class="hljs-property">digits</span>[f] + a.<span class="hljs-property">digits</span>[f] * b + d,<br>        result.<span class="hljs-property">digits</span>[f] = e &amp; maxDigitVal,<br>        d = e &gt;&gt;&gt; biRadixBits;<br>    <span class="hljs-keyword">return</span> result.<span class="hljs-property">digits</span>[<span class="hljs-number">1</span> + c] = d,<br>    result<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">arrayCopy</span>(<span class="hljs-params">a, b, c, d, e</span>) &#123;<br>    <span class="hljs-keyword">var</span> g, h, f = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">min</span>(b + e, a.<span class="hljs-property">length</span>);<br>    <span class="hljs-keyword">for</span> (g = b,<br>    h = d; f &gt; g; ++g,<br>    ++h)<br>        c[h] = a[g]<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">biShiftLeft</span>(<span class="hljs-params">a, b</span>) &#123;<br>    <span class="hljs-keyword">var</span> e, f, g, h, c = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>(b / bitsPerDigit), d = <span class="hljs-keyword">new</span> <span class="hljs-title class_">BigInt</span>;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-title function_">arrayCopy</span>(a.<span class="hljs-property">digits</span>, <span class="hljs-number">0</span>, d.<span class="hljs-property">digits</span>, c, d.<span class="hljs-property">digits</span>.<span class="hljs-property">length</span> - c),<br>    e = b % bitsPerDigit,<br>    f = bitsPerDigit - e,<br>    g = d.<span class="hljs-property">digits</span>.<span class="hljs-property">length</span> - <span class="hljs-number">1</span>,<br>    h = g - <span class="hljs-number">1</span>; g &gt; <span class="hljs-number">0</span>; --g,<br>    --h)<br>        d.<span class="hljs-property">digits</span>[g] = d.<span class="hljs-property">digits</span>[g] &lt;&lt; e &amp; maxDigitVal | (d.<span class="hljs-property">digits</span>[h] &amp; highBitMasks[e]) &gt;&gt;&gt; f;<br>    <span class="hljs-keyword">return</span> d.<span class="hljs-property">digits</span>[<span class="hljs-number">0</span>] = d.<span class="hljs-property">digits</span>[g] &lt;&lt; e &amp; maxDigitVal,<br>    d.<span class="hljs-property">isNeg</span> = a.<span class="hljs-property">isNeg</span>,<br>    d<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">biShiftRight</span>(<span class="hljs-params">a, b</span>) &#123;<br>    <span class="hljs-keyword">var</span> e, f, g, h, c = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>(b / bitsPerDigit), d = <span class="hljs-keyword">new</span> <span class="hljs-title class_">BigInt</span>;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-title function_">arrayCopy</span>(a.<span class="hljs-property">digits</span>, c, d.<span class="hljs-property">digits</span>, <span class="hljs-number">0</span>, a.<span class="hljs-property">digits</span>.<span class="hljs-property">length</span> - c),<br>    e = b % bitsPerDigit,<br>    f = bitsPerDigit - e,<br>    g = <span class="hljs-number">0</span>,<br>    h = g + <span class="hljs-number">1</span>; g &lt; d.<span class="hljs-property">digits</span>.<span class="hljs-property">length</span> - <span class="hljs-number">1</span>; ++g,<br>    ++h)<br>        d.<span class="hljs-property">digits</span>[g] = d.<span class="hljs-property">digits</span>[g] &gt;&gt;&gt; e | (d.<span class="hljs-property">digits</span>[h] &amp; lowBitMasks[e]) &lt;&lt; f;<br>    <span class="hljs-keyword">return</span> d.<span class="hljs-property">digits</span>[d.<span class="hljs-property">digits</span>.<span class="hljs-property">length</span> - <span class="hljs-number">1</span>] &gt;&gt;&gt;= e,<br>    d.<span class="hljs-property">isNeg</span> = a.<span class="hljs-property">isNeg</span>,<br>    d<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">biMultiplyByRadixPower</span>(<span class="hljs-params">a, b</span>) &#123;<br>    <span class="hljs-keyword">var</span> c = <span class="hljs-keyword">new</span> <span class="hljs-title class_">BigInt</span>;<br>    <span class="hljs-keyword">return</span> <span class="hljs-title function_">arrayCopy</span>(a.<span class="hljs-property">digits</span>, <span class="hljs-number">0</span>, c.<span class="hljs-property">digits</span>, b, c.<span class="hljs-property">digits</span>.<span class="hljs-property">length</span> - b),<br>    c<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">biDivideByRadixPower</span>(<span class="hljs-params">a, b</span>) &#123;<br>    <span class="hljs-keyword">var</span> c = <span class="hljs-keyword">new</span> <span class="hljs-title class_">BigInt</span>;<br>    <span class="hljs-keyword">return</span> <span class="hljs-title function_">arrayCopy</span>(a.<span class="hljs-property">digits</span>, b, c.<span class="hljs-property">digits</span>, <span class="hljs-number">0</span>, c.<span class="hljs-property">digits</span>.<span class="hljs-property">length</span> - b),<br>    c<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">biModuloByRadixPower</span>(<span class="hljs-params">a, b</span>) &#123;<br>    <span class="hljs-keyword">var</span> c = <span class="hljs-keyword">new</span> <span class="hljs-title class_">BigInt</span>;<br>    <span class="hljs-keyword">return</span> <span class="hljs-title function_">arrayCopy</span>(a.<span class="hljs-property">digits</span>, <span class="hljs-number">0</span>, c.<span class="hljs-property">digits</span>, <span class="hljs-number">0</span>, b),<br>    c<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">biCompare</span>(<span class="hljs-params">a, b</span>) &#123;<br>    <span class="hljs-keyword">if</span> (a.<span class="hljs-property">isNeg</span> != b.<span class="hljs-property">isNeg</span>)<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">1</span> - <span class="hljs-number">2</span> * <span class="hljs-title class_">Number</span>(a.<span class="hljs-property">isNeg</span>);<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> c = a.<span class="hljs-property">digits</span>.<span class="hljs-property">length</span> - <span class="hljs-number">1</span>; c &gt;= <span class="hljs-number">0</span>; --c)<br>        <span class="hljs-keyword">if</span> (a.<span class="hljs-property">digits</span>[c] != b.<span class="hljs-property">digits</span>[c])<br>            <span class="hljs-keyword">return</span> a.<span class="hljs-property">isNeg</span> ? <span class="hljs-number">1</span> - <span class="hljs-number">2</span> * <span class="hljs-title class_">Number</span>(a.<span class="hljs-property">digits</span>[c] &gt; b.<span class="hljs-property">digits</span>[c]) : <span class="hljs-number">1</span> - <span class="hljs-number">2</span> * <span class="hljs-title class_">Number</span>(a.<span class="hljs-property">digits</span>[c] &lt; b.<span class="hljs-property">digits</span>[c]);<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span><br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">biDivideModulo</span>(<span class="hljs-params">a, b</span>) &#123;<br>    <span class="hljs-keyword">var</span> f, g, h, i, j, k, l, m, n, o, p, q, r, s, c = <span class="hljs-title function_">biNumBits</span>(a), d = <span class="hljs-title function_">biNumBits</span>(b), e = b.<span class="hljs-property">isNeg</span>;<br>    <span class="hljs-keyword">if</span> (d &gt; c)<br>        <span class="hljs-keyword">return</span> a.<span class="hljs-property">isNeg</span> ? (f = <span class="hljs-title function_">biCopy</span>(bigOne),<br>        f.<span class="hljs-property">isNeg</span> = !b.<span class="hljs-property">isNeg</span>,<br>        a.<span class="hljs-property">isNeg</span> = !<span class="hljs-number">1</span>,<br>        b.<span class="hljs-property">isNeg</span> = !<span class="hljs-number">1</span>,<br>        g = <span class="hljs-title function_">biSubtract</span>(b, a),<br>        a.<span class="hljs-property">isNeg</span> = !<span class="hljs-number">0</span>,<br>        b.<span class="hljs-property">isNeg</span> = e) : (f = <span class="hljs-keyword">new</span> <span class="hljs-title class_">BigInt</span>,<br>        g = <span class="hljs-title function_">biCopy</span>(a)),<br>        <span class="hljs-keyword">new</span> <span class="hljs-title class_">Array</span>(f,g);<br>    <span class="hljs-keyword">for</span> (f = <span class="hljs-keyword">new</span> <span class="hljs-title class_">BigInt</span>,<br>    g = a,<br>    h = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">ceil</span>(d / bitsPerDigit) - <span class="hljs-number">1</span>,<br>    i = <span class="hljs-number">0</span>; b.<span class="hljs-property">digits</span>[h] &lt; biHalfRadix; )<br>        b = <span class="hljs-title function_">biShiftLeft</span>(b, <span class="hljs-number">1</span>),<br>        ++i,<br>        ++d,<br>        h = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">ceil</span>(d / bitsPerDigit) - <span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">for</span> (g = <span class="hljs-title function_">biShiftLeft</span>(g, i),<br>    c += i,<br>    j = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">ceil</span>(c / bitsPerDigit) - <span class="hljs-number">1</span>,<br>    k = <span class="hljs-title function_">biMultiplyByRadixPower</span>(b, j - h); -<span class="hljs-number">1</span> != <span class="hljs-title function_">biCompare</span>(g, k); )<br>        ++f.<span class="hljs-property">digits</span>[j - h],<br>        g = <span class="hljs-title function_">biSubtract</span>(g, k);<br>    <span class="hljs-keyword">for</span> (l = j; l &gt; h; --l) &#123;<br>        <span class="hljs-keyword">for</span> (m = l &gt;= g.<span class="hljs-property">digits</span>.<span class="hljs-property">length</span> ? <span class="hljs-number">0</span> : g.<span class="hljs-property">digits</span>[l],<br>        n = l - <span class="hljs-number">1</span> &gt;= g.<span class="hljs-property">digits</span>.<span class="hljs-property">length</span> ? <span class="hljs-number">0</span> : g.<span class="hljs-property">digits</span>[l - <span class="hljs-number">1</span>],<br>        o = l - <span class="hljs-number">2</span> &gt;= g.<span class="hljs-property">digits</span>.<span class="hljs-property">length</span> ? <span class="hljs-number">0</span> : g.<span class="hljs-property">digits</span>[l - <span class="hljs-number">2</span>],<br>        p = h &gt;= b.<span class="hljs-property">digits</span>.<span class="hljs-property">length</span> ? <span class="hljs-number">0</span> : b.<span class="hljs-property">digits</span>[h],<br>        q = h - <span class="hljs-number">1</span> &gt;= b.<span class="hljs-property">digits</span>.<span class="hljs-property">length</span> ? <span class="hljs-number">0</span> : b.<span class="hljs-property">digits</span>[h - <span class="hljs-number">1</span>],<br>        f.<span class="hljs-property">digits</span>[l - h - <span class="hljs-number">1</span>] = m == p ? maxDigitVal : <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>((m * biRadix + n) / p),<br>        r = f.<span class="hljs-property">digits</span>[l - h - <span class="hljs-number">1</span>] * (p * biRadix + q),<br>        s = m * biRadixSquared + (n * biRadix + o); r &gt; s; )<br>            --f.<span class="hljs-property">digits</span>[l - h - <span class="hljs-number">1</span>],<br>            r = f.<span class="hljs-property">digits</span>[l - h - <span class="hljs-number">1</span>] * (p * biRadix | q),<br>            s = m * biRadix * biRadix + (n * biRadix + o);<br>        k = <span class="hljs-title function_">biMultiplyByRadixPower</span>(b, l - h - <span class="hljs-number">1</span>),<br>        g = <span class="hljs-title function_">biSubtract</span>(g, <span class="hljs-title function_">biMultiplyDigit</span>(k, f.<span class="hljs-property">digits</span>[l - h - <span class="hljs-number">1</span>])),<br>        g.<span class="hljs-property">isNeg</span> &amp;&amp; (g = <span class="hljs-title function_">biAdd</span>(g, k),<br>        --f.<span class="hljs-property">digits</span>[l - h - <span class="hljs-number">1</span>])<br>    &#125;<br>    <span class="hljs-keyword">return</span> g = <span class="hljs-title function_">biShiftRight</span>(g, i),<br>    f.<span class="hljs-property">isNeg</span> = a.<span class="hljs-property">isNeg</span> != e,<br>    a.<span class="hljs-property">isNeg</span> &amp;&amp; (f = e ? <span class="hljs-title function_">biAdd</span>(f, bigOne) : <span class="hljs-title function_">biSubtract</span>(f, bigOne),<br>    b = <span class="hljs-title function_">biShiftRight</span>(b, i),<br>    g = <span class="hljs-title function_">biSubtract</span>(b, g)),<br>    <span class="hljs-number">0</span> == g.<span class="hljs-property">digits</span>[<span class="hljs-number">0</span>] &amp;&amp; <span class="hljs-number">0</span> == <span class="hljs-title function_">biHighIndex</span>(g) &amp;&amp; (g.<span class="hljs-property">isNeg</span> = !<span class="hljs-number">1</span>),<br>    <span class="hljs-keyword">new</span> <span class="hljs-title class_">Array</span>(f,g)<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">biDivide</span>(<span class="hljs-params">a, b</span>) &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-title function_">biDivideModulo</span>(a, b)[<span class="hljs-number">0</span>]<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">biModulo</span>(<span class="hljs-params">a, b</span>) &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-title function_">biDivideModulo</span>(a, b)[<span class="hljs-number">1</span>]<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">biMultiplyMod</span>(<span class="hljs-params">a, b, c</span>) &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-title function_">biModulo</span>(<span class="hljs-title function_">biMultiply</span>(a, b), c)<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">biPow</span>(<span class="hljs-params">a, b</span>) &#123;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> c = bigOne, d = a; ; ) &#123;<br>        <span class="hljs-keyword">if</span> (<span class="hljs-number">0</span> != (<span class="hljs-number">1</span> &amp; b) &amp;&amp; (c = <span class="hljs-title function_">biMultiply</span>(c, d)),<br>        b &gt;&gt;= <span class="hljs-number">1</span>,<br>        <span class="hljs-number">0</span> == b)<br>            <span class="hljs-keyword">break</span>;<br>        d = <span class="hljs-title function_">biMultiply</span>(d, d)<br>    &#125;<br>    <span class="hljs-keyword">return</span> c<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">biPowMod</span>(<span class="hljs-params">a, b, c</span>) &#123;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> d = bigOne, e = a, f = b; ; ) &#123;<br>        <span class="hljs-keyword">if</span> (<span class="hljs-number">0</span> != (<span class="hljs-number">1</span> &amp; f.<span class="hljs-property">digits</span>[<span class="hljs-number">0</span>]) &amp;&amp; (d = <span class="hljs-title function_">biMultiplyMod</span>(d, e, c)),<br>        f = <span class="hljs-title function_">biShiftRight</span>(f, <span class="hljs-number">1</span>),<br>        <span class="hljs-number">0</span> == f.<span class="hljs-property">digits</span>[<span class="hljs-number">0</span>] &amp;&amp; <span class="hljs-number">0</span> == <span class="hljs-title function_">biHighIndex</span>(f))<br>            <span class="hljs-keyword">break</span>;<br>        e = <span class="hljs-title function_">biMultiplyMod</span>(e, e, c)<br>    &#125;<br>    <span class="hljs-keyword">return</span> d<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">BarrettMu</span>(<span class="hljs-params">a</span>) &#123;<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">modulus</span> = <span class="hljs-title function_">biCopy</span>(a),<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">k</span> = <span class="hljs-title function_">biHighIndex</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">modulus</span>) + <span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">var</span> b = <span class="hljs-keyword">new</span> <span class="hljs-title class_">BigInt</span>;<br>    b.<span class="hljs-property">digits</span>[<span class="hljs-number">2</span> * <span class="hljs-variable language_">this</span>.<span class="hljs-property">k</span>] = <span class="hljs-number">1</span>,<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">mu</span> = <span class="hljs-title function_">biDivide</span>(b, <span class="hljs-variable language_">this</span>.<span class="hljs-property">modulus</span>),<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">bkplus1</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">BigInt</span>,<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">bkplus1</span>.<span class="hljs-property">digits</span>[<span class="hljs-variable language_">this</span>.<span class="hljs-property">k</span> + <span class="hljs-number">1</span>] = <span class="hljs-number">1</span>,<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">modulo</span> = <span class="hljs-title class_">BarrettMu</span>_modulo,<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">multiplyMod</span> = <span class="hljs-title class_">BarrettMu</span>_multiplyMod,<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">powMod</span> = <span class="hljs-title class_">BarrettMu</span>_powMod<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">BarrettMu_modulo</span>(<span class="hljs-params">a</span>) &#123;<br>    <span class="hljs-keyword">var</span> i, b = <span class="hljs-title function_">biDivideByRadixPower</span>(a, <span class="hljs-variable language_">this</span>.<span class="hljs-property">k</span> - <span class="hljs-number">1</span>), c = <span class="hljs-title function_">biMultiply</span>(b, <span class="hljs-variable language_">this</span>.<span class="hljs-property">mu</span>), d = <span class="hljs-title function_">biDivideByRadixPower</span>(c, <span class="hljs-variable language_">this</span>.<span class="hljs-property">k</span> + <span class="hljs-number">1</span>), e = <span class="hljs-title function_">biModuloByRadixPower</span>(a, <span class="hljs-variable language_">this</span>.<span class="hljs-property">k</span> + <span class="hljs-number">1</span>), f = <span class="hljs-title function_">biMultiply</span>(d, <span class="hljs-variable language_">this</span>.<span class="hljs-property">modulus</span>), g = <span class="hljs-title function_">biModuloByRadixPower</span>(f, <span class="hljs-variable language_">this</span>.<span class="hljs-property">k</span> + <span class="hljs-number">1</span>), h = <span class="hljs-title function_">biSubtract</span>(e, g);<br>    <span class="hljs-keyword">for</span> (h.<span class="hljs-property">isNeg</span> &amp;&amp; (h = <span class="hljs-title function_">biAdd</span>(h, <span class="hljs-variable language_">this</span>.<span class="hljs-property">bkplus1</span>)),<br>    i = <span class="hljs-title function_">biCompare</span>(h, <span class="hljs-variable language_">this</span>.<span class="hljs-property">modulus</span>) &gt;= <span class="hljs-number">0</span>; i; )<br>        h = <span class="hljs-title function_">biSubtract</span>(h, <span class="hljs-variable language_">this</span>.<span class="hljs-property">modulus</span>),<br>        i = <span class="hljs-title function_">biCompare</span>(h, <span class="hljs-variable language_">this</span>.<span class="hljs-property">modulus</span>) &gt;= <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">return</span> h<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">BarrettMu_multiplyMod</span>(<span class="hljs-params">a, b</span>) &#123;<br>    <span class="hljs-keyword">var</span> c = <span class="hljs-title function_">biMultiply</span>(a, b);<br>    <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">modulo</span>(c)<br>&#125;<br><span class="hljs-comment">// &quot;&#123;&quot;s&quot;:&quot;我是&quot;,&quot;limit&quot;:&quot;8&quot;,&quot;csrf_token&quot;:&quot;&quot;&#125;&quot;</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">BarrettMu_powMod</span>(<span class="hljs-params">a, b</span>) &#123;<br>    <span class="hljs-keyword">var</span> d, e, c = <span class="hljs-keyword">new</span> <span class="hljs-title class_">BigInt</span>;<br>    <span class="hljs-keyword">for</span> (c.<span class="hljs-property">digits</span>[<span class="hljs-number">0</span>] = <span class="hljs-number">1</span>,<br>    d = a,<br>    e = b; ; ) &#123;<br>        <span class="hljs-keyword">if</span> (<span class="hljs-number">0</span> != (<span class="hljs-number">1</span> &amp; e.<span class="hljs-property">digits</span>[<span class="hljs-number">0</span>]) &amp;&amp; (c = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">multiplyMod</span>(c, d)),<br>        e = <span class="hljs-title function_">biShiftRight</span>(e, <span class="hljs-number">1</span>),<br>        <span class="hljs-number">0</span> == e.<span class="hljs-property">digits</span>[<span class="hljs-number">0</span>] &amp;&amp; <span class="hljs-number">0</span> == <span class="hljs-title function_">biHighIndex</span>(e))<br>            <span class="hljs-keyword">break</span>;<br>        d = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">multiplyMod</span>(d, d)<br>    &#125;<br>    <span class="hljs-keyword">return</span> c<br>&#125;<br><span class="hljs-keyword">var</span> maxDigits, <span class="hljs-variable constant_">ZERO_ARRAY</span>, bigZero, bigOne, dpl10, lr10, hexatrigesimalToChar, hexToChar, highBitMasks, lowBitMasks, biRadixBase = <span class="hljs-number">2</span>, biRadixBits = <span class="hljs-number">16</span>, bitsPerDigit = biRadixBits, biRadix = <span class="hljs-number">65536</span>, biHalfRadix = biRadix &gt;&gt;&gt; <span class="hljs-number">1</span>, biRadixSquared = biRadix * biRadix, maxDigitVal = biRadix - <span class="hljs-number">1</span>, maxInteger = <span class="hljs-number">9999999999999998</span>;<br><span class="hljs-title function_">setMaxDigits</span>(<span class="hljs-number">20</span>),<br>dpl10 = <span class="hljs-number">15</span>,<br>lr10 = <span class="hljs-title function_">biFromNumber</span>(<span class="hljs-number">1e15</span>),<br>hexatrigesimalToChar = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Array</span>(<span class="hljs-string">&quot;0&quot;</span>,<span class="hljs-string">&quot;1&quot;</span>,<span class="hljs-string">&quot;2&quot;</span>,<span class="hljs-string">&quot;3&quot;</span>,<span class="hljs-string">&quot;4&quot;</span>,<span class="hljs-string">&quot;5&quot;</span>,<span class="hljs-string">&quot;6&quot;</span>,<span class="hljs-string">&quot;7&quot;</span>,<span class="hljs-string">&quot;8&quot;</span>,<span class="hljs-string">&quot;9&quot;</span>,<span class="hljs-string">&quot;a&quot;</span>,<span class="hljs-string">&quot;b&quot;</span>,<span class="hljs-string">&quot;c&quot;</span>,<span class="hljs-string">&quot;d&quot;</span>,<span class="hljs-string">&quot;e&quot;</span>,<span class="hljs-string">&quot;f&quot;</span>,<span class="hljs-string">&quot;g&quot;</span>,<span class="hljs-string">&quot;h&quot;</span>,<span class="hljs-string">&quot;i&quot;</span>,<span class="hljs-string">&quot;j&quot;</span>,<span class="hljs-string">&quot;k&quot;</span>,<span class="hljs-string">&quot;l&quot;</span>,<span class="hljs-string">&quot;m&quot;</span>,<span class="hljs-string">&quot;n&quot;</span>,<span class="hljs-string">&quot;o&quot;</span>,<span class="hljs-string">&quot;p&quot;</span>,<span class="hljs-string">&quot;q&quot;</span>,<span class="hljs-string">&quot;r&quot;</span>,<span class="hljs-string">&quot;s&quot;</span>,<span class="hljs-string">&quot;t&quot;</span>,<span class="hljs-string">&quot;u&quot;</span>,<span class="hljs-string">&quot;v&quot;</span>,<span class="hljs-string">&quot;w&quot;</span>,<span class="hljs-string">&quot;x&quot;</span>,<span class="hljs-string">&quot;y&quot;</span>,<span class="hljs-string">&quot;z&quot;</span>),<br>hexToChar = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Array</span>(<span class="hljs-string">&quot;0&quot;</span>,<span class="hljs-string">&quot;1&quot;</span>,<span class="hljs-string">&quot;2&quot;</span>,<span class="hljs-string">&quot;3&quot;</span>,<span class="hljs-string">&quot;4&quot;</span>,<span class="hljs-string">&quot;5&quot;</span>,<span class="hljs-string">&quot;6&quot;</span>,<span class="hljs-string">&quot;7&quot;</span>,<span class="hljs-string">&quot;8&quot;</span>,<span class="hljs-string">&quot;9&quot;</span>,<span class="hljs-string">&quot;a&quot;</span>,<span class="hljs-string">&quot;b&quot;</span>,<span class="hljs-string">&quot;c&quot;</span>,<span class="hljs-string">&quot;d&quot;</span>,<span class="hljs-string">&quot;e&quot;</span>,<span class="hljs-string">&quot;f&quot;</span>),<br>highBitMasks = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Array</span>(<span class="hljs-number">0</span>,<span class="hljs-number">32768</span>,<span class="hljs-number">49152</span>,<span class="hljs-number">57344</span>,<span class="hljs-number">61440</span>,<span class="hljs-number">63488</span>,<span class="hljs-number">64512</span>,<span class="hljs-number">65024</span>,<span class="hljs-number">65280</span>,<span class="hljs-number">65408</span>,<span class="hljs-number">65472</span>,<span class="hljs-number">65504</span>,<span class="hljs-number">65520</span>,<span class="hljs-number">65528</span>,<span class="hljs-number">65532</span>,<span class="hljs-number">65534</span>,<span class="hljs-number">65535</span>),<br>lowBitMasks = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Array</span>(<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">3</span>,<span class="hljs-number">7</span>,<span class="hljs-number">15</span>,<span class="hljs-number">31</span>,<span class="hljs-number">63</span>,<span class="hljs-number">127</span>,<span class="hljs-number">255</span>,<span class="hljs-number">511</span>,<span class="hljs-number">1023</span>,<span class="hljs-number">2047</span>,<span class="hljs-number">4095</span>,<span class="hljs-number">8191</span>,<span class="hljs-number">16383</span>,<span class="hljs-number">32767</span>,<span class="hljs-number">65535</span>);<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">c</span>(<span class="hljs-params">a, b, c</span>) &#123;<br>    <span class="hljs-keyword">var</span> d, e;<br>    <span class="hljs-keyword">return</span> <span class="hljs-title function_">setMaxDigits</span>(<span class="hljs-number">131</span>),<br>    d = <span class="hljs-keyword">new</span> <span class="hljs-title class_">RSAKeyPair</span>(b,<span class="hljs-string">&quot;&quot;</span>,c),<br>    e = <span class="hljs-title function_">encryptedString</span>(d, a)<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">get_sign</span>(<span class="hljs-params">data</span>)&#123;<br>    <span class="hljs-keyword">var</span> h = <span class="hljs-title function_">b</span>(data,<span class="hljs-string">&quot;0CoJUm6Qyw8W8jud&quot;</span>)<br>    <span class="hljs-keyword">var</span> a = <span class="hljs-title function_">a</span>(<span class="hljs-number">16</span>)<br>    <span class="hljs-keyword">return</span> &#123;<br>        <span class="hljs-string">&quot;params&quot;</span>:<span class="hljs-title function_">b</span>(h,a),<br>        <span class="hljs-string">&quot;key&quot;</span>:<span class="hljs-title function_">c</span>(a,<span class="hljs-string">&quot;010001&quot;</span>,<span class="hljs-string">&quot;00e0b509f6259df8642dbc35662901477df22677ec152b5ff68ace615bb7b725152b3ab17a876aea8a5aa76d2e417629ec4ee341f56135fccf695280104e0312ecbda92557c93870114af6c9d05c4f7f0c3685b7a46bee255932575cce10b424d813cfe4875d3e82047b97ddef52741d546b8e289dc6935b3ece0462db0a22b8e7&quot;</span>)<br>    &#125;<br>&#125;<br><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-title function_">get_sign</span>(<span class="hljs-string">&#x27;&#123;&quot;s&quot;:&quot;w&quot;,&quot;limit&quot;:&quot;8&quot;,&quot;csrf_token&quot;:&quot;&quot;&#125;&#x27;</span>))<br></code></pre></td></tr></table></figure><hr><h2 id="2024-09-08更新">2024.09.08更新</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> <span class="hljs-title class_">CryptoJS</span> = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;crypto-js&quot;</span>);<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">RSAKeyPair</span>(<span class="hljs-params">a, b, c</span>) &#123;<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">e</span> = <span class="hljs-title function_">biFromHex</span>(a),<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">d</span> = <span class="hljs-title function_">biFromHex</span>(b),<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">m</span> = <span class="hljs-title function_">biFromHex</span>(c),<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">chunkSize</span> = <span class="hljs-number">2</span> * <span class="hljs-title function_">biHighIndex</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">m</span>),<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">radix</span> = <span class="hljs-number">16</span>,<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">barrett</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">BarrettMu</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">m</span>)<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">twoDigit</span>(<span class="hljs-params">a</span>) &#123;<br>    <span class="hljs-keyword">return</span> (<span class="hljs-number">10</span> &gt; a ? <span class="hljs-string">&quot;0&quot;</span> : <span class="hljs-string">&quot;&quot;</span>) + <span class="hljs-title class_">String</span>(a)<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">encryptedString</span>(<span class="hljs-params">a, b</span>) &#123;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> f, g, h, i, j, k, l, c = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Array</span>, d = b.<span class="hljs-property">length</span>, e = <span class="hljs-number">0</span>; d &gt; e; )<br>        c[e] = b.<span class="hljs-title function_">charCodeAt</span>(e),<br>        e++;<br>    <span class="hljs-keyword">for</span> (; <span class="hljs-number">0</span> != c.<span class="hljs-property">length</span> % a.<span class="hljs-property">chunkSize</span>; )<br>        c[e++] = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span> (f = c.<span class="hljs-property">length</span>,<br>    g = <span class="hljs-string">&quot;&quot;</span>,<br>    e = <span class="hljs-number">0</span>; f &gt; e; e += a.<span class="hljs-property">chunkSize</span>) &#123;<br>        <span class="hljs-keyword">for</span> (j = <span class="hljs-keyword">new</span> <span class="hljs-title class_">BigInt</span>,<br>        h = <span class="hljs-number">0</span>,<br>        i = e; i &lt; e + a.<span class="hljs-property">chunkSize</span>; ++h)<br>            j.<span class="hljs-property">digits</span>[h] = c[i++],<br>            j.<span class="hljs-property">digits</span>[h] += c[i++] &lt;&lt; <span class="hljs-number">8</span>;<br>        k = a.<span class="hljs-property">barrett</span>.<span class="hljs-title function_">powMod</span>(j, a.<span class="hljs-property">e</span>),<br>        l = <span class="hljs-number">16</span> == a.<span class="hljs-property">radix</span> ? <span class="hljs-title function_">biToHex</span>(k) : <span class="hljs-title function_">biToString</span>(k, a.<span class="hljs-property">radix</span>),<br>        g += l + <span class="hljs-string">&quot; &quot;</span><br>    &#125;<br>    <span class="hljs-keyword">return</span> g.<span class="hljs-title function_">substring</span>(<span class="hljs-number">0</span>, g.<span class="hljs-property">length</span> - <span class="hljs-number">1</span>)<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">decryptedString</span>(<span class="hljs-params">a, b</span>) &#123;<br>    <span class="hljs-keyword">var</span> e, f, g, h, c = b.<span class="hljs-title function_">split</span>(<span class="hljs-string">&quot; &quot;</span>), d = <span class="hljs-string">&quot;&quot;</span>;<br>    <span class="hljs-keyword">for</span> (e = <span class="hljs-number">0</span>; e &lt; c.<span class="hljs-property">length</span>; ++e)<br>        <span class="hljs-keyword">for</span> (h = <span class="hljs-number">16</span> == a.<span class="hljs-property">radix</span> ? <span class="hljs-title function_">biFromHex</span>(c[e]) : <span class="hljs-title function_">biFromString</span>(c[e], a.<span class="hljs-property">radix</span>),<br>        g = a.<span class="hljs-property">barrett</span>.<span class="hljs-title function_">powMod</span>(h, a.<span class="hljs-property">d</span>),<br>        f = <span class="hljs-number">0</span>; f &lt;= <span class="hljs-title function_">biHighIndex</span>(g); ++f)<br>            d += <span class="hljs-title class_">String</span>.<span class="hljs-title function_">fromCharCode</span>(<span class="hljs-number">255</span> &amp; g.<span class="hljs-property">digits</span>[f], g.<span class="hljs-property">digits</span>[f] &gt;&gt; <span class="hljs-number">8</span>);<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span> == d.<span class="hljs-title function_">charCodeAt</span>(d.<span class="hljs-property">length</span> - <span class="hljs-number">1</span>) &amp;&amp; (d = d.<span class="hljs-title function_">substring</span>(<span class="hljs-number">0</span>, d.<span class="hljs-property">length</span> - <span class="hljs-number">1</span>)),<br>    d<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">setMaxDigits</span>(<span class="hljs-params">a</span>) &#123;<br>    maxDigits = a,<br>    <span class="hljs-variable constant_">ZERO_ARRAY</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Array</span>(maxDigits);<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> b = <span class="hljs-number">0</span>; b &lt; <span class="hljs-variable constant_">ZERO_ARRAY</span>.<span class="hljs-property">length</span>; b++)<br>        <span class="hljs-variable constant_">ZERO_ARRAY</span>[b] = <span class="hljs-number">0</span>;<br>    bigZero = <span class="hljs-keyword">new</span> <span class="hljs-title class_">BigInt</span>,<br>    bigOne = <span class="hljs-keyword">new</span> <span class="hljs-title class_">BigInt</span>,<br>    bigOne.<span class="hljs-property">digits</span>[<span class="hljs-number">0</span>] = <span class="hljs-number">1</span><br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">BigInt</span>(<span class="hljs-params">a</span>) &#123;<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">digits</span> = <span class="hljs-string">&quot;boolean&quot;</span> == <span class="hljs-keyword">typeof</span> a &amp;&amp; <span class="hljs-number">1</span> == a ? <span class="hljs-literal">null</span> : <span class="hljs-variable constant_">ZERO_ARRAY</span>.<span class="hljs-title function_">slice</span>(<span class="hljs-number">0</span>),<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">isNeg</span> = !<span class="hljs-number">1</span><br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">biFromDecimal</span>(<span class="hljs-params">a</span>) &#123;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> d, e, f, b = <span class="hljs-string">&quot;-&quot;</span> == a.<span class="hljs-title function_">charAt</span>(<span class="hljs-number">0</span>), c = b ? <span class="hljs-number">1</span> : <span class="hljs-number">0</span>; c &lt; a.<span class="hljs-property">length</span> &amp;&amp; <span class="hljs-string">&quot;0&quot;</span> == a.<span class="hljs-title function_">charAt</span>(c); )<br>        ++c;<br>    <span class="hljs-keyword">if</span> (c == a.<span class="hljs-property">length</span>)<br>        d = <span class="hljs-keyword">new</span> <span class="hljs-title class_">BigInt</span>;<br>    <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-keyword">for</span> (e = a.<span class="hljs-property">length</span> - c,<br>        f = e % dpl10,<br>        <span class="hljs-number">0</span> == f &amp;&amp; (f = dpl10),<br>        d = <span class="hljs-title function_">biFromNumber</span>(<span class="hljs-title class_">Number</span>(a.<span class="hljs-title function_">substr</span>(c, f))),<br>        c += f; c &lt; a.<span class="hljs-property">length</span>; )<br>            d = <span class="hljs-title function_">biAdd</span>(<span class="hljs-title function_">biMultiply</span>(d, lr10), <span class="hljs-title function_">biFromNumber</span>(<span class="hljs-title class_">Number</span>(a.<span class="hljs-title function_">substr</span>(c, dpl10)))),<br>            c += dpl10;<br>        d.<span class="hljs-property">isNeg</span> = b<br>    &#125;<br>    <span class="hljs-keyword">return</span> d<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">biCopy</span>(<span class="hljs-params">a</span>) &#123;<br>    <span class="hljs-keyword">var</span> b = <span class="hljs-keyword">new</span> <span class="hljs-title class_">BigInt</span>(!<span class="hljs-number">0</span>);<br>    <span class="hljs-keyword">return</span> b.<span class="hljs-property">digits</span> = a.<span class="hljs-property">digits</span>.<span class="hljs-title function_">slice</span>(<span class="hljs-number">0</span>),<br>    b.<span class="hljs-property">isNeg</span> = a.<span class="hljs-property">isNeg</span>,<br>    b<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">biFromNumber</span>(<span class="hljs-params">a</span>) &#123;<br>    <span class="hljs-keyword">var</span> c, b = <span class="hljs-keyword">new</span> <span class="hljs-title class_">BigInt</span>;<br>    <span class="hljs-keyword">for</span> (b.<span class="hljs-property">isNeg</span> = <span class="hljs-number">0</span> &gt; a,<br>    a = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">abs</span>(a),<br>    c = <span class="hljs-number">0</span>; a &gt; <span class="hljs-number">0</span>; )<br>        b.<span class="hljs-property">digits</span>[c++] = a &amp; maxDigitVal,<br>        a &gt;&gt;= biRadixBits;<br>    <span class="hljs-keyword">return</span> b<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">reverseStr</span>(<span class="hljs-params">a</span>) &#123;<br>    <span class="hljs-keyword">var</span> c, b = <span class="hljs-string">&quot;&quot;</span>;<br>    <span class="hljs-keyword">for</span> (c = a.<span class="hljs-property">length</span> - <span class="hljs-number">1</span>; c &gt; -<span class="hljs-number">1</span>; --c)<br>        b += a.<span class="hljs-title function_">charAt</span>(c);<br>    <span class="hljs-keyword">return</span> b<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">biToString</span>(<span class="hljs-params">a, b</span>) &#123;<br>    <span class="hljs-keyword">var</span> d, e, c = <span class="hljs-keyword">new</span> <span class="hljs-title class_">BigInt</span>;<br>    <span class="hljs-keyword">for</span> (c.<span class="hljs-property">digits</span>[<span class="hljs-number">0</span>] = b,<br>    d = <span class="hljs-title function_">biDivideModulo</span>(a, c),<br>    e = hexatrigesimalToChar[d[<span class="hljs-number">1</span>].<span class="hljs-property">digits</span>[<span class="hljs-number">0</span>]]; <span class="hljs-number">1</span> == <span class="hljs-title function_">biCompare</span>(d[<span class="hljs-number">0</span>], bigZero); )<br>        d = <span class="hljs-title function_">biDivideModulo</span>(d[<span class="hljs-number">0</span>], c),<br>        digit = d[<span class="hljs-number">1</span>].<span class="hljs-property">digits</span>[<span class="hljs-number">0</span>],<br>        e += hexatrigesimalToChar[d[<span class="hljs-number">1</span>].<span class="hljs-property">digits</span>[<span class="hljs-number">0</span>]];<br>    <span class="hljs-keyword">return</span> (a.<span class="hljs-property">isNeg</span> ? <span class="hljs-string">&quot;-&quot;</span> : <span class="hljs-string">&quot;&quot;</span>) + <span class="hljs-title function_">reverseStr</span>(e)<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">biToDecimal</span>(<span class="hljs-params">a</span>) &#123;<br>    <span class="hljs-keyword">var</span> c, d, b = <span class="hljs-keyword">new</span> <span class="hljs-title class_">BigInt</span>;<br>    <span class="hljs-keyword">for</span> (b.<span class="hljs-property">digits</span>[<span class="hljs-number">0</span>] = <span class="hljs-number">10</span>,<br>    c = <span class="hljs-title function_">biDivideModulo</span>(a, b),<br>    d = <span class="hljs-title class_">String</span>(c[<span class="hljs-number">1</span>].<span class="hljs-property">digits</span>[<span class="hljs-number">0</span>]); <span class="hljs-number">1</span> == <span class="hljs-title function_">biCompare</span>(c[<span class="hljs-number">0</span>], bigZero); )<br>        c = <span class="hljs-title function_">biDivideModulo</span>(c[<span class="hljs-number">0</span>], b),<br>        d += <span class="hljs-title class_">String</span>(c[<span class="hljs-number">1</span>].<span class="hljs-property">digits</span>[<span class="hljs-number">0</span>]);<br>    <span class="hljs-keyword">return</span> (a.<span class="hljs-property">isNeg</span> ? <span class="hljs-string">&quot;-&quot;</span> : <span class="hljs-string">&quot;&quot;</span>) + <span class="hljs-title function_">reverseStr</span>(d)<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">digitToHex</span>(<span class="hljs-params">a</span>) &#123;<br>    <span class="hljs-keyword">var</span> b = <span class="hljs-number">15</span><br>      , c = <span class="hljs-string">&quot;&quot;</span>;<br>    <span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; <span class="hljs-number">4</span> &gt; i; ++i)<br>        c += hexToChar[a &amp; b],<br>        a &gt;&gt;&gt;= <span class="hljs-number">4</span>;<br>    <span class="hljs-keyword">return</span> <span class="hljs-title function_">reverseStr</span>(c)<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">biToHex</span>(<span class="hljs-params">a</span>) &#123;<br>    <span class="hljs-keyword">var</span> d, b = <span class="hljs-string">&quot;&quot;</span>;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-title function_">biHighIndex</span>(a),<br>    d = <span class="hljs-title function_">biHighIndex</span>(a); d &gt; -<span class="hljs-number">1</span>; --d)<br>        b += <span class="hljs-title function_">digitToHex</span>(a.<span class="hljs-property">digits</span>[d]);<br>    <span class="hljs-keyword">return</span> b<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">charToHex</span>(<span class="hljs-params">a</span>) &#123;<br>    <span class="hljs-keyword">var</span> h, b = <span class="hljs-number">48</span>, c = b + <span class="hljs-number">9</span>, d = <span class="hljs-number">97</span>, e = d + <span class="hljs-number">25</span>, f = <span class="hljs-number">65</span>, g = <span class="hljs-number">90</span>;<br>    <span class="hljs-keyword">return</span> h = a &gt;= b &amp;&amp; c &gt;= a ? a - b : a &gt;= f &amp;&amp; g &gt;= a ? <span class="hljs-number">10</span> + a - f : a &gt;= d &amp;&amp; e &gt;= a ? <span class="hljs-number">10</span> + a - d : <span class="hljs-number">0</span><br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">hexToDigit</span>(<span class="hljs-params">a</span>) &#123;<br>    <span class="hljs-keyword">var</span> d, b = <span class="hljs-number">0</span>, c = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">min</span>(a.<span class="hljs-property">length</span>, <span class="hljs-number">4</span>);<br>    <span class="hljs-keyword">for</span> (d = <span class="hljs-number">0</span>; c &gt; d; ++d)<br>        b &lt;&lt;= <span class="hljs-number">4</span>,<br>        b |= <span class="hljs-title function_">charToHex</span>(a.<span class="hljs-title function_">charCodeAt</span>(d));<br>    <span class="hljs-keyword">return</span> b<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">biFromHex</span>(<span class="hljs-params">a</span>) &#123;<br>    <span class="hljs-keyword">var</span> d, e, b = <span class="hljs-keyword">new</span> <span class="hljs-title class_">BigInt</span>, c = a.<span class="hljs-property">length</span>;<br>    <span class="hljs-keyword">for</span> (d = c,<br>    e = <span class="hljs-number">0</span>; d &gt; <span class="hljs-number">0</span>; d -= <span class="hljs-number">4</span>,<br>    ++e)<br>        b.<span class="hljs-property">digits</span>[e] = <span class="hljs-title function_">hexToDigit</span>(a.<span class="hljs-title function_">substr</span>(<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">max</span>(d - <span class="hljs-number">4</span>, <span class="hljs-number">0</span>), <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">min</span>(d, <span class="hljs-number">4</span>)));<br>    <span class="hljs-keyword">return</span> b<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">biFromString</span>(<span class="hljs-params">a, b</span>) &#123;<br>    <span class="hljs-keyword">var</span> g, h, i, j, c = <span class="hljs-string">&quot;-&quot;</span> == a.<span class="hljs-title function_">charAt</span>(<span class="hljs-number">0</span>), d = c ? <span class="hljs-number">1</span> : <span class="hljs-number">0</span>, e = <span class="hljs-keyword">new</span> <span class="hljs-title class_">BigInt</span>, f = <span class="hljs-keyword">new</span> <span class="hljs-title class_">BigInt</span>;<br>    <span class="hljs-keyword">for</span> (f.<span class="hljs-property">digits</span>[<span class="hljs-number">0</span>] = <span class="hljs-number">1</span>,<br>    g = a.<span class="hljs-property">length</span> - <span class="hljs-number">1</span>; g &gt;= d; g--)<br>        h = a.<span class="hljs-title function_">charCodeAt</span>(g),<br>        i = <span class="hljs-title function_">charToHex</span>(h),<br>        j = <span class="hljs-title function_">biMultiplyDigit</span>(f, i),<br>        e = <span class="hljs-title function_">biAdd</span>(e, j),<br>        f = <span class="hljs-title function_">biMultiplyDigit</span>(f, b);<br>    <span class="hljs-keyword">return</span> e.<span class="hljs-property">isNeg</span> = c,<br>    e<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">biDump</span>(<span class="hljs-params">a</span>) &#123;<br>    <span class="hljs-keyword">return</span> (a.<span class="hljs-property">isNeg</span> ? <span class="hljs-string">&quot;-&quot;</span> : <span class="hljs-string">&quot;&quot;</span>) + a.<span class="hljs-property">digits</span>.<span class="hljs-title function_">join</span>(<span class="hljs-string">&quot; &quot;</span>)<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">biAdd</span>(<span class="hljs-params">a, b</span>) &#123;<br>    <span class="hljs-keyword">var</span> c, d, e, f;<br>    <span class="hljs-keyword">if</span> (a.<span class="hljs-property">isNeg</span> != b.<span class="hljs-property">isNeg</span>)<br>        b.<span class="hljs-property">isNeg</span> = !b.<span class="hljs-property">isNeg</span>,<br>        c = <span class="hljs-title function_">biSubtract</span>(a, b),<br>        b.<span class="hljs-property">isNeg</span> = !b.<span class="hljs-property">isNeg</span>;<br>    <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-keyword">for</span> (c = <span class="hljs-keyword">new</span> <span class="hljs-title class_">BigInt</span>,<br>        d = <span class="hljs-number">0</span>,<br>        f = <span class="hljs-number">0</span>; f &lt; a.<span class="hljs-property">digits</span>.<span class="hljs-property">length</span>; ++f)<br>            e = a.<span class="hljs-property">digits</span>[f] + b.<span class="hljs-property">digits</span>[f] + d,<br>            c.<span class="hljs-property">digits</span>[f] = <span class="hljs-number">65535</span> &amp; e,<br>            d = <span class="hljs-title class_">Number</span>(e &gt;= biRadix);<br>        c.<span class="hljs-property">isNeg</span> = a.<span class="hljs-property">isNeg</span><br>    &#125;<br>    <span class="hljs-keyword">return</span> c<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">biSubtract</span>(<span class="hljs-params">a, b</span>) &#123;<br>    <span class="hljs-keyword">var</span> c, d, e, f;<br>    <span class="hljs-keyword">if</span> (a.<span class="hljs-property">isNeg</span> != b.<span class="hljs-property">isNeg</span>)<br>        b.<span class="hljs-property">isNeg</span> = !b.<span class="hljs-property">isNeg</span>,<br>        c = <span class="hljs-title function_">biAdd</span>(a, b),<br>        b.<span class="hljs-property">isNeg</span> = !b.<span class="hljs-property">isNeg</span>;<br>    <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-keyword">for</span> (c = <span class="hljs-keyword">new</span> <span class="hljs-title class_">BigInt</span>,<br>        e = <span class="hljs-number">0</span>,<br>        f = <span class="hljs-number">0</span>; f &lt; a.<span class="hljs-property">digits</span>.<span class="hljs-property">length</span>; ++f)<br>            d = a.<span class="hljs-property">digits</span>[f] - b.<span class="hljs-property">digits</span>[f] + e,<br>            c.<span class="hljs-property">digits</span>[f] = <span class="hljs-number">65535</span> &amp; d,<br>            c.<span class="hljs-property">digits</span>[f] &lt; <span class="hljs-number">0</span> &amp;&amp; (c.<span class="hljs-property">digits</span>[f] += biRadix),<br>            e = <span class="hljs-number">0</span> - <span class="hljs-title class_">Number</span>(<span class="hljs-number">0</span> &gt; d);<br>        <span class="hljs-keyword">if</span> (-<span class="hljs-number">1</span> == e) &#123;<br>            <span class="hljs-keyword">for</span> (e = <span class="hljs-number">0</span>,<br>            f = <span class="hljs-number">0</span>; f &lt; a.<span class="hljs-property">digits</span>.<span class="hljs-property">length</span>; ++f)<br>                d = <span class="hljs-number">0</span> - c.<span class="hljs-property">digits</span>[f] + e,<br>                c.<span class="hljs-property">digits</span>[f] = <span class="hljs-number">65535</span> &amp; d,<br>                c.<span class="hljs-property">digits</span>[f] &lt; <span class="hljs-number">0</span> &amp;&amp; (c.<span class="hljs-property">digits</span>[f] += biRadix),<br>                e = <span class="hljs-number">0</span> - <span class="hljs-title class_">Number</span>(<span class="hljs-number">0</span> &gt; d);<br>            c.<span class="hljs-property">isNeg</span> = !a.<span class="hljs-property">isNeg</span><br>        &#125; <span class="hljs-keyword">else</span><br>            c.<span class="hljs-property">isNeg</span> = a.<span class="hljs-property">isNeg</span><br>    &#125;<br>    <span class="hljs-keyword">return</span> c<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">biHighIndex</span>(<span class="hljs-params">a</span>) &#123;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> b = a.<span class="hljs-property">digits</span>.<span class="hljs-property">length</span> - <span class="hljs-number">1</span>; b &gt; <span class="hljs-number">0</span> &amp;&amp; <span class="hljs-number">0</span> == a.<span class="hljs-property">digits</span>[b]; )<br>        --b;<br>    <span class="hljs-keyword">return</span> b<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">biNumBits</span>(<span class="hljs-params">a</span>) &#123;<br>    <span class="hljs-keyword">var</span> e, b = <span class="hljs-title function_">biHighIndex</span>(a), c = a.<span class="hljs-property">digits</span>[b], d = (b + <span class="hljs-number">1</span>) * bitsPerDigit;<br>    <span class="hljs-keyword">for</span> (e = d; e &gt; d - bitsPerDigit &amp;&amp; <span class="hljs-number">0</span> == (<span class="hljs-number">32768</span> &amp; c); --e)<br>        c &lt;&lt;= <span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">return</span> e<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">biMultiply</span>(<span class="hljs-params">a, b</span>) &#123;<br>    <span class="hljs-keyword">var</span> d, h, i, k, c = <span class="hljs-keyword">new</span> <span class="hljs-title class_">BigInt</span>, e = <span class="hljs-title function_">biHighIndex</span>(a), f = <span class="hljs-title function_">biHighIndex</span>(b);<br>    <span class="hljs-keyword">for</span> (k = <span class="hljs-number">0</span>; f &gt;= k; ++k) &#123;<br>        <span class="hljs-keyword">for</span> (d = <span class="hljs-number">0</span>,<br>        i = k,<br>        j = <span class="hljs-number">0</span>; e &gt;= j; ++j,<br>        ++i)<br>            h = c.<span class="hljs-property">digits</span>[i] + a.<span class="hljs-property">digits</span>[j] * b.<span class="hljs-property">digits</span>[k] + d,<br>            c.<span class="hljs-property">digits</span>[i] = h &amp; maxDigitVal,<br>            d = h &gt;&gt;&gt; biRadixBits;<br>        c.<span class="hljs-property">digits</span>[k + e + <span class="hljs-number">1</span>] = d<br>    &#125;<br>    <span class="hljs-keyword">return</span> c.<span class="hljs-property">isNeg</span> = a.<span class="hljs-property">isNeg</span> != b.<span class="hljs-property">isNeg</span>,<br>    c<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">biMultiplyDigit</span>(<span class="hljs-params">a, b</span>) &#123;<br>    <span class="hljs-keyword">var</span> c, d, e, f;<br>    <span class="hljs-keyword">for</span> (result = <span class="hljs-keyword">new</span> <span class="hljs-title class_">BigInt</span>,<br>    c = <span class="hljs-title function_">biHighIndex</span>(a),<br>    d = <span class="hljs-number">0</span>,<br>    f = <span class="hljs-number">0</span>; c &gt;= f; ++f)<br>        e = result.<span class="hljs-property">digits</span>[f] + a.<span class="hljs-property">digits</span>[f] * b + d,<br>        result.<span class="hljs-property">digits</span>[f] = e &amp; maxDigitVal,<br>        d = e &gt;&gt;&gt; biRadixBits;<br>    <span class="hljs-keyword">return</span> result.<span class="hljs-property">digits</span>[<span class="hljs-number">1</span> + c] = d,<br>    result<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">arrayCopy</span>(<span class="hljs-params">a, b, c, d, e</span>) &#123;<br>    <span class="hljs-keyword">var</span> g, h, f = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">min</span>(b + e, a.<span class="hljs-property">length</span>);<br>    <span class="hljs-keyword">for</span> (g = b,<br>    h = d; f &gt; g; ++g,<br>    ++h)<br>        c[h] = a[g]<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">biShiftLeft</span>(<span class="hljs-params">a, b</span>) &#123;<br>    <span class="hljs-keyword">var</span> e, f, g, h, c = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>(b / bitsPerDigit), d = <span class="hljs-keyword">new</span> <span class="hljs-title class_">BigInt</span>;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-title function_">arrayCopy</span>(a.<span class="hljs-property">digits</span>, <span class="hljs-number">0</span>, d.<span class="hljs-property">digits</span>, c, d.<span class="hljs-property">digits</span>.<span class="hljs-property">length</span> - c),<br>    e = b % bitsPerDigit,<br>    f = bitsPerDigit - e,<br>    g = d.<span class="hljs-property">digits</span>.<span class="hljs-property">length</span> - <span class="hljs-number">1</span>,<br>    h = g - <span class="hljs-number">1</span>; g &gt; <span class="hljs-number">0</span>; --g,<br>    --h)<br>        d.<span class="hljs-property">digits</span>[g] = d.<span class="hljs-property">digits</span>[g] &lt;&lt; e &amp; maxDigitVal | (d.<span class="hljs-property">digits</span>[h] &amp; highBitMasks[e]) &gt;&gt;&gt; f;<br>    <span class="hljs-keyword">return</span> d.<span class="hljs-property">digits</span>[<span class="hljs-number">0</span>] = d.<span class="hljs-property">digits</span>[g] &lt;&lt; e &amp; maxDigitVal,<br>    d.<span class="hljs-property">isNeg</span> = a.<span class="hljs-property">isNeg</span>,<br>    d<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">biShiftRight</span>(<span class="hljs-params">a, b</span>) &#123;<br>    <span class="hljs-keyword">var</span> e, f, g, h, c = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>(b / bitsPerDigit), d = <span class="hljs-keyword">new</span> <span class="hljs-title class_">BigInt</span>;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-title function_">arrayCopy</span>(a.<span class="hljs-property">digits</span>, c, d.<span class="hljs-property">digits</span>, <span class="hljs-number">0</span>, a.<span class="hljs-property">digits</span>.<span class="hljs-property">length</span> - c),<br>    e = b % bitsPerDigit,<br>    f = bitsPerDigit - e,<br>    g = <span class="hljs-number">0</span>,<br>    h = g + <span class="hljs-number">1</span>; g &lt; d.<span class="hljs-property">digits</span>.<span class="hljs-property">length</span> - <span class="hljs-number">1</span>; ++g,<br>    ++h)<br>        d.<span class="hljs-property">digits</span>[g] = d.<span class="hljs-property">digits</span>[g] &gt;&gt;&gt; e | (d.<span class="hljs-property">digits</span>[h] &amp; lowBitMasks[e]) &lt;&lt; f;<br>    <span class="hljs-keyword">return</span> d.<span class="hljs-property">digits</span>[d.<span class="hljs-property">digits</span>.<span class="hljs-property">length</span> - <span class="hljs-number">1</span>] &gt;&gt;&gt;= e,<br>    d.<span class="hljs-property">isNeg</span> = a.<span class="hljs-property">isNeg</span>,<br>    d<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">biMultiplyByRadixPower</span>(<span class="hljs-params">a, b</span>) &#123;<br>    <span class="hljs-keyword">var</span> c = <span class="hljs-keyword">new</span> <span class="hljs-title class_">BigInt</span>;<br>    <span class="hljs-keyword">return</span> <span class="hljs-title function_">arrayCopy</span>(a.<span class="hljs-property">digits</span>, <span class="hljs-number">0</span>, c.<span class="hljs-property">digits</span>, b, c.<span class="hljs-property">digits</span>.<span class="hljs-property">length</span> - b),<br>    c<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">biDivideByRadixPower</span>(<span class="hljs-params">a, b</span>) &#123;<br>    <span class="hljs-keyword">var</span> c = <span class="hljs-keyword">new</span> <span class="hljs-title class_">BigInt</span>;<br>    <span class="hljs-keyword">return</span> <span class="hljs-title function_">arrayCopy</span>(a.<span class="hljs-property">digits</span>, b, c.<span class="hljs-property">digits</span>, <span class="hljs-number">0</span>, c.<span class="hljs-property">digits</span>.<span class="hljs-property">length</span> - b),<br>    c<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">biModuloByRadixPower</span>(<span class="hljs-params">a, b</span>) &#123;<br>    <span class="hljs-keyword">var</span> c = <span class="hljs-keyword">new</span> <span class="hljs-title class_">BigInt</span>;<br>    <span class="hljs-keyword">return</span> <span class="hljs-title function_">arrayCopy</span>(a.<span class="hljs-property">digits</span>, <span class="hljs-number">0</span>, c.<span class="hljs-property">digits</span>, <span class="hljs-number">0</span>, b),<br>    c<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">biCompare</span>(<span class="hljs-params">a, b</span>) &#123;<br>    <span class="hljs-keyword">if</span> (a.<span class="hljs-property">isNeg</span> != b.<span class="hljs-property">isNeg</span>)<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">1</span> - <span class="hljs-number">2</span> * <span class="hljs-title class_">Number</span>(a.<span class="hljs-property">isNeg</span>);<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> c = a.<span class="hljs-property">digits</span>.<span class="hljs-property">length</span> - <span class="hljs-number">1</span>; c &gt;= <span class="hljs-number">0</span>; --c)<br>        <span class="hljs-keyword">if</span> (a.<span class="hljs-property">digits</span>[c] != b.<span class="hljs-property">digits</span>[c])<br>            <span class="hljs-keyword">return</span> a.<span class="hljs-property">isNeg</span> ? <span class="hljs-number">1</span> - <span class="hljs-number">2</span> * <span class="hljs-title class_">Number</span>(a.<span class="hljs-property">digits</span>[c] &gt; b.<span class="hljs-property">digits</span>[c]) : <span class="hljs-number">1</span> - <span class="hljs-number">2</span> * <span class="hljs-title class_">Number</span>(a.<span class="hljs-property">digits</span>[c] &lt; b.<span class="hljs-property">digits</span>[c]);<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span><br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">biDivideModulo</span>(<span class="hljs-params">a, b</span>) &#123;<br>    <span class="hljs-keyword">var</span> f, g, h, i, j, k, l, m, n, o, p, q, r, s, c = <span class="hljs-title function_">biNumBits</span>(a), d = <span class="hljs-title function_">biNumBits</span>(b), e = b.<span class="hljs-property">isNeg</span>;<br>    <span class="hljs-keyword">if</span> (d &gt; c)<br>        <span class="hljs-keyword">return</span> a.<span class="hljs-property">isNeg</span> ? (f = <span class="hljs-title function_">biCopy</span>(bigOne),<br>        f.<span class="hljs-property">isNeg</span> = !b.<span class="hljs-property">isNeg</span>,<br>        a.<span class="hljs-property">isNeg</span> = !<span class="hljs-number">1</span>,<br>        b.<span class="hljs-property">isNeg</span> = !<span class="hljs-number">1</span>,<br>        g = <span class="hljs-title function_">biSubtract</span>(b, a),<br>        a.<span class="hljs-property">isNeg</span> = !<span class="hljs-number">0</span>,<br>        b.<span class="hljs-property">isNeg</span> = e) : (f = <span class="hljs-keyword">new</span> <span class="hljs-title class_">BigInt</span>,<br>        g = <span class="hljs-title function_">biCopy</span>(a)),<br>        <span class="hljs-keyword">new</span> <span class="hljs-title class_">Array</span>(f,g);<br>    <span class="hljs-keyword">for</span> (f = <span class="hljs-keyword">new</span> <span class="hljs-title class_">BigInt</span>,<br>    g = a,<br>    h = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">ceil</span>(d / bitsPerDigit) - <span class="hljs-number">1</span>,<br>    i = <span class="hljs-number">0</span>; b.<span class="hljs-property">digits</span>[h] &lt; biHalfRadix; )<br>        b = <span class="hljs-title function_">biShiftLeft</span>(b, <span class="hljs-number">1</span>),<br>        ++i,<br>        ++d,<br>        h = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">ceil</span>(d / bitsPerDigit) - <span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">for</span> (g = <span class="hljs-title function_">biShiftLeft</span>(g, i),<br>    c += i,<br>    j = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">ceil</span>(c / bitsPerDigit) - <span class="hljs-number">1</span>,<br>    k = <span class="hljs-title function_">biMultiplyByRadixPower</span>(b, j - h); -<span class="hljs-number">1</span> != <span class="hljs-title function_">biCompare</span>(g, k); )<br>        ++f.<span class="hljs-property">digits</span>[j - h],<br>        g = <span class="hljs-title function_">biSubtract</span>(g, k);<br>    <span class="hljs-keyword">for</span> (l = j; l &gt; h; --l) &#123;<br>        <span class="hljs-keyword">for</span> (m = l &gt;= g.<span class="hljs-property">digits</span>.<span class="hljs-property">length</span> ? <span class="hljs-number">0</span> : g.<span class="hljs-property">digits</span>[l],<br>        n = l - <span class="hljs-number">1</span> &gt;= g.<span class="hljs-property">digits</span>.<span class="hljs-property">length</span> ? <span class="hljs-number">0</span> : g.<span class="hljs-property">digits</span>[l - <span class="hljs-number">1</span>],<br>        o = l - <span class="hljs-number">2</span> &gt;= g.<span class="hljs-property">digits</span>.<span class="hljs-property">length</span> ? <span class="hljs-number">0</span> : g.<span class="hljs-property">digits</span>[l - <span class="hljs-number">2</span>],<br>        p = h &gt;= b.<span class="hljs-property">digits</span>.<span class="hljs-property">length</span> ? <span class="hljs-number">0</span> : b.<span class="hljs-property">digits</span>[h],<br>        q = h - <span class="hljs-number">1</span> &gt;= b.<span class="hljs-property">digits</span>.<span class="hljs-property">length</span> ? <span class="hljs-number">0</span> : b.<span class="hljs-property">digits</span>[h - <span class="hljs-number">1</span>],<br>        f.<span class="hljs-property">digits</span>[l - h - <span class="hljs-number">1</span>] = m == p ? maxDigitVal : <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>((m * biRadix + n) / p),<br>        r = f.<span class="hljs-property">digits</span>[l - h - <span class="hljs-number">1</span>] * (p * biRadix + q),<br>        s = m * biRadixSquared + (n * biRadix + o); r &gt; s; )<br>            --f.<span class="hljs-property">digits</span>[l - h - <span class="hljs-number">1</span>],<br>            r = f.<span class="hljs-property">digits</span>[l - h - <span class="hljs-number">1</span>] * (p * biRadix | q),<br>            s = m * biRadix * biRadix + (n * biRadix + o);<br>        k = <span class="hljs-title function_">biMultiplyByRadixPower</span>(b, l - h - <span class="hljs-number">1</span>),<br>        g = <span class="hljs-title function_">biSubtract</span>(g, <span class="hljs-title function_">biMultiplyDigit</span>(k, f.<span class="hljs-property">digits</span>[l - h - <span class="hljs-number">1</span>])),<br>        g.<span class="hljs-property">isNeg</span> &amp;&amp; (g = <span class="hljs-title function_">biAdd</span>(g, k),<br>        --f.<span class="hljs-property">digits</span>[l - h - <span class="hljs-number">1</span>])<br>    &#125;<br>    <span class="hljs-keyword">return</span> g = <span class="hljs-title function_">biShiftRight</span>(g, i),<br>    f.<span class="hljs-property">isNeg</span> = a.<span class="hljs-property">isNeg</span> != e,<br>    a.<span class="hljs-property">isNeg</span> &amp;&amp; (f = e ? <span class="hljs-title function_">biAdd</span>(f, bigOne) : <span class="hljs-title function_">biSubtract</span>(f, bigOne),<br>    b = <span class="hljs-title function_">biShiftRight</span>(b, i),<br>    g = <span class="hljs-title function_">biSubtract</span>(b, g)),<br>    <span class="hljs-number">0</span> == g.<span class="hljs-property">digits</span>[<span class="hljs-number">0</span>] &amp;&amp; <span class="hljs-number">0</span> == <span class="hljs-title function_">biHighIndex</span>(g) &amp;&amp; (g.<span class="hljs-property">isNeg</span> = !<span class="hljs-number">1</span>),<br>    <span class="hljs-keyword">new</span> <span class="hljs-title class_">Array</span>(f,g)<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">biDivide</span>(<span class="hljs-params">a, b</span>) &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-title function_">biDivideModulo</span>(a, b)[<span class="hljs-number">0</span>]<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">biModulo</span>(<span class="hljs-params">a, b</span>) &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-title function_">biDivideModulo</span>(a, b)[<span class="hljs-number">1</span>]<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">biMultiplyMod</span>(<span class="hljs-params">a, b, c</span>) &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-title function_">biModulo</span>(<span class="hljs-title function_">biMultiply</span>(a, b), c)<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">biPow</span>(<span class="hljs-params">a, b</span>) &#123;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> c = bigOne, d = a; ; ) &#123;<br>        <span class="hljs-keyword">if</span> (<span class="hljs-number">0</span> != (<span class="hljs-number">1</span> &amp; b) &amp;&amp; (c = <span class="hljs-title function_">biMultiply</span>(c, d)),<br>        b &gt;&gt;= <span class="hljs-number">1</span>,<br>        <span class="hljs-number">0</span> == b)<br>            <span class="hljs-keyword">break</span>;<br>        d = <span class="hljs-title function_">biMultiply</span>(d, d)<br>    &#125;<br>    <span class="hljs-keyword">return</span> c<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">biPowMod</span>(<span class="hljs-params">a, b, c</span>) &#123;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> d = bigOne, e = a, f = b; ; ) &#123;<br>        <span class="hljs-keyword">if</span> (<span class="hljs-number">0</span> != (<span class="hljs-number">1</span> &amp; f.<span class="hljs-property">digits</span>[<span class="hljs-number">0</span>]) &amp;&amp; (d = <span class="hljs-title function_">biMultiplyMod</span>(d, e, c)),<br>        f = <span class="hljs-title function_">biShiftRight</span>(f, <span class="hljs-number">1</span>),<br>        <span class="hljs-number">0</span> == f.<span class="hljs-property">digits</span>[<span class="hljs-number">0</span>] &amp;&amp; <span class="hljs-number">0</span> == <span class="hljs-title function_">biHighIndex</span>(f))<br>            <span class="hljs-keyword">break</span>;<br>        e = <span class="hljs-title function_">biMultiplyMod</span>(e, e, c)<br>    &#125;<br>    <span class="hljs-keyword">return</span> d<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">BarrettMu</span>(<span class="hljs-params">a</span>) &#123;<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">modulus</span> = <span class="hljs-title function_">biCopy</span>(a),<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">k</span> = <span class="hljs-title function_">biHighIndex</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">modulus</span>) + <span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">var</span> b = <span class="hljs-keyword">new</span> <span class="hljs-title class_">BigInt</span>;<br>    b.<span class="hljs-property">digits</span>[<span class="hljs-number">2</span> * <span class="hljs-variable language_">this</span>.<span class="hljs-property">k</span>] = <span class="hljs-number">1</span>,<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">mu</span> = <span class="hljs-title function_">biDivide</span>(b, <span class="hljs-variable language_">this</span>.<span class="hljs-property">modulus</span>),<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">bkplus1</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">BigInt</span>,<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">bkplus1</span>.<span class="hljs-property">digits</span>[<span class="hljs-variable language_">this</span>.<span class="hljs-property">k</span> + <span class="hljs-number">1</span>] = <span class="hljs-number">1</span>,<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">modulo</span> = <span class="hljs-title class_">BarrettMu</span>_modulo,<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">multiplyMod</span> = <span class="hljs-title class_">BarrettMu</span>_multiplyMod,<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">powMod</span> = <span class="hljs-title class_">BarrettMu</span>_powMod<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">BarrettMu_modulo</span>(<span class="hljs-params">a</span>) &#123;<br>    <span class="hljs-keyword">var</span> i, b = <span class="hljs-title function_">biDivideByRadixPower</span>(a, <span class="hljs-variable language_">this</span>.<span class="hljs-property">k</span> - <span class="hljs-number">1</span>), c = <span class="hljs-title function_">biMultiply</span>(b, <span class="hljs-variable language_">this</span>.<span class="hljs-property">mu</span>), d = <span class="hljs-title function_">biDivideByRadixPower</span>(c, <span class="hljs-variable language_">this</span>.<span class="hljs-property">k</span> + <span class="hljs-number">1</span>), e = <span class="hljs-title function_">biModuloByRadixPower</span>(a, <span class="hljs-variable language_">this</span>.<span class="hljs-property">k</span> + <span class="hljs-number">1</span>), f = <span class="hljs-title function_">biMultiply</span>(d, <span class="hljs-variable language_">this</span>.<span class="hljs-property">modulus</span>), g = <span class="hljs-title function_">biModuloByRadixPower</span>(f, <span class="hljs-variable language_">this</span>.<span class="hljs-property">k</span> + <span class="hljs-number">1</span>), h = <span class="hljs-title function_">biSubtract</span>(e, g);<br>    <span class="hljs-keyword">for</span> (h.<span class="hljs-property">isNeg</span> &amp;&amp; (h = <span class="hljs-title function_">biAdd</span>(h, <span class="hljs-variable language_">this</span>.<span class="hljs-property">bkplus1</span>)),<br>    i = <span class="hljs-title function_">biCompare</span>(h, <span class="hljs-variable language_">this</span>.<span class="hljs-property">modulus</span>) &gt;= <span class="hljs-number">0</span>; i; )<br>        h = <span class="hljs-title function_">biSubtract</span>(h, <span class="hljs-variable language_">this</span>.<span class="hljs-property">modulus</span>),<br>        i = <span class="hljs-title function_">biCompare</span>(h, <span class="hljs-variable language_">this</span>.<span class="hljs-property">modulus</span>) &gt;= <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">return</span> h<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">BarrettMu_multiplyMod</span>(<span class="hljs-params">a, b</span>) &#123;<br>    <span class="hljs-keyword">var</span> c = <span class="hljs-title function_">biMultiply</span>(a, b);<br>    <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">modulo</span>(c)<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">BarrettMu_powMod</span>(<span class="hljs-params">a, b</span>) &#123;<br>    <span class="hljs-keyword">var</span> d, e, c = <span class="hljs-keyword">new</span> <span class="hljs-title class_">BigInt</span>;<br>    <span class="hljs-keyword">for</span> (c.<span class="hljs-property">digits</span>[<span class="hljs-number">0</span>] = <span class="hljs-number">1</span>,<br>    d = a,<br>    e = b; ; ) &#123;<br>        <span class="hljs-keyword">if</span> (<span class="hljs-number">0</span> != (<span class="hljs-number">1</span> &amp; e.<span class="hljs-property">digits</span>[<span class="hljs-number">0</span>]) &amp;&amp; (c = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">multiplyMod</span>(c, d)),<br>        e = <span class="hljs-title function_">biShiftRight</span>(e, <span class="hljs-number">1</span>),<br>        <span class="hljs-number">0</span> == e.<span class="hljs-property">digits</span>[<span class="hljs-number">0</span>] &amp;&amp; <span class="hljs-number">0</span> == <span class="hljs-title function_">biHighIndex</span>(e))<br>            <span class="hljs-keyword">break</span>;<br>        d = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">multiplyMod</span>(d, d)<br>    &#125;<br>    <span class="hljs-keyword">return</span> c<br>&#125;<br><span class="hljs-keyword">var</span> maxDigits, <span class="hljs-variable constant_">ZERO_ARRAY</span>, bigZero, bigOne, dpl10, lr10, hexatrigesimalToChar, hexToChar, highBitMasks, lowBitMasks, biRadixBase = <span class="hljs-number">2</span>, biRadixBits = <span class="hljs-number">16</span>, bitsPerDigit = biRadixBits, biRadix = <span class="hljs-number">65536</span>, biHalfRadix = biRadix &gt;&gt;&gt; <span class="hljs-number">1</span>, biRadixSquared = biRadix * biRadix, maxDigitVal = biRadix - <span class="hljs-number">1</span>, maxInteger = <span class="hljs-number">9999999999999998</span>;<br><span class="hljs-title function_">setMaxDigits</span>(<span class="hljs-number">20</span>),<br>dpl10 = <span class="hljs-number">15</span>,<br>lr10 = <span class="hljs-title function_">biFromNumber</span>(<span class="hljs-number">1e15</span>),<br>hexatrigesimalToChar = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Array</span>(<span class="hljs-string">&quot;0&quot;</span>,<span class="hljs-string">&quot;1&quot;</span>,<span class="hljs-string">&quot;2&quot;</span>,<span class="hljs-string">&quot;3&quot;</span>,<span class="hljs-string">&quot;4&quot;</span>,<span class="hljs-string">&quot;5&quot;</span>,<span class="hljs-string">&quot;6&quot;</span>,<span class="hljs-string">&quot;7&quot;</span>,<span class="hljs-string">&quot;8&quot;</span>,<span class="hljs-string">&quot;9&quot;</span>,<span class="hljs-string">&quot;a&quot;</span>,<span class="hljs-string">&quot;b&quot;</span>,<span class="hljs-string">&quot;c&quot;</span>,<span class="hljs-string">&quot;d&quot;</span>,<span class="hljs-string">&quot;e&quot;</span>,<span class="hljs-string">&quot;f&quot;</span>,<span class="hljs-string">&quot;g&quot;</span>,<span class="hljs-string">&quot;h&quot;</span>,<span class="hljs-string">&quot;i&quot;</span>,<span class="hljs-string">&quot;j&quot;</span>,<span class="hljs-string">&quot;k&quot;</span>,<span class="hljs-string">&quot;l&quot;</span>,<span class="hljs-string">&quot;m&quot;</span>,<span class="hljs-string">&quot;n&quot;</span>,<span class="hljs-string">&quot;o&quot;</span>,<span class="hljs-string">&quot;p&quot;</span>,<span class="hljs-string">&quot;q&quot;</span>,<span class="hljs-string">&quot;r&quot;</span>,<span class="hljs-string">&quot;s&quot;</span>,<span class="hljs-string">&quot;t&quot;</span>,<span class="hljs-string">&quot;u&quot;</span>,<span class="hljs-string">&quot;v&quot;</span>,<span class="hljs-string">&quot;w&quot;</span>,<span class="hljs-string">&quot;x&quot;</span>,<span class="hljs-string">&quot;y&quot;</span>,<span class="hljs-string">&quot;z&quot;</span>),<br>hexToChar = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Array</span>(<span class="hljs-string">&quot;0&quot;</span>,<span class="hljs-string">&quot;1&quot;</span>,<span class="hljs-string">&quot;2&quot;</span>,<span class="hljs-string">&quot;3&quot;</span>,<span class="hljs-string">&quot;4&quot;</span>,<span class="hljs-string">&quot;5&quot;</span>,<span class="hljs-string">&quot;6&quot;</span>,<span class="hljs-string">&quot;7&quot;</span>,<span class="hljs-string">&quot;8&quot;</span>,<span class="hljs-string">&quot;9&quot;</span>,<span class="hljs-string">&quot;a&quot;</span>,<span class="hljs-string">&quot;b&quot;</span>,<span class="hljs-string">&quot;c&quot;</span>,<span class="hljs-string">&quot;d&quot;</span>,<span class="hljs-string">&quot;e&quot;</span>,<span class="hljs-string">&quot;f&quot;</span>),<br>highBitMasks = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Array</span>(<span class="hljs-number">0</span>,<span class="hljs-number">32768</span>,<span class="hljs-number">49152</span>,<span class="hljs-number">57344</span>,<span class="hljs-number">61440</span>,<span class="hljs-number">63488</span>,<span class="hljs-number">64512</span>,<span class="hljs-number">65024</span>,<span class="hljs-number">65280</span>,<span class="hljs-number">65408</span>,<span class="hljs-number">65472</span>,<span class="hljs-number">65504</span>,<span class="hljs-number">65520</span>,<span class="hljs-number">65528</span>,<span class="hljs-number">65532</span>,<span class="hljs-number">65534</span>,<span class="hljs-number">65535</span>),<br>lowBitMasks = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Array</span>(<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">3</span>,<span class="hljs-number">7</span>,<span class="hljs-number">15</span>,<span class="hljs-number">31</span>,<span class="hljs-number">63</span>,<span class="hljs-number">127</span>,<span class="hljs-number">255</span>,<span class="hljs-number">511</span>,<span class="hljs-number">1023</span>,<span class="hljs-number">2047</span>,<span class="hljs-number">4095</span>,<span class="hljs-number">8191</span>,<span class="hljs-number">16383</span>,<span class="hljs-number">32767</span>,<span class="hljs-number">65535</span>);<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">c</span>(<span class="hljs-params">a, b, c</span>) &#123;<br>    <span class="hljs-keyword">var</span> d, e;<br>    <span class="hljs-keyword">return</span> <span class="hljs-title function_">setMaxDigits</span>(<span class="hljs-number">131</span>),<br>    d = <span class="hljs-keyword">new</span> <span class="hljs-title class_">RSAKeyPair</span>(b,<span class="hljs-string">&quot;&quot;</span>,c),<br>    e = <span class="hljs-title function_">encryptedString</span>(d, a)<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">a</span>(<span class="hljs-params">a</span>) &#123;<br>    <span class="hljs-keyword">var</span> d, e, b = <span class="hljs-string">&quot;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789&quot;</span>, c = <span class="hljs-string">&quot;&quot;</span>;<br>    <span class="hljs-keyword">for</span> (d = <span class="hljs-number">0</span>; a &gt; d; d += <span class="hljs-number">1</span>)<br>        e = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">random</span>() * b.<span class="hljs-property">length</span>,<br>        e = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>(e),<br>        c += b.<span class="hljs-title function_">charAt</span>(e);<br>    <span class="hljs-keyword">return</span> c<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">b</span>(<span class="hljs-params">a, b</span>) &#123;<br>    <span class="hljs-keyword">var</span> c = <span class="hljs-title class_">CryptoJS</span>.<span class="hljs-property">enc</span>.<span class="hljs-property">Utf8</span>.<span class="hljs-title function_">parse</span>(b)<br>      , d = <span class="hljs-title class_">CryptoJS</span>.<span class="hljs-property">enc</span>.<span class="hljs-property">Utf8</span>.<span class="hljs-title function_">parse</span>(<span class="hljs-string">&quot;0102030405060708&quot;</span>)<br>      , e = <span class="hljs-title class_">CryptoJS</span>.<span class="hljs-property">enc</span>.<span class="hljs-property">Utf8</span>.<span class="hljs-title function_">parse</span>(a)<br>      , f = <span class="hljs-title class_">CryptoJS</span>.<span class="hljs-property">AES</span>.<span class="hljs-title function_">encrypt</span>(e, c, &#123;<br>        <span class="hljs-attr">iv</span>: d,<br>        <span class="hljs-attr">mode</span>: <span class="hljs-title class_">CryptoJS</span>.<span class="hljs-property">mode</span>.<span class="hljs-property">CBC</span><br>    &#125;);<br>    <span class="hljs-keyword">return</span> f.<span class="hljs-title function_">toString</span>()<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">c</span>(<span class="hljs-params">a, b, c</span>) &#123;<br>    <span class="hljs-keyword">var</span> d, e;<br>    <span class="hljs-keyword">return</span> <span class="hljs-title function_">setMaxDigits</span>(<span class="hljs-number">131</span>),<br>    d = <span class="hljs-keyword">new</span> <span class="hljs-title class_">RSAKeyPair</span>(b,<span class="hljs-string">&quot;&quot;</span>,c),<br>    e = <span class="hljs-title function_">encryptedString</span>(d, a)<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">get_sign</span>(<span class="hljs-params">d</span>) &#123;<br>    <span class="hljs-keyword">var</span> e = <span class="hljs-string">&quot;010001&quot;</span><br>    <span class="hljs-keyword">var</span> f = <span class="hljs-string">&quot;00e0b509f6259df8642dbc35662901477df22677ec152b5ff68ace615bb7b725152b3ab17a876aea8a5aa76d2e417629ec4ee341f56135fccf695280104e0312ecbda92557c93870114af6c9d05c4f7f0c3685b7a46bee255932575cce10b424d813cfe4875d3e82047b97ddef52741d546b8e289dc6935b3ece0462db0a22b8e7&quot;</span><br>    <span class="hljs-keyword">var</span> g = <span class="hljs-string">&quot;0CoJUm6Qyw8W8jud&quot;</span><br>    <span class="hljs-keyword">var</span> h = &#123;&#125;<br>      , i = <span class="hljs-title function_">a</span>(<span class="hljs-number">16</span>);<br>    <span class="hljs-keyword">var</span> m_q = <span class="hljs-title function_">b</span>(d ,g)<br><br>    <span class="hljs-keyword">return</span> &#123;<br>        <span class="hljs-string">&quot;encText&quot;</span>: <span class="hljs-title function_">b</span>(m_q, i),<br>        <span class="hljs-string">&quot;encSeckey&quot;</span>: <span class="hljs-title function_">c</span>(i ,e ,f)<br>    &#125;<br>    <span class="hljs-keyword">return</span> h.<span class="hljs-property">encText</span> = <span class="hljs-title function_">b</span>(d, g),<br>    h.<span class="hljs-property">encText</span> = <span class="hljs-title function_">b</span>(h.<span class="hljs-property">encText</span>, i),<br>    h.<span class="hljs-property">encSecKey</span> = <span class="hljs-title function_">c</span>(i, e, f),<br>    h<br>&#125;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-title function_">get_sign</span>(<span class="hljs-string">&#x27;&#123;&quot;s&quot;:&quot;1123&quot;,&quot;limit&quot;:&quot;8&quot;,&quot;csrf_token&quot;:&quot;41f9f27e3f176269c2a04664ff13ba59&quot;&#125;&#x27;</span>)) <span class="hljs-comment">// s是搜索的内容 limit是页数</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>web逆向</category>
      
      <category>音乐类</category>
      
    </categories>
    
    
    <tags>
      
      <tag>code</tag>
      
      <tag>编程</tag>
      
      <tag>js逆向</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>搜狗翻译api抓取分析</title>
    <link href="/2024/05/03/saogou_fanyi/"/>
    <url>/2024/05/03/saogou_fanyi/</url>
    
    <content type="html"><![CDATA[<p>最近开学之后，博主更新博客的时间变少了，今天五一劳动节了，随手做一个吧，关于百度翻译api那个，后面我尝试转一下语言，进行处理</p><p>那么今天就要进行翻译搜狗的逆向吧</p><hr><h2 id="抓取信息">抓取信息</h2><p>首先打开搜狗翻译的网站<a href="https://fanyi.sogou.com/text">点我跳转</a></p><p><img src="https://pic.imgdb.cn/item/6631199e0ea9cb140353993d.png" alt=""></p><p>右键你键盘上的<code>F12</code>，点击<code>检查-&gt;网络</code> 开始抓包，首先我们先翻译一个东西就拿<code>你好</code>，来举个例子</p><p><img src="https://pic.imgdb.cn/item/66311a070ea9cb140354adea.png" alt=""></p><p>这个<code>result</code>的<code>api</code>，就是翻译的<code>api</code>，点击<code>payload</code>看看参数，这里先翻译两次，找到变和不变的</p><p><img src="https://pic.imgdb.cn/item/66311ad80ea9cb1403570dd3.png" alt=""></p><hr><h2 id="分析参数">分析参数</h2><p><code>text</code>，这个好理解，就是翻译的东西</p><span id="more"></span><p><code>s</code>和<code>uuid</code>是加密参数，需要解密，其他参数都不变</p><h3 id="s参数分析">s参数分析</h3><p>首先来看<code>s</code>参数，可以看到是引用了这个文件</p><p><img src="https://pic.imgdb.cn/item/66311b6f0ea9cb14035887fa.png" alt=""></p><p>点进去，如果直接搜s是不行的，不过从<code>s</code>的长度，疑似一个<code>md5</code>摘要算法，那我们搜索一下<code>md5</code></p><p><img src="https://pic.imgdb.cn/item/66311c070ea9cb140359cf23.png" alt=""></p><p>这里就是md5调用的地方了，先勾上，然后去翻译一个东西，可以得到<code>t=autoen西瓜1109984457</code></p><p><code>auto</code>为自动检测源语言，<code>en</code>是翻译的目标语言，至于后面的数字我们暂时不知道具体意思，那直接打<code>this.md5</code>这个部分</p><p>得不到<code>n</code>这个函数的意义，去其他<code>js</code>文件看看，这个<code>app.js</code>很可疑</p><p><img src="https://pic.imgdb.cn/item/66324d570ea9cb1403a498e4.png" alt=""></p><p>点进去</p><p><img src="https://pic.imgdb.cn/item/66324e000ea9cb1403a643a5.png" alt=""></p><p>从3162行可以看到，下面的<code>s</code>等于<code>D</code>，同时<code>D</code>也是由<code>V</code>函数和<code>p m l c</code>这四个地方组成的，我们打一下断点</p><p><img src="https://pic.imgdb.cn/item/66324ea10ea9cb1403a7ce28.png" alt=""></p><p><code>C</code>就是我们想要的地方，同时跟<code>x.secretcode</code>是一样，我们需要找到<code>x</code>函数的位置</p><p>这里我苦恼了半天也没找到<code>x</code>的位置，然后翻译了几次，发现数字都没变，应该是个定值</p><p>这样就得到了加密公式</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">源语言+翻译语言+翻译文本+109984457<br></code></pre></td></tr></table></figure><h3 id="uuid参数分析">uuid参数分析</h3><p>根据多次翻译的结果，uuid也是定值</p><hr><h2 id="成品">成品</h2><p>分析完成之后，接下来开始写代码了</p><p><strong>TS代码示例</strong></p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-keyword">import</span> <span class="hljs-title class_">CryptoJS</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;crypto-js&#x27;</span>;<br><br><span class="hljs-keyword">const</span> url : <span class="hljs-built_in">string</span> = <span class="hljs-string">&quot;https://fanyi.sogou.com/api/transpc/text/result&quot;</span>; <span class="hljs-comment">// url链接</span><br><span class="hljs-keyword">const</span> tr_text : <span class="hljs-built_in">string</span> = <span class="hljs-string">&quot;西红柿&quot;</span>; <span class="hljs-comment">// 翻译内容</span><br><span class="hljs-keyword">const</span> from_text : <span class="hljs-built_in">string</span> = <span class="hljs-string">&quot;auto&quot;</span> <span class="hljs-comment">//翻译源语言 默认auto</span><br><span class="hljs-keyword">const</span> to_text : <span class="hljs-built_in">string</span> = <span class="hljs-string">&quot;en&quot;</span> <span class="hljs-comment">// 翻译目标语言</span><br><span class="hljs-keyword">const</span> cookie_ : <span class="hljs-built_in">string</span> = <span class="hljs-string">&quot;ABTEST=0|1714661977|v17; SNUID=F6B3059AE2E7F69838F8F0FAE2DBB8A9; SUID=1452E778EF53A00A000000006633AA59; wuid=1714661977888; FQV=e1a1827db43089b1cdd50f9f99397d3c; translate.sess=4a702d60-5da6-4219-b3d6-9640f5b73add; SUV=1714661982306; SGINPUT_UPSCREEN=1714661982341&quot;</span>; <span class="hljs-comment">// coookie</span><br><span class="hljs-keyword">const</span> key : <span class="hljs-built_in">string</span> = <span class="hljs-title class_">CryptoJS</span>.<span class="hljs-title class_">MD5</span>(from_text + to_text + tr_text + <span class="hljs-string">&quot;109984457&quot;</span>).<span class="hljs-title function_">toString</span>()<br><br><span class="hljs-keyword">var</span> header = &#123;<br>    <span class="hljs-attr">method</span>: <span class="hljs-string">&#x27;POST&#x27;</span>,<br>    <span class="hljs-attr">headers</span>: &#123;<br>        <span class="hljs-string">&#x27;Content-Type&#x27;</span>: <span class="hljs-string">&#x27;application/json&#x27;</span>, <span class="hljs-comment">// 自定义请求头</span><br>        <span class="hljs-string">&#x27;cookie&#x27;</span>: cookie_,<br>        <span class="hljs-string">&#x27;User-Agent&#x27;</span>: <span class="hljs-string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/124.0.0.0 Safari/537.36&#x27;</span><br>    &#125;,<br>    <span class="hljs-attr">body</span>:<span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">stringify</span>(&#123;<br>        <span class="hljs-string">&quot;from&quot;</span>:from_text,<br>        <span class="hljs-string">&quot;to&quot;</span>:to_text,<br>        <span class="hljs-string">&quot;text&quot;</span>:tr_text,<br>        <span class="hljs-string">&quot;client&quot;</span>:<span class="hljs-string">&quot;pc&quot;</span>,<br>        <span class="hljs-string">&quot;fr&quot;</span>:<span class="hljs-string">&quot;browser_pc&quot;</span>,<br>        <span class="hljs-string">&quot;needQc&quot;</span>:<span class="hljs-number">1</span>,<br>        <span class="hljs-string">&quot;s&quot;</span>:key,<br>        <span class="hljs-string">&quot;uuid&quot;</span>:<span class="hljs-string">&quot;0f8e6ff9-99d9-40c1-99ba-e359f2fa4c16&quot;</span>,<br>        <span class="hljs-string">&quot;exchange&quot;</span>:<span class="hljs-literal">false</span><br>    &#125;)<br>&#125;<br><span class="hljs-title function_">fetch</span>(url, header)<br>    .<span class="hljs-title function_">then</span>(<span class="hljs-function"><span class="hljs-params">response</span> =&gt;</span> response.<span class="hljs-title function_">json</span>())<br>    .<span class="hljs-title function_">then</span>(<span class="hljs-function"><span class="hljs-params">data</span> =&gt;</span> &#123;<br>        <span class="hljs-keyword">if</span>(data[<span class="hljs-string">&quot;status&quot;</span>]!=<span class="hljs-number">0</span>)&#123;<br>            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;翻译失败,原因&quot;</span>,data[<span class="hljs-string">&quot;status&quot;</span>]);<br>        &#125;<span class="hljs-keyword">else</span>&#123;<br>            <br>            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;原文:&quot;</span>,tr_text,<span class="hljs-string">&quot;译文:&quot;</span>,data[<span class="hljs-string">&quot;data&quot;</span>][<span class="hljs-string">&quot;wordCard&quot;</span>][<span class="hljs-string">&quot;usualDict&quot;</span>][<span class="hljs-number">0</span>][<span class="hljs-string">&#x27;values&#x27;</span>][<span class="hljs-number">0</span>])<br>        &#125;<br>    &#125;)<br>    .<span class="hljs-title function_">catch</span>(<span class="hljs-function"><span class="hljs-params">error</span> =&gt;</span> &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">error</span>(<span class="hljs-string">&#x27;There was a problem with your fetch operation:&#x27;</span>, error);<br>    &#125;);<br><br></code></pre></td></tr></table></figure><p><strong>Python</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs python">from_text = <span class="hljs-string">&quot;auto&quot;</span> <span class="hljs-comment"># 翻译的源语言</span><br>to_text = <span class="hljs-string">&quot;en&quot;</span> <span class="hljs-comment"># 翻译的目标内容</span><br>text = <span class="hljs-string">&quot;西红柿&quot;</span><br><br><br>cookie_ = <span class="hljs-string">&quot;ABTEST=0|1714661977|v17; SNUID=F6B3059AE2E7F69838F8F0FAE2DBB8A9; SUID=1452E778EF53A00A000000006633AA59; wuid=1714661977888; FQV=e1a1827db43089b1cdd50f9f99397d3c; translate.sess=4a702d60-5da6-4219-b3d6-9640f5b73add; SUV=1714661982306; SGINPUT_UPSCREEN=1714661982341&quot;</span><br><br><span class="hljs-keyword">import</span> httpx, hashlib<br><br>key = from_text + to_text + text + <span class="hljs-string">&quot;109984457&quot;</span><br>md5hash = hashlib.md5(key.encode(<span class="hljs-string">&quot;utf_8&quot;</span>)).hexdigest()<br><br><span class="hljs-keyword">try</span>:<br>    r = httpx.post(<br>        url=<span class="hljs-string">&quot;https://fanyi.sogou.com/api/transpc/text/result&quot;</span>,<br>        headers=&#123;<br>            <span class="hljs-string">&#x27;Content-Type&#x27;</span>: <span class="hljs-string">&#x27;application/json&#x27;</span>,<br>            <span class="hljs-string">&#x27;cookie&#x27;</span>: cookie_,<br>            <span class="hljs-string">&#x27;User-Agent&#x27;</span>: <span class="hljs-string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/124.0.0.0 Safari/537.36&#x27;</span><br>        &#125;,<br>        data=&#123;<br>            <span class="hljs-string">&quot;from&quot;</span>:from_text,<br>            <span class="hljs-string">&quot;to&quot;</span>:to_text,<br>            <span class="hljs-string">&quot;text&quot;</span>:text,<br>            <span class="hljs-string">&quot;client&quot;</span>:<span class="hljs-string">&quot;pc&quot;</span>,<br>            <span class="hljs-string">&quot;fr&quot;</span>:<span class="hljs-string">&quot;browser_pc&quot;</span>,<br>            <span class="hljs-string">&quot;needQc&quot;</span>:<span class="hljs-number">1</span>,<br>            <span class="hljs-string">&quot;s&quot;</span>:md5hash,<br>            <span class="hljs-string">&quot;uuid&quot;</span>:<span class="hljs-string">&quot;0f8e6ff9-99d9-40c1-99ba-e359f2fa4c16&quot;</span>,<br>            <span class="hljs-string">&quot;exchange&quot;</span>:<span class="hljs-literal">False</span><br>        &#125;<br>    )<br>    <span class="hljs-keyword">if</span> r[<span class="hljs-string">&quot;status&quot;</span>] != <span class="hljs-number">0</span>:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;状态错误&quot;</span>)<br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">f&#x27;原文:<span class="hljs-subst">&#123;text&#125;</span>,译文:<span class="hljs-subst">&#123;r[<span class="hljs-string">&quot;data&quot;</span>][<span class="hljs-string">&quot;wordCard&quot;</span>][<span class="hljs-string">&quot;usualDict&quot;</span>][<span class="hljs-number">0</span>][<span class="hljs-string">&quot;values&quot;</span>][<span class="hljs-number">0</span>]&#125;</span>&#x27;</span>)<br><span class="hljs-keyword">except</span> (httpx.ConnectError, httpx.ConnectTimeout):<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;网络错误，翻译失败&quot;</span>)<br><br></code></pre></td></tr></table></figure><p>这期先到这里了</p>]]></content>
    
    
    <categories>
      
      <category>web逆向</category>
      
      <category>翻译类</category>
      
    </categories>
    
    
    <tags>
      
      <tag>code</tag>
      
      <tag>编程</tag>
      
      <tag>python</tag>
      
      <tag>typescript</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>百度翻译api抓取分析</title>
    <link href="/2024/02/18/baidu_fanyi/"/>
    <url>/2024/02/18/baidu_fanyi/</url>
    
    <content type="html"><![CDATA[<h2 id="开始">开始</h2><p>自从上次写了有道翻译后，这次来弄个百度翻译的<code>api</code></p><p><s>要开学了</s></p><hr><h2 id="抓取数据">抓取数据</h2><span id="more"></span><p>这里的抓包软件，我就不多说了，推荐大家用小黄鸟电脑版，地址-&gt;<a href="https://reqable.com/en-US/">点我</a></p><p>打开小黄鸟和百度翻译，先翻译一个单词先，最好翻译两个不同的单词</p><p><img src="https://pic.imgdb.cn/item/65d0e2c29f345e8d038901d2.png" alt=""></p><p>这边小黄鸟抓到了一个<code>api</code>,名为:<code>v2transapi</code></p><p><img src="https://pic.imgdb.cn/item/65d0e4749f345e8d038f7a40.png" alt=""></p><p>这里可以看的有两个参数<code>sign</code>和<code>ts</code>是不一样的，<code>query</code>是我们翻译的东西</p><p>对于这种情况，我尝试去除<code>ts</code>参数，发现还是可以访问的，但去除<code>sign</code>就不行了，因此我们需要分析<code>sign</code>参数</p><hr><h2 id="解密sign参数">解密sign参数</h2><p>先找到这个<code>api</code>的来源<code>js</code>文件</p><p><img src="https://pic.imgdb.cn/item/65d0e5109f345e8d0391af72.png" alt=""></p><p>发现文件都是同一个，那就直接进去就好了</p><p><img src="https://pic.imgdb.cn/item/65d0e5119f345e8d0391afd5.png" alt=""></p><p>先格式化代码</p><p><img src="https://pic.imgdb.cn/item/65d0e5a79f345e8d0393e438.png" alt=""></p><p>先全局搜索<code>sign</code>，发现有<code>41</code>个，一个一个查找</p><p><img src="https://pic.imgdb.cn/item/65d0e6059f345e8d0395ad6c.png" alt=""></p><p>这里的<code>sign</code>调用了<code>b</code>函数附带了<code>e</code>参数，<code>e</code>参数对应字段为<code>query</code>，就是我们翻译的东西。按下<code>暂停键</code>开始调式</p><p>被跳转到其他<code>js</code>文件了,点回去，发现<code>token</code>也是和抓的参数一样的</p><p><img src="https://pic.imgdb.cn/item/65d0e6699f345e8d0397178d.png" alt=""></p><p>维独这个<code>b</code>函数没东西，这里可以尝试再翻译一次，在左边点第一个图标，然后输入新内容，果然不出所料，<code>e</code>参数正常显示了</p><p>此时<code>b</code>函数也有地址，点进去</p><p><img src="https://pic.imgdb.cn/item/65d0e7af9f345e8d039c1a9d.png" alt=""></p><p>这个类应该是加密算法的地方了，先对第一行的<code>var o,i</code>打断点，可以得到<code>t</code>函数就是我们翻译的东西，我们复制整个类</p><p><img src="https://pic.imgdb.cn/item/65d0e8319f345e8d039de45e.png" alt=""></p><p>同时把<code>t.exports</code>改成<code>sign</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs javascript">sign = <span class="hljs-keyword">function</span>(<span class="hljs-params">t</span>) &#123;<br>            <span class="hljs-keyword">var</span> o, i = t.<span class="hljs-title function_">match</span>(<span class="hljs-regexp">/[\uD800-\uDBFF][\uDC00-\uDFFF]/g</span>);<br>            <span class="hljs-keyword">if</span> (<span class="hljs-literal">null</span> === i) &#123;<br>                <span class="hljs-keyword">var</span> a = t.<span class="hljs-property">length</span>;<br>                a &gt; <span class="hljs-number">30</span> &amp;&amp; (t = <span class="hljs-string">&quot;&quot;</span>.<span class="hljs-title function_">concat</span>(t.<span class="hljs-title function_">substr</span>(<span class="hljs-number">0</span>, <span class="hljs-number">10</span>)).<span class="hljs-title function_">concat</span>(t.<span class="hljs-title function_">substr</span>(<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>(a / <span class="hljs-number">2</span>) - <span class="hljs-number">5</span>, <span class="hljs-number">10</span>)).<span class="hljs-title function_">concat</span>(t.<span class="hljs-title function_">substr</span>(-<span class="hljs-number">10</span>, <span class="hljs-number">10</span>)))<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> s = t.<span class="hljs-title function_">split</span>(<span class="hljs-regexp">/[\uD800-\uDBFF][\uDC00-\uDFFF]/</span>), c = <span class="hljs-number">0</span>, u = s.<span class="hljs-property">length</span>, l = []; c &lt; u; c++)<br>                    <span class="hljs-string">&quot;&quot;</span> !== s[c] &amp;&amp; l.<span class="hljs-property">push</span>.<span class="hljs-title function_">apply</span>(l, <span class="hljs-keyword">function</span>(<span class="hljs-params">t</span>) &#123;<br>                        <span class="hljs-keyword">if</span> (<span class="hljs-title class_">Array</span>.<span class="hljs-title function_">isArray</span>(t))<br>                            <span class="hljs-keyword">return</span> <span class="hljs-title function_">e</span>(t)<br>                    &#125;(o = s[c].<span class="hljs-title function_">split</span>(<span class="hljs-string">&quot;&quot;</span>)) || <span class="hljs-keyword">function</span>(<span class="hljs-params">t</span>) &#123;<br>                        <span class="hljs-keyword">if</span> (<span class="hljs-string">&quot;undefined&quot;</span> != <span class="hljs-keyword">typeof</span> <span class="hljs-title class_">Symbol</span> &amp;&amp; <span class="hljs-literal">null</span> != t[<span class="hljs-title class_">Symbol</span>.<span class="hljs-property">iterator</span>] || <span class="hljs-literal">null</span> != t[<span class="hljs-string">&quot;@@iterator&quot;</span>])<br>                            <span class="hljs-keyword">return</span> <span class="hljs-title class_">Array</span>.<span class="hljs-title function_">from</span>(t)<br>                    &#125;(o) || <span class="hljs-keyword">function</span>(<span class="hljs-params">t, n</span>) &#123;<br>                        <span class="hljs-keyword">if</span> (t) &#123;<br>                            <span class="hljs-keyword">if</span> (<span class="hljs-string">&quot;string&quot;</span> == <span class="hljs-keyword">typeof</span> t)<br>                                <span class="hljs-keyword">return</span> <span class="hljs-title function_">e</span>(t, n);<br>                            <span class="hljs-keyword">var</span> r = <span class="hljs-title class_">Object</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">toString</span>.<span class="hljs-title function_">call</span>(t).<span class="hljs-title function_">slice</span>(<span class="hljs-number">8</span>, -<span class="hljs-number">1</span>);<br>                            <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;Object&quot;</span> === r &amp;&amp; t.<span class="hljs-property">constructor</span> &amp;&amp; (r = t.<span class="hljs-property">constructor</span>.<span class="hljs-property">name</span>),<br>                            <span class="hljs-string">&quot;Map&quot;</span> === r || <span class="hljs-string">&quot;Set&quot;</span> === r ? <span class="hljs-title class_">Array</span>.<span class="hljs-title function_">from</span>(t) : <span class="hljs-string">&quot;Arguments&quot;</span> === r || <span class="hljs-regexp">/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/</span>.<span class="hljs-title function_">test</span>(r) ? <span class="hljs-title function_">e</span>(t, n) : <span class="hljs-keyword">void</span> <span class="hljs-number">0</span><br>                        &#125;<br>                    &#125;(o) || <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>                        <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">TypeError</span>(<span class="hljs-string">&quot;Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.&quot;</span>)<br>                    &#125;()),<br>                    c !== u - <span class="hljs-number">1</span> &amp;&amp; l.<span class="hljs-title function_">push</span>(i[c]);<br>                <span class="hljs-keyword">var</span> p = l.<span class="hljs-property">length</span>;<br>                p &gt; <span class="hljs-number">30</span> &amp;&amp; (t = l.<span class="hljs-title function_">slice</span>(<span class="hljs-number">0</span>, <span class="hljs-number">10</span>).<span class="hljs-title function_">join</span>(<span class="hljs-string">&quot;&quot;</span>) + l.<span class="hljs-title function_">slice</span>(<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>(p / <span class="hljs-number">2</span>) - <span class="hljs-number">5</span>, <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>(p / <span class="hljs-number">2</span>) + <span class="hljs-number">5</span>).<span class="hljs-title function_">join</span>(<span class="hljs-string">&quot;&quot;</span>) + l.<span class="hljs-title function_">slice</span>(-<span class="hljs-number">10</span>).<span class="hljs-title function_">join</span>(<span class="hljs-string">&quot;&quot;</span>))<br>            &#125;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> d = <span class="hljs-string">&quot;&quot;</span>.<span class="hljs-title function_">concat</span>(<span class="hljs-title class_">String</span>.<span class="hljs-title function_">fromCharCode</span>(<span class="hljs-number">103</span>)).<span class="hljs-title function_">concat</span>(<span class="hljs-title class_">String</span>.<span class="hljs-title function_">fromCharCode</span>(<span class="hljs-number">116</span>)).<span class="hljs-title function_">concat</span>(<span class="hljs-title class_">String</span>.<span class="hljs-title function_">fromCharCode</span>(<span class="hljs-number">107</span>)), h = (<span class="hljs-literal">null</span> !== r ? r : (r = <span class="hljs-variable language_">window</span>[d] || <span class="hljs-string">&quot;&quot;</span>) || <span class="hljs-string">&quot;&quot;</span>).<span class="hljs-title function_">split</span>(<span class="hljs-string">&quot;.&quot;</span>), f = <span class="hljs-title class_">Number</span>(h[<span class="hljs-number">0</span>]) || <span class="hljs-number">0</span>, m = <span class="hljs-title class_">Number</span>(h[<span class="hljs-number">1</span>]) || <span class="hljs-number">0</span>, g = [], y = <span class="hljs-number">0</span>, v = <span class="hljs-number">0</span>; v &lt; t.<span class="hljs-property">length</span>; v++) &#123;<br>                <span class="hljs-keyword">var</span> _ = t.<span class="hljs-title function_">charCodeAt</span>(v);<br>                _ &lt; <span class="hljs-number">128</span> ? g[y++] = _ : (_ &lt; <span class="hljs-number">2048</span> ? g[y++] = _ &gt;&gt; <span class="hljs-number">6</span> | <span class="hljs-number">192</span> : (<span class="hljs-number">55296</span> == (<span class="hljs-number">64512</span> &amp; _) &amp;&amp; v + <span class="hljs-number">1</span> &lt; t.<span class="hljs-property">length</span> &amp;&amp; <span class="hljs-number">56320</span> == (<span class="hljs-number">64512</span> &amp; t.<span class="hljs-title function_">charCodeAt</span>(v + <span class="hljs-number">1</span>)) ? (_ = <span class="hljs-number">65536</span> + ((<span class="hljs-number">1023</span> &amp; _) &lt;&lt; <span class="hljs-number">10</span>) + (<span class="hljs-number">1023</span> &amp; t.<span class="hljs-title function_">charCodeAt</span>(++v)),<br>                g[y++] = _ &gt;&gt; <span class="hljs-number">18</span> | <span class="hljs-number">240</span>,<br>                g[y++] = _ &gt;&gt; <span class="hljs-number">12</span> &amp; <span class="hljs-number">63</span> | <span class="hljs-number">128</span>) : g[y++] = _ &gt;&gt; <span class="hljs-number">12</span> | <span class="hljs-number">224</span>,<br>                g[y++] = _ &gt;&gt; <span class="hljs-number">6</span> &amp; <span class="hljs-number">63</span> | <span class="hljs-number">128</span>),<br>                g[y++] = <span class="hljs-number">63</span> &amp; _ | <span class="hljs-number">128</span>)<br>            &#125;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> b = f, w = <span class="hljs-string">&quot;&quot;</span>.<span class="hljs-title function_">concat</span>(<span class="hljs-title class_">String</span>.<span class="hljs-title function_">fromCharCode</span>(<span class="hljs-number">43</span>)).<span class="hljs-title function_">concat</span>(<span class="hljs-title class_">String</span>.<span class="hljs-title function_">fromCharCode</span>(<span class="hljs-number">45</span>)).<span class="hljs-title function_">concat</span>(<span class="hljs-title class_">String</span>.<span class="hljs-title function_">fromCharCode</span>(<span class="hljs-number">97</span>)) + <span class="hljs-string">&quot;&quot;</span>.<span class="hljs-title function_">concat</span>(<span class="hljs-title class_">String</span>.<span class="hljs-title function_">fromCharCode</span>(<span class="hljs-number">94</span>)).<span class="hljs-title function_">concat</span>(<span class="hljs-title class_">String</span>.<span class="hljs-title function_">fromCharCode</span>(<span class="hljs-number">43</span>)).<span class="hljs-title function_">concat</span>(<span class="hljs-title class_">String</span>.<span class="hljs-title function_">fromCharCode</span>(<span class="hljs-number">54</span>)), k = <span class="hljs-string">&quot;&quot;</span>.<span class="hljs-title function_">concat</span>(<span class="hljs-title class_">String</span>.<span class="hljs-title function_">fromCharCode</span>(<span class="hljs-number">43</span>)).<span class="hljs-title function_">concat</span>(<span class="hljs-title class_">String</span>.<span class="hljs-title function_">fromCharCode</span>(<span class="hljs-number">45</span>)).<span class="hljs-title function_">concat</span>(<span class="hljs-title class_">String</span>.<span class="hljs-title function_">fromCharCode</span>(<span class="hljs-number">51</span>)) + <span class="hljs-string">&quot;&quot;</span>.<span class="hljs-title function_">concat</span>(<span class="hljs-title class_">String</span>.<span class="hljs-title function_">fromCharCode</span>(<span class="hljs-number">94</span>)).<span class="hljs-title function_">concat</span>(<span class="hljs-title class_">String</span>.<span class="hljs-title function_">fromCharCode</span>(<span class="hljs-number">43</span>)).<span class="hljs-title function_">concat</span>(<span class="hljs-title class_">String</span>.<span class="hljs-title function_">fromCharCode</span>(<span class="hljs-number">98</span>)) + <span class="hljs-string">&quot;&quot;</span>.<span class="hljs-title function_">concat</span>(<span class="hljs-title class_">String</span>.<span class="hljs-title function_">fromCharCode</span>(<span class="hljs-number">43</span>)).<span class="hljs-title function_">concat</span>(<span class="hljs-title class_">String</span>.<span class="hljs-title function_">fromCharCode</span>(<span class="hljs-number">45</span>)).<span class="hljs-title function_">concat</span>(<span class="hljs-title class_">String</span>.<span class="hljs-title function_">fromCharCode</span>(<span class="hljs-number">102</span>)), x = <span class="hljs-number">0</span>; x &lt; g.<span class="hljs-property">length</span>; x++)<br>                b = <span class="hljs-title function_">n</span>(b += g[x], w);<br>            <span class="hljs-keyword">return</span> b = <span class="hljs-title function_">n</span>(b, k),<br>            (b ^= m) &lt; <span class="hljs-number">0</span> &amp;&amp; (b = <span class="hljs-number">2147483648</span> + (<span class="hljs-number">2147483647</span> &amp; b)),<br>            <span class="hljs-string">&quot;&quot;</span>.<span class="hljs-title function_">concat</span>((b %= <span class="hljs-number">1e6</span>).<span class="hljs-title function_">toString</span>(), <span class="hljs-string">&quot;.&quot;</span>).<span class="hljs-title function_">concat</span>(b ^ f)<br>        &#125;<br></code></pre></td></tr></table></figure><p>接下来开始调式这个<code>js</code>代码，我这里用浏览器调式，先把上面<code>js</code>代码，写到<code>1.js</code>，再创建一个<code>1.html</code>调用该<code>js</code>文件，同时你也可以在这个<code>js</code>代码，下面加一句<code>console.log(sign(&quot;abc&quot;));</code></p><p>这样按你键盘上的<code>F12</code>，点击<code>console</code>，就能看到输出结果了</p><p><img src="https://pic.imgdb.cn/item/65d0e9709f345e8d03a2438c.png" alt=""></p><blockquote><p>错误 r变量未定义</p></blockquote><p>我们回去该函数，对<code>r</code>函数打断点，打两次 发现值还是不变，得到该函数说个定值，得到<code>r=&quot;320305.131321201&quot;</code></p><p><img src="https://pic.imgdb.cn/item/65d0ea8b9f345e8d03a5eb45.png" alt=""></p><p>再把<code>r</code>函数补充回去，然后<code>n</code>函数也报错，也是未定义</p><p><img src="https://pic.imgdb.cn/item/65d0eb849f345e8d03a90e29.png" alt=""></p><p><img src="https://pic.imgdb.cn/item/65d0ebbc9f345e8d03a9bdbf.png" alt=""></p><p>可以看的<code>n</code>函数属于一个类，返回到刚刚的<code>js</code>，把<code>n</code>函数复制过来</p><p><img src="https://pic.imgdb.cn/item/65d0ec1e9f345e8d03aaf11d.png" alt=""></p><p>再调用一下，发现没报错了，获得计算出来的<code>sign</code>，可以看到和官方计算的一致</p><p><img src="https://pic.imgdb.cn/item/65d0ecb39f345e8d03acb010.png" alt=""></p><p>最后的<code>js</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><code class="hljs javascript"> <span class="hljs-keyword">function</span> <span class="hljs-title function_">n</span>(<span class="hljs-params">t, e</span>) &#123;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> n = <span class="hljs-number">0</span>; n &lt; e.<span class="hljs-property">length</span> - <span class="hljs-number">2</span>; n += <span class="hljs-number">3</span>) &#123;<br>                <span class="hljs-keyword">var</span> r = e.<span class="hljs-title function_">charAt</span>(n + <span class="hljs-number">2</span>);<br>                r = <span class="hljs-string">&quot;a&quot;</span> &lt;= r ? r.<span class="hljs-title function_">charCodeAt</span>(<span class="hljs-number">0</span>) - <span class="hljs-number">87</span> : <span class="hljs-title class_">Number</span>(r),<br>                r = <span class="hljs-string">&quot;+&quot;</span> === e.<span class="hljs-title function_">charAt</span>(n + <span class="hljs-number">1</span>) ? t &gt;&gt;&gt; r : t &lt;&lt; r,<br>                t = <span class="hljs-string">&quot;+&quot;</span> === e.<span class="hljs-title function_">charAt</span>(n) ? t + r &amp; <span class="hljs-number">4294967295</span> : t ^ r<br>            &#125;<br>            <span class="hljs-keyword">return</span> t<br>&#125;<br><span class="hljs-keyword">var</span> r =<span class="hljs-string">&quot;320305.131321201&quot;</span>;<br>sign = <span class="hljs-keyword">function</span>(<span class="hljs-params">t</span>) &#123;<br>            <span class="hljs-keyword">var</span> o, i = t.<span class="hljs-title function_">match</span>(<span class="hljs-regexp">/[\uD800-\uDBFF][\uDC00-\uDFFF]/g</span>);<br>            <span class="hljs-keyword">if</span> (<span class="hljs-literal">null</span> === i) &#123;<br>                <span class="hljs-keyword">var</span> a = t.<span class="hljs-property">length</span>;<br>                a &gt; <span class="hljs-number">30</span> &amp;&amp; (t = <span class="hljs-string">&quot;&quot;</span>.<span class="hljs-title function_">concat</span>(t.<span class="hljs-title function_">substr</span>(<span class="hljs-number">0</span>, <span class="hljs-number">10</span>)).<span class="hljs-title function_">concat</span>(t.<span class="hljs-title function_">substr</span>(<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>(a / <span class="hljs-number">2</span>) - <span class="hljs-number">5</span>, <span class="hljs-number">10</span>)).<span class="hljs-title function_">concat</span>(t.<span class="hljs-title function_">substr</span>(-<span class="hljs-number">10</span>, <span class="hljs-number">10</span>)))<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> s = t.<span class="hljs-title function_">split</span>(<span class="hljs-regexp">/[\uD800-\uDBFF][\uDC00-\uDFFF]/</span>), c = <span class="hljs-number">0</span>, u = s.<span class="hljs-property">length</span>, l = []; c &lt; u; c++)<br>                    <span class="hljs-string">&quot;&quot;</span> !== s[c] &amp;&amp; l.<span class="hljs-property">push</span>.<span class="hljs-title function_">apply</span>(l, <span class="hljs-keyword">function</span>(<span class="hljs-params">t</span>) &#123;<br>                        <span class="hljs-keyword">if</span> (<span class="hljs-title class_">Array</span>.<span class="hljs-title function_">isArray</span>(t))<br>                            <span class="hljs-keyword">return</span> <span class="hljs-title function_">e</span>(t)<br>                    &#125;(o = s[c].<span class="hljs-title function_">split</span>(<span class="hljs-string">&quot;&quot;</span>)) || <span class="hljs-keyword">function</span>(<span class="hljs-params">t</span>) &#123;<br>                        <span class="hljs-keyword">if</span> (<span class="hljs-string">&quot;undefined&quot;</span> != <span class="hljs-keyword">typeof</span> <span class="hljs-title class_">Symbol</span> &amp;&amp; <span class="hljs-literal">null</span> != t[<span class="hljs-title class_">Symbol</span>.<span class="hljs-property">iterator</span>] || <span class="hljs-literal">null</span> != t[<span class="hljs-string">&quot;@@iterator&quot;</span>])<br>                            <span class="hljs-keyword">return</span> <span class="hljs-title class_">Array</span>.<span class="hljs-title function_">from</span>(t)<br>                    &#125;(o) || <span class="hljs-keyword">function</span>(<span class="hljs-params">t, n</span>) &#123;<br>                        <span class="hljs-keyword">if</span> (t) &#123;<br>                            <span class="hljs-keyword">if</span> (<span class="hljs-string">&quot;string&quot;</span> == <span class="hljs-keyword">typeof</span> t)<br>                                <span class="hljs-keyword">return</span> <span class="hljs-title function_">e</span>(t, n);<br>                            <span class="hljs-keyword">var</span> r =<span class="hljs-title class_">Object</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">toString</span>.<span class="hljs-title function_">call</span>(t).<span class="hljs-title function_">slice</span>(<span class="hljs-number">8</span>, -<span class="hljs-number">1</span>);<br>                            <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;Object&quot;</span> === r &amp;&amp; t.<span class="hljs-property">constructor</span> &amp;&amp; (r = t.<span class="hljs-property">constructor</span>.<span class="hljs-property">name</span>),<br>                            <span class="hljs-string">&quot;Map&quot;</span> === r || <span class="hljs-string">&quot;Set&quot;</span> === r ? <span class="hljs-title class_">Array</span>.<span class="hljs-title function_">from</span>(t) : <span class="hljs-string">&quot;Arguments&quot;</span> === r || <span class="hljs-regexp">/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/</span>.<span class="hljs-title function_">test</span>(r) ? <span class="hljs-title function_">e</span>(t, n) : <span class="hljs-keyword">void</span> <span class="hljs-number">0</span><br>                        &#125;<br>                    &#125;(o) || <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>                        <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">TypeError</span>(<span class="hljs-string">&quot;Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.&quot;</span>)<br>                    &#125;()),<br>                    c !== u - <span class="hljs-number">1</span> &amp;&amp; l.<span class="hljs-title function_">push</span>(i[c]);<br>                <span class="hljs-keyword">var</span> p = l.<span class="hljs-property">length</span>;<br>                p &gt; <span class="hljs-number">30</span> &amp;&amp; (t = l.<span class="hljs-title function_">slice</span>(<span class="hljs-number">0</span>, <span class="hljs-number">10</span>).<span class="hljs-title function_">join</span>(<span class="hljs-string">&quot;&quot;</span>) + l.<span class="hljs-title function_">slice</span>(<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>(p / <span class="hljs-number">2</span>) - <span class="hljs-number">5</span>, <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>(p / <span class="hljs-number">2</span>) + <span class="hljs-number">5</span>).<span class="hljs-title function_">join</span>(<span class="hljs-string">&quot;&quot;</span>) + l.<span class="hljs-title function_">slice</span>(-<span class="hljs-number">10</span>).<span class="hljs-title function_">join</span>(<span class="hljs-string">&quot;&quot;</span>))<br>            &#125;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> d = <span class="hljs-string">&quot;&quot;</span>.<span class="hljs-title function_">concat</span>(<span class="hljs-title class_">String</span>.<span class="hljs-title function_">fromCharCode</span>(<span class="hljs-number">103</span>)).<span class="hljs-title function_">concat</span>(<span class="hljs-title class_">String</span>.<span class="hljs-title function_">fromCharCode</span>(<span class="hljs-number">116</span>)).<span class="hljs-title function_">concat</span>(<span class="hljs-title class_">String</span>.<span class="hljs-title function_">fromCharCode</span>(<span class="hljs-number">107</span>)), h = (<span class="hljs-literal">null</span> !== r ? r : (r = <span class="hljs-variable language_">window</span>[d] || <span class="hljs-string">&quot;&quot;</span>) || <span class="hljs-string">&quot;&quot;</span>).<span class="hljs-title function_">split</span>(<span class="hljs-string">&quot;.&quot;</span>), f = <span class="hljs-title class_">Number</span>(h[<span class="hljs-number">0</span>]) || <span class="hljs-number">0</span>, m = <span class="hljs-title class_">Number</span>(h[<span class="hljs-number">1</span>]) || <span class="hljs-number">0</span>, g = [], y = <span class="hljs-number">0</span>, v = <span class="hljs-number">0</span>; v &lt; t.<span class="hljs-property">length</span>; v++) &#123;<br>                <span class="hljs-keyword">var</span> _ = t.<span class="hljs-title function_">charCodeAt</span>(v);<br>                _ &lt; <span class="hljs-number">128</span> ? g[y++] = _ : (_ &lt; <span class="hljs-number">2048</span> ? g[y++] = _ &gt;&gt; <span class="hljs-number">6</span> | <span class="hljs-number">192</span> : (<span class="hljs-number">55296</span> == (<span class="hljs-number">64512</span> &amp; _) &amp;&amp; v + <span class="hljs-number">1</span> &lt; t.<span class="hljs-property">length</span> &amp;&amp; <span class="hljs-number">56320</span> == (<span class="hljs-number">64512</span> &amp; t.<span class="hljs-title function_">charCodeAt</span>(v + <span class="hljs-number">1</span>)) ? (_ = <span class="hljs-number">65536</span> + ((<span class="hljs-number">1023</span> &amp; _) &lt;&lt; <span class="hljs-number">10</span>) + (<span class="hljs-number">1023</span> &amp; t.<span class="hljs-title function_">charCodeAt</span>(++v)),<br>                g[y++] = _ &gt;&gt; <span class="hljs-number">18</span> | <span class="hljs-number">240</span>,<br>                g[y++] = _ &gt;&gt; <span class="hljs-number">12</span> &amp; <span class="hljs-number">63</span> | <span class="hljs-number">128</span>) : g[y++] = _ &gt;&gt; <span class="hljs-number">12</span> | <span class="hljs-number">224</span>,<br>                g[y++] = _ &gt;&gt; <span class="hljs-number">6</span> &amp; <span class="hljs-number">63</span> | <span class="hljs-number">128</span>),<br>                g[y++] = <span class="hljs-number">63</span> &amp; _ | <span class="hljs-number">128</span>)<br>            &#125;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> b = f, w = <span class="hljs-string">&quot;&quot;</span>.<span class="hljs-title function_">concat</span>(<span class="hljs-title class_">String</span>.<span class="hljs-title function_">fromCharCode</span>(<span class="hljs-number">43</span>)).<span class="hljs-title function_">concat</span>(<span class="hljs-title class_">String</span>.<span class="hljs-title function_">fromCharCode</span>(<span class="hljs-number">45</span>)).<span class="hljs-title function_">concat</span>(<span class="hljs-title class_">String</span>.<span class="hljs-title function_">fromCharCode</span>(<span class="hljs-number">97</span>)) + <span class="hljs-string">&quot;&quot;</span>.<span class="hljs-title function_">concat</span>(<span class="hljs-title class_">String</span>.<span class="hljs-title function_">fromCharCode</span>(<span class="hljs-number">94</span>)).<span class="hljs-title function_">concat</span>(<span class="hljs-title class_">String</span>.<span class="hljs-title function_">fromCharCode</span>(<span class="hljs-number">43</span>)).<span class="hljs-title function_">concat</span>(<span class="hljs-title class_">String</span>.<span class="hljs-title function_">fromCharCode</span>(<span class="hljs-number">54</span>)), k = <span class="hljs-string">&quot;&quot;</span>.<span class="hljs-title function_">concat</span>(<span class="hljs-title class_">String</span>.<span class="hljs-title function_">fromCharCode</span>(<span class="hljs-number">43</span>)).<span class="hljs-title function_">concat</span>(<span class="hljs-title class_">String</span>.<span class="hljs-title function_">fromCharCode</span>(<span class="hljs-number">45</span>)).<span class="hljs-title function_">concat</span>(<span class="hljs-title class_">String</span>.<span class="hljs-title function_">fromCharCode</span>(<span class="hljs-number">51</span>)) + <span class="hljs-string">&quot;&quot;</span>.<span class="hljs-title function_">concat</span>(<span class="hljs-title class_">String</span>.<span class="hljs-title function_">fromCharCode</span>(<span class="hljs-number">94</span>)).<span class="hljs-title function_">concat</span>(<span class="hljs-title class_">String</span>.<span class="hljs-title function_">fromCharCode</span>(<span class="hljs-number">43</span>)).<span class="hljs-title function_">concat</span>(<span class="hljs-title class_">String</span>.<span class="hljs-title function_">fromCharCode</span>(<span class="hljs-number">98</span>)) + <span class="hljs-string">&quot;&quot;</span>.<span class="hljs-title function_">concat</span>(<span class="hljs-title class_">String</span>.<span class="hljs-title function_">fromCharCode</span>(<span class="hljs-number">43</span>)).<span class="hljs-title function_">concat</span>(<span class="hljs-title class_">String</span>.<span class="hljs-title function_">fromCharCode</span>(<span class="hljs-number">45</span>)).<span class="hljs-title function_">concat</span>(<span class="hljs-title class_">String</span>.<span class="hljs-title function_">fromCharCode</span>(<span class="hljs-number">102</span>)), x = <span class="hljs-number">0</span>; x &lt; g.<span class="hljs-property">length</span>; x++)<br>                b = <span class="hljs-title function_">n</span>(b += g[x], w);<br>            <span class="hljs-keyword">return</span> b = <span class="hljs-title function_">n</span>(b, k),<br>            (b ^= m) &lt; <span class="hljs-number">0</span> &amp;&amp; (b = <span class="hljs-number">2147483648</span> + (<span class="hljs-number">2147483647</span> &amp; b)),<br>            <span class="hljs-string">&quot;&quot;</span>.<span class="hljs-title function_">concat</span>((b %= <span class="hljs-number">1e6</span>).<span class="hljs-title function_">toString</span>(), <span class="hljs-string">&quot;.&quot;</span>).<span class="hljs-title function_">concat</span>(b ^ f)<br>        &#125;<br><br></code></pre></td></tr></table></figure><hr><h2 id="示例文件">示例文件</h2><p>参数都分析完了，可以去写成<code>python</code>爬虫，<code>python</code>有个可以执行<code>js</code>的库，叫<code>execjs</code></p><p>以下是示例代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> execjs<br><span class="hljs-keyword">import</span> httpx<br><br>a_ = <span class="hljs-string">&quot;123454&quot;</span> <span class="hljs-comment"># 要翻译的内容</span><br><br><span class="hljs-keyword">global</span> l<br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;1.js&quot;</span>,<span class="hljs-string">&quot;r&quot;</span>,encoding=<span class="hljs-string">&quot;utf_8&quot;</span>) <span class="hljs-keyword">as</span> f:<br>    l = f.read()<br>    f.close()<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">get_sign</span>(<span class="hljs-params">t</span>):<br>    o = execjs.<span class="hljs-built_in">compile</span>(l)<br>    <span class="hljs-keyword">return</span> o.<span class="hljs-built_in">eval</span>(<span class="hljs-string">f&#x27;sign(&quot;<span class="hljs-subst">&#123;t&#125;</span>&quot;)&#x27;</span>)<br><br>a = httpx.post(<br>    url=<span class="hljs-string">&quot;https://fanyi.baidu.com/v2transapi?from=zh&amp;to=en&quot;</span>,<br>    headers=&#123;<br>        <span class="hljs-string">&quot;Content-Type&quot;</span>:<span class="hljs-string">&quot;application/x-www-form-urlencoded&quot;</span>,<br>        <span class="hljs-string">&quot;Referer&quot;</span>:<span class="hljs-string">&quot;https://fanyi.baidu.com/?aldtype=16047&amp;ext_channel=Aldtype&quot;</span>,<br>        <span class="hljs-string">&quot;User-Agent&quot;</span>:<span class="hljs-string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.110 Safari/537.36&quot;</span>,<br>        <span class="hljs-string">&quot;Cookie&quot;</span>:<span class="hljs-string">&quot;BIDUPSID=CC748520E2E056F7B2519245A2119494; PSTM=1705042679; newlogin=1; BAIDUID=CC748520E2E056F7AF71947BEC84B6DB:SL=0:NR=10:FG=1; APPGUIDE_10_6_9=1; REALTIME_TRANS_SWITCH=1; FANYI_WORD_SWITCH=1; HISTORY_SWITCH=1; SOUND_SPD_SWITCH=1; SOUND_PREFER_SWITCH=1; H_PS_PSSID=40124_40201_40210_40207_40215_40224_40059; H_WISE_SIDS_BFESS=40124_40201_40210_40207_40215_40224; MCITY=-%3A; BA_HECTOR=2ga58ga1a02ga48g008hak85la62q21it1klb1s; BAIDUID_BFESS=CC748520E2E056F7AF71947BEC84B6DB:SL=0:NR=10:FG=1; ZFY=zQm4gfD8FyBjiADoVhXYxys90nEGWKbjkR6Chhyw1GY:C; H_WISE_SIDS=40124_40201_40210_40207_40215_40224_40059; BDORZ=B490B5EBF6F3CD402E515D22BCDA1598; Hm_lvt_64ecd82404c51e03dc91cb9e8c025574=1708188279,1708188554,1708188691,1708191917; Hm_lpvt_64ecd82404c51e03dc91cb9e8c025574=1708191920; ab_sr=1.0.1_YWM1YTg2NzQwNjFkZGU3MzhmMzljMGU1YzAyZDk5NWQ0M2NiODYyMGQyZDJlYmFlZGYyN2ExOTZiMWFmMWQ2ZTU1M2MzYjdjMzBhYmQ0NzE2YWZlNDg3NmQ5ZTBmYjVjNmE1OTgzZjczZTcwMzdlZjhiMDhiNDBhZTgzZDZjNTMzYTg1ZmRmODVlYjY4MGM2ZjEzNTczYmRkNDQ5YjY3OA==&quot;</span><br>    &#125;,<br>    data=&#123;<br>        <span class="hljs-string">&quot;from&quot;</span>:<span class="hljs-string">&quot;zh&quot;</span>,<br>        <span class="hljs-string">&quot;to&quot;</span>:<span class="hljs-string">&quot;en&quot;</span>,<br>        <span class="hljs-string">&quot;query&quot;</span>:a_,<br>        <span class="hljs-string">&quot;transtype&quot;</span>:<span class="hljs-string">&quot;translang&quot;</span>,<br>        <span class="hljs-string">&quot;simple_means_flag&quot;</span>:<span class="hljs-number">3</span>,<br>        <span class="hljs-string">&quot;sign&quot;</span>:get_sign(a_),<br>        <span class="hljs-string">&quot;token&quot;</span>:<span class="hljs-string">&quot;d8536631afc6444316453f86746e3a4a&quot;</span>,<br>        <span class="hljs-string">&quot;domain&quot;</span>:<span class="hljs-string">&quot;common&quot;</span><br>    &#125;<br>)<br><br><span class="hljs-built_in">print</span>(a.text)<br></code></pre></td></tr></table></figure><hr><h2 id="最后">最后</h2><p>编写不易</p>]]></content>
    
    
    <categories>
      
      <category>web逆向</category>
      
      <category>翻译类</category>
      
    </categories>
    
    
    <tags>
      
      <tag>code</tag>
      
      <tag>编程</tag>
      
      <tag>python</tag>
      
      <tag>js逆向</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>华为骁龙8+全系列 解锁bl</title>
    <link href="/2024/02/05/huawei_bootloader/"/>
    <url>/2024/02/05/huawei_bootloader/</url>
    
    <content type="html"><![CDATA[<p>鉴于作者@AdmieWang,被华为找上门,故已撤稿</p>]]></content>
    
    
    <categories>
      
      <category>解锁bl</category>
      
    </categories>
    
    
    <tags>
      
      <tag>bootloader</tag>
      
      <tag>刷机</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Nonebot-Plugin-Easy-Blacklist 黑名单插件</title>
    <link href="/2024/02/02/nonebot_plugin_easy_blacklist/"/>
    <url>/2024/02/02/nonebot_plugin_easy_blacklist/</url>
    
    <content type="html"><![CDATA[<div align="center">  <a href="https://v2.nonebot.dev/store"><img src="https://cdn.bingyue.top/nbp_logo.png" width="180" height="180" alt="NoneBotPluginLogo"></a>    <h2>Nonebot-Plugin-easy-blacklist<h2>    <br></br>    _✨ 一个轻量级的黑名单插件,支持api接入全平台,内存占用优化中✨_    <br></br></div><h2 id="如何下载">如何下载</h2><p><strong>两种方法，一种pip安装，一种nb安装</strong></p><p>1.<code>nonebot</code>安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">nb plugin install nonebot-plugin-easy-blacklist<br></code></pre></td></tr></table></figure><p>1.<code>pip</code>安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">pip install nonebot-plugin-easy-blacklist<br></code></pre></td></tr></table></figure><hr><h2 id="配置项">配置项</h2><p><strong>schedule_save_blacklist</strong></p><span id="more"></span><p>类型:<code>bool</code></p><blockquote><p>定时保存黑名单数据，如果在消息量大的场景建议定时保存，默认是False</p></blockquote><p><strong>schedule_save_time</strong></p><p>类型:<code>int</code></p><blockquote><p>隔多久保存一次数据，默认为120，也就是120秒</p></blockquote><hr><h2 id="指令">指令</h2><ul><li>添加黑名单+<code>艾特[QQ号]</code>+空格+原因 <strong>可以不填写原因</strong></li><li>删除黑名单+<code>[QQ号]</code></li><li>搜索黑名单+<code>[QQ号]</code> <strong>可批量搜索见如下示例</strong></li></ul><p><img src="https://pic.imgdb.cn/item/65b7abdf871b83018aa99e0c.png" alt=""></p><hr><h2 id="规则">规则</h2><blockquote><p>注:规则功能仅支持onebot11</p></blockquote><p>如果你需要添加一个功能，而这个功能黑名单用户不能用，我们的api模块还提供了<code>check_hmd</code>参数，添加方法如下</p><p>改之前</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">a = on_command(<span class="hljs-string">&quot;test&quot;</span>)<br></code></pre></td></tr></table></figure><p>改之后</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">a = on_command(<span class="hljs-string">&quot;test&quot;</span>,rule=check_hmd)<br></code></pre></td></tr></table></figure><hr><h2 id="功能性">功能性</h2><ul><li>[x] 添加黑名单</li><li>[x] 删除黑名单</li><li>[x] 搜索黑名单</li><li>[x] 批量添加黑名单</li><li>[x] 批量搜索黑名单</li><li>[x] 批量删除黑名单</li><li>[x] 快速搜索</li><li>[x] 开放<code>API</code></li></ul><hr><h2 id="API文档">API文档</h2><p><strong>API调用如下代码所示</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> nonebot <span class="hljs-keyword">import</span> require,on_command<br>require(<span class="hljs-string">&quot;nonebot_plugin_easy_blacklist&quot;</span>)<br><span class="hljs-keyword">from</span> nonebot_plugin_easy_blacklist <span class="hljs-keyword">import</span> api<br><br>a = on_command(<span class="hljs-string">&quot;test&quot;</span>)<br><br><span class="hljs-meta">@a.handle()</span><br><span class="hljs-keyword">async</span> <span class="hljs-keyword">def</span> <span class="hljs-title function_">_</span>():<br>    api.add_black(qq=<span class="hljs-string">&quot;111&quot;</span>,time=-<span class="hljs-number">1</span>,ly=<span class="hljs-string">&quot;111&quot;</span>,account=-<span class="hljs-number">1</span>)<br>    <span class="hljs-keyword">await</span> a.finish(<span class="hljs-string">&quot;ok&quot;</span>)<br></code></pre></td></tr></table></figure><h3 id="API大全">API大全</h3><h4 id="添加黑名单">添加黑名单</h4><ul><li>地址:<strong>api.add_black</strong></li></ul><p>请求参数</p><table><thead><tr><th style="text-align:center">qq</th><th style="text-align:center">账号id</th><th style="text-align:center">必填</th></tr></thead><tbody><tr><td style="text-align:center">time</td><td style="text-align:center">添加时间，用时间截表示</td><td style="text-align:center">必填</td></tr><tr><td style="text-align:center">ly</td><td style="text-align:center">添加原因，不想填可用&quot;&quot;</td><td style="text-align:center">必填</td></tr><tr><td style="text-align:center">account</td><td style="text-align:center">添加人的id</td><td style="text-align:center">必填</td></tr></tbody></table><p>返回参数 <strong>bool</strong></p><table><thead><tr><th>bool</th><th>返回值为True</th><th>表示添加成功</th></tr></thead></table><hr><h4 id="搜索黑名单">搜索黑名单</h4><ul><li>地址:<strong>api.search</strong></li></ul><p>请求参数</p><table><thead><tr><th>qq</th><th>账号id</th><th>必填</th></tr></thead></table><p>返回参数 <strong>List[bool,time,account,ly]</strong></p><table><thead><tr><th>bool</th><th>False代表不存在，True代表存在</th><th>获取的结果</th></tr></thead><tbody><tr><td>time</td><td>加入该黑名单的时间</td><td>加入该黑名单的时间</td></tr><tr><td>account</td><td>添加人的id</td><td>添加人的id</td></tr><tr><td>ly</td><td>添加你为黑名单的理由</td><td>理由</td></tr></tbody></table><hr><h4 id="删除黑名单">删除黑名单</h4><ul><li>地址:<strong>api.del_black</strong></li></ul><p>请求参数</p><table><thead><tr><th>qq</th><th>删除的id</th><th>删除的id</th></tr></thead></table><p>返回参数 <strong>bool</strong></p><table><thead><tr><th>bool</th><th>返回值为True</th><th>表示删除成功</th></tr></thead></table><hr><h4 id="批量添加黑名单">批量添加黑名单</h4><ul><li>地址:<strong>api.many_add</strong></li></ul><p>请求参数:<strong>List[[qq,time,ly,account],[qq,time,ly,account]]</strong></p><table><thead><tr><th style="text-align:center">qq</th><th style="text-align:center">账号id</th><th style="text-align:center">必填</th></tr></thead><tbody><tr><td style="text-align:center">time</td><td style="text-align:center">添加时间，用时间截表示</td><td style="text-align:center">必填</td></tr><tr><td style="text-align:center">ly</td><td style="text-align:center">添加原因，不想填可用&quot;&quot;</td><td style="text-align:center">必填</td></tr><tr><td style="text-align:center">account</td><td style="text-align:center">添加人的id</td><td style="text-align:center">必填</td></tr></tbody></table><p>返回参数 <strong>bool</strong></p><table><thead><tr><th>bool</th><th>返回值为True</th><th>表示删除成功</th></tr></thead></table><hr><h4 id="批量搜索黑名单">批量搜索黑名单</h4><ul><li>地址:<strong>api.many_search</strong></li></ul><p>请求参数:<strong>List[qq,qq,qq]</strong></p><table><thead><tr><th>qq</th><th>账号id</th><th>你要查找的账号id</th></tr></thead></table><p>返回参数:<strong>List[[bool,time,account,ly],[bool,time,account,ly]]</strong></p><table><thead><tr><th>bool</th><th>False代表不存在，True代表存在</th><th>获取的结果</th></tr></thead><tbody><tr><td>time</td><td>加入该黑名单的时间</td><td>加入该黑名单的时间</td></tr><tr><td>account</td><td>添加人的id</td><td>添加人的id</td></tr><tr><td>ly</td><td>添加你为黑名单的理由</td><td>理由</td></tr></tbody></table><hr><h4 id="批量删除黑名单">批量删除黑名单</h4><ul><li>地址:<strong>api.many_del</strong></li></ul><p>请求参数:<strong>List[qq,qq,qq]</strong></p><table><thead><tr><th>qq</th><th>账号id</th><th>你要查找的账号id</th></tr></thead><tbody><tr><td></td><td></td><td></td></tr></tbody></table><p>返回参数:<strong>List[bool,bool]</strong></p><table><thead><tr><th>bool</th><th>返回值为True</th><th>表示删除成功</th></tr></thead><tbody><tr><td></td><td></td><td></td></tr></tbody></table><hr><h2 id="性能">性能</h2><blockquote><p>实测数据，因电脑配置不同，仅供参考</p></blockquote><p><strong>在黑名单id数量10000000，内存占用266m，1秒内可以被搜索93万次</strong></p>]]></content>
    
    
    <categories>
      
      <category>nonebot项目</category>
      
    </categories>
    
    
    <tags>
      
      <tag>python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>解决pypi上传模块Username/Password authentication is no longer supported</title>
    <link href="/2024/01/30/pypi_upload/"/>
    <url>/2024/01/30/pypi_upload/</url>
    
    <content type="html"><![CDATA[<p>博主在上传<code>py</code>模块的时候，发生了如下的报错</p><span id="more"></span><p><img src="https://pic.imgdb.cn/item/65b9175d871b83018ae768ad.png" alt=""></p><h2 id="分析问题">分析问题</h2><p><strong>从英文语句中的</strong>，<code>Username/Password authentication is no longer supported. Migrate to API Tokens or Trusted Publishers instead.</code></p><p>翻译过来就是，<strong>账号密码上传模块已不再支持，请使用api令牌或者其他认证方法</strong></p><hr><h2 id="解决方案">解决方案</h2><blockquote><p>网页翻译由@bingyue 提供</p></blockquote><p><strong><a href="http://1.xn--pypi-9z2h93o.org">1.打开pypi.org</a>，去注册api令牌</strong></p><p><img src="https://pic.imgdb.cn/item/65b918ba871b83018aed8568.png" alt=""></p><p>一路下滑 直到<code>Api token</code></p><p><img src="https://pic.imgdb.cn/item/65b91a15871b83018af37043.png" alt=""></p><p><img src="https://pic.imgdb.cn/item/65b91a9b871b83018af5bc8b.png" alt=""></p><p><img src="https://pic.imgdb.cn/item/65b91b56871b83018af8e718.png" alt=""></p><hr><p>2.现在去上传模块，按照他的步骤所示</p><p><strong>由于我这里已经上传过了，他的报错是存在同样的版本</strong></p><p><img src="https://pic.imgdb.cn/item/65b91ba2871b83018afa2b49.png" alt=""></p>]]></content>
    
    
    <categories>
      
      <category>code</category>
      
    </categories>
    
    
    <tags>
      
      <tag>python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Git配置ssh代理</title>
    <link href="/2024/01/30/git_ssh/"/>
    <url>/2024/01/30/git_ssh/</url>
    
    <content type="html"><![CDATA[<p>今天在推送博客文件的时候，发现<code>Github</code>连接不了，一直报<code>time_out</code></p><p>博主在查阅各种资料后，发现无论是单独配置<code>http</code>代理或者<code>socks5</code>代理，都无法<code>git push</code>成功</p><span id="more"></span><p>解决方法很简单，请看下面</p><p>1.<strong>首先打开你的科学上网的工具，这里博主使用的是v2ray</strong></p><p><img src="https://pic.imgdb.cn/item/65b914b6871b83018adb8edf.png" alt=""></p><p>注意看下面的本地<code>socks</code>和<code>http</code>，这是<strong>v2ray</strong>在你本地开的端口，请记住你的端口号，<strong>我这里是10808</strong></p><hr><p>2.打开你的文件管理，按如下路径查找<code>C盘-&gt;users-&gt;你的电脑用户名-&gt;.ssh</code></p><p><img src="https://pic.imgdb.cn/item/65b91530871b83018addace9.png" alt=""></p><p><strong>在这里新创建一个config文件，要无后缀的</strong>，然后输入如下内容</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs bash">ProxyCommand <span class="hljs-string">&quot;C:\Program Files\Git\mingw64\bin\connect&quot;</span> -S 127.0.0.1:10808 -a none %h %p<br><br>Host github.com<br>  User git<br>  Port 22<br>  Hostname github.com<br>  IdentityFile <span class="hljs-string">&quot;C:\Users\[你的电脑用户名]\.ssh\id_rsa&quot;</span><br>  TCPKeepAlive <span class="hljs-built_in">yes</span><br><br>Host ssh.github.com<br>  User git<br>  Port 22<br>  Hostname ssh.github.com<br>  IdentityFile <span class="hljs-string">&quot;C:\Users\[你的电脑用户名]\.ssh\id_rsa&quot;</span><br>  TCPKeepAlive <span class="hljs-built_in">yes</span><br></code></pre></td></tr></table></figure><p>保存退出</p><hr><p>3.检查是否可以连接</p><p>鼠标右键，选择<code>open Git bash here</code></p><blockquote><p>输入如下命令</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ssh -T git@github.com<br></code></pre></td></tr></table></figure><p>不出意外的话可以连接上了</p><p><img src="https://pic.imgdb.cn/item/65b915eb871b83018ae0f062.png" alt=""></p>]]></content>
    
    
    <categories>
      
      <category>Git</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Git</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>最新签名服务器配置1.13更新</title>
    <link href="/2024/01/13/qsign2/"/>
    <url>/2024/01/13/qsign2/</url>
    
    <content type="html"><![CDATA[<h2 id="配置签名服务器">配置签名服务器</h2><p>这里我给大家做了一个懒人包，下载链接放在这里了</p><span id="more"></span><p><a href="https://pan.baidu.com/s/1tzkUShaD3-lfuLpAcEKrnw?pwd=wnev">下载链接</a></p><p>下载解压之后，我们打开<code>txlib</code>这个文件夹</p><p><img src="https://pic.imgdb.cn/item/65a16211871b83018aada749.png" alt=""></p><p>可以看到，有很多个版本的协议，我这边推荐大家使用<code>8.9.85</code>协议，我们打开<code>8.9.85</code>这个文件夹</p><p><img src="https://pic.imgdb.cn/item/65a1625c871b83018aaeecfa.png" alt=""></p><p>打开<code>config.json</code></p><table><thead><tr><th>名称</th><th>用途</th><th>说明</th></tr></thead><tbody><tr><td>host</td><td>服务器地址</td><td>如果你想开公网就默认填写0.0.0.0 本地的话127.0.0.1</td></tr><tr><td>port</td><td>服务器端口</td><td>这边推荐四位数-五位数 看你喜欢</td></tr><tr><td>key</td><td>签名服务器的密钥</td><td>你可以理解为签名服务器有密码，这个key就是你设置的密码</td></tr></tbody></table><p><img src="https://pic.imgdb.cn/item/65a1633f871b83018ab31339.png" alt=""></p><p>这里我改好了，保存退出</p><p>返回到主页</p><p><img src="https://pic.imgdb.cn/item/65a163bb871b83018ab5332f.png" alt=""></p><p>根据你使用的操作系统打开对应的启动脚本</p><p>如果不出意外你的签名服务器就启动了，牢记你的<code>host</code>和<code>port</code>和<code>key</code></p><h2 id="配置go-cqhttp">配置go-cqhttp</h2><p>这里推荐大家使用新版<code>go-cqhttp</code>，下载地址-&gt;<a href="https://github.com/Mrs4s/go-cqhttp/releases/tag/v1.2.0">点我</a></p><p>我们回到协议文件目录下，注意看这个<code>android_pad.json</code>和<code>android_phone.json</code></p><p><img src="https://pic.imgdb.cn/item/65a16443871b83018ab7a044.png" alt=""></p><p>具体看你想用哪个协议，我这里用<code>pad</code>做个例子，把这个<code>android_pad.json</code>复制到你的<code>go-cqhttp</code>的文件目录<code>./data/versions/里</code></p><p><img src="https://pic.imgdb.cn/item/65a16520871b83018abbdf62.png" alt=""></p><p>这里把你复制过来的文件改个名字，我这边改成<code>6.json</code></p><p><img src="https://pic.imgdb.cn/item/65a20236871b83018a11a22e.png" alt=""></p><p>完事之后，返回你cq的根目录</p><p>打开你的cq配置文件</p><p><img src="https://pic.imgdb.cn/item/65a1655c871b83018abcf384.png" alt=""></p><p>找到签名服务器配置选项目，按以下要求修改</p><ul><li>sign-server填写<code>http://&#123;host&#125;:&#123;port&#125;</code></li><li>key填写你设置好的</li></ul><p>保存退出，然后启动你的<code>go-cqhttp</code>和签名服务器吧</p><h2 id="分享签名">分享签名</h2><p>这边呢，博主搭了一个签名服务器，需要的话点击博客边栏上的notes吧</p>]]></content>
    
    
    <categories>
      
      <category>qq机器人</category>
      
    </categories>
    
    
    <tags>
      
      <tag>qq机器人</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>聊天系统</title>
    <link href="/2024/01/10/chat_system/"/>
    <url>/2024/01/10/chat_system/</url>
    
    <content type="html"><![CDATA[<h2 id="预告">预告</h2><p>寒假上线，一个轻量级的聊天工具</p>]]></content>
    
    
    <categories>
      
      <category>code</category>
      
    </categories>
    
    
    <tags>
      
      <tag>c++</tag>
      
      <tag>chat</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>新UIQQ9.0体验测评</title>
    <link href="/2023/12/24/qq9/"/>
    <url>/2023/12/24/qq9/</url>
    
    <content type="html"><![CDATA[<h2 id="🍕年末了">🍕年末了</h2><p>新年即将来了，在这此我网站也挂上了特效，不过今天聊的可不是代码，而是腾讯的qq</p><p>在前几天的时候，出来了一个手机QQ<code>9.0.0 14110</code></p><p>下载链接-&gt;<a href="https://downv6.qq.com/qqweb/QQ_1/android_apk/Android_9.0.0_64.apk">点我</a></p><p>让我们来看看qq9的变化</p><span id="more"></span><h2 id="🍒变化">🍒变化</h2><p>1.个人认为提升最大是整体的<code>ui</code>，以及刷新时候的小圆圈(<s>配置较低的手机，容易掉帧</s>)</p><p><img src="https://pic.imgdb.cn/item/6587cb15c458853aef298ee6.jpg" alt="页面布局" style="zoom: 50%;" /><img src="https://pic.imgdb.cn/item/6587cb82c458853aef2bc003.jpg" style="zoom:50%;" /></p><p>2.关于页面变了</p><ul><li>注 上面的企鹅logo是可以用手滑动的立体</li><li>同时下面也出现了<code>QQNT</code></li><li>小图标变动</li></ul><img src="https://pic.imgdb.cn/item/6587cc26c458853aef2ebda4.jpg" style="zoom:50%;" /><p>3.个人关系的多样 可以选择<code>游戏搭子</code>，<code>学习搭子</code> 纯属图一乐功能</p><p><s>但是竟然还有王者搭子，和元梦搭子，我呸</s></p><img src="https://pic.imgdb.cn/item/6587ccdcc458853aef322321.jpg" style="zoom:50%;" /><p>4.设置页面的排布整洁</p><p><img src="https://pic.imgdb.cn/item/6587cdb8c458853aef35e998.jpg" style="zoom:50%;" /><img src="https://pic.imgdb.cn/item/6587cdcec458853aef365e40.jpg" style="zoom:50%;" /></p><p>5.群管理</p><p>以前的时候群功能简直一团糟，各种功能集合在一起，现在这万年不变的页面终于改了</p><p>新增了<code>群成员去重</code>,<code>演员换群</code>，<code>多群管理</code></p><p><img src="https://pic.imgdb.cn/item/6587cebec458853aef3a3141.jpg" style="zoom:50%;" /><img src="https://pic.imgdb.cn/item/6587cedfc458853aef3acb40.jpg" style="zoom:50%;" /><img src="https://pic.imgdb.cn/item/6587cef9c458853aef3b52ba.jpg" style="zoom:50%;" /><img src="https://pic.imgdb.cn/item/6587cf12c458853aef3bd3dd.jpg" style="zoom:50%;" /></p><p>6.新增动画效果</p><p>这里就不演示了，自己去下载安装包摸索去吧</p><p>以下为更新日志</p><h2 id="🍉更新日志">🍉更新日志</h2><p><strong>官方更新日志</strong></p><ul><li>界面轻盈焕新*，简洁纯粹、氛围轻松；</li><li>新增学习、运动搭子等密友关系，让好友与众不同;</li><li>超级 <code>QQ</code> 秀 6 大风格迷你窝随心选，以窝会友轻松体验串门惊喜；</li><li>在线状态自由定义，此刻情绪随心表达不设限;</li><li>新增群文件在线预览，支持多群管理等提效能力。</li></ul><p>感谢<code>QQ Update Log</code><a href="https://t.me/qq_updatelog">@qqupdatelog</a>各位群友的提供</p><p><strong>扩展更新日志</strong></p><ul><li>[适配] Honor Push (荣耀推送服务)</li><li>[新增] 动态广场任务中心与积分兑奖</li><li>[新增] 超级 <code>QQ</code> 秀-(头像)我的-创作中心</li></ul><p><strong>扩展优化日志</strong></p><ul><li>[更新] <code>MiPush SDK</code>*</li><li>[调整] 侧滑栏顶部图标大小、侧滑栏底部图标位置上移</li><li>[调整] 更换首页未读气泡内字体</li><li>[调整] 首页下拉刷新动画 <code>UI</code></li><li>[调整] 侧滑栏我的文件图层、面对面快传-最近文件图层</li><li>[调整] 好友聊天页-好友昵称、互动标识、在线状态居左</li><li>[调整] 群聊界面-未读提醒气泡 位置下移</li><li>[调整] 聊天界面加深引用回复框的底色</li><li>[调整] 迭代长按消息菜单 <code>UI</code></li><li>[调整] 聊天界面下左上角未读气泡新增动画效果</li><li>[调整] 群聊代办/一起听/语音/视频电话 <code>UI</code> 为浮窗样式，并增加过渡动画，首页新增展示正在进行的语音/视频电话</li><li>[调整] 群聊设置页群应用位置，合并部分展示设置到个性设置内</li><li>[调整] 频道-(各频道内)消息通知 移动到一级页面</li><li>[调整] 频道-帖子列表 更换图标</li><li>[优化] 自适应启动页适配深色模式</li><li>[优化] 聊天界面加载消息性能</li><li>[优化] 好友聊天页-密友界面 <code>UI</code> (左滑聊天页可进入)</li><li>[优化] 首页-(接收中)加载动画</li><li>[优化] 二次确认弹窗 标题与按钮字体加粗</li><li>[优化] 群帖子/频道帖子 顶帖图标更换为爱心图标</li><li>[优化] 群列表-群头像右下角的免打扰不提醒、屏蔽群消息 Icon</li><li>[优化] 群成员列表首字母快速定位 <code>UI</code></li></ul><p><strong>扩展修复日志</strong></p><ul><li>[修复] 高频申请语音(麦克风)权限卡住的问题</li><li>[修复] 群文件顶栏沉浸异常问题</li><li>[修复] 调整字体大小群设置部分背景异常显示问题</li><li>[修复] 频道保存/转发他人头像时显示为自己头像的问题</li></ul><p><strong>注意以下事项</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">- 首页/联系人/动态页 仅普通模式才有变更；<br>- MiPush SDK 更新后，可正常点进聊天界面，支持 Push 消息下拉小窗等；<br>- 关于页单击 QQ 图标后进入彩蛋界面-QQ 追光者勋章(仅内测用户有授予勋章后可触发)<br></code></pre></td></tr></table></figure><h2 id="🍎吐槽">🍎吐槽</h2><p>由于<code>QQNT</code>用的是<s>浏览器架构</s>，非常占内存，那具体有多占呢，我这里分了三个场景测试</p><ul><li>图1为聊天页面</li><li>图2为频道页面</li><li>图3为空间页面</li></ul><p><img src="https://pic.imgdb.cn/item/6587d1c0c458853aef492018.jpg" style="zoom:50%;" /><img src="https://pic.imgdb.cn/item/6587d1f7c458853aef4a0bc8.jpg" style="zoom:50%;" /><img src="https://pic.imgdb.cn/item/6587d1ddc458853aef49aa33.jpg" style="zoom:50%;" /></p><p>这很腾讯，很符合国产<code>3a</code>大作</p><p>在某些场景下，会出现<code>gpu</code>大量占用，<strong>注：这里笔者手机root了，可以看得到gpu占用</strong></p><img src="https://pic.imgdb.cn/item/6587d2eac458853aef4e847e.jpg" style="zoom:50%;" /><p>希望能好好优化吧</p><h2 id="🍓最后">🍓最后</h2><p>新的一年即将到来，这里提前祝大家新年快乐</p>]]></content>
    
    
    <categories>
      
      <category>生活</category>
      
    </categories>
    
    
    <tags>
      
      <tag>日常</tag>
      
      <tag>QQNT</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>P1002 NOIP2002 普及组 过河卒 题解</title>
    <link href="/2023/12/15/p1002_luogu/"/>
    <url>/2023/12/15/p1002_luogu/</url>
    
    <content type="html"><![CDATA[<h2 id="题目描述">题目描述</h2><p>棋盘上 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span></span></span></span> 点有一个过河卒，需要走到目标 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>B</mi></mrow><annotation encoding="application/x-tex">B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span></span></span></span> 点。卒行走的规则：可以向下、或者向右。同时在棋盘上 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi></mrow><annotation encoding="application/x-tex">C</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span></span></span></span> 点有一个对方的马，该马所在的点和所有跳跃一步可达的点称为对方马的控制点。因此称之为“马拦过河卒”。</p><span id="more"></span><p>棋盘用坐标表示，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span></span></span></span> 点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mn>0</mn><mo separator="true">,</mo><mn>0</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(0, 0)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">0</span><span class="mclose">)</span></span></span></span>、<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>B</mi></mrow><annotation encoding="application/x-tex">B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span></span></span></span> 点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>n</mi><mo separator="true">,</mo><mi>m</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(n, m)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">m</span><span class="mclose">)</span></span></span></span>，同样马的位置坐标是需要给出的。</p><p><img src="https://cdn.luogu.com.cn/upload/image_hosting/ipmwl52i.png" alt=""></p><p>现在要求你计算出卒从 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span></span></span></span> 点能够到达 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>B</mi></mrow><annotation encoding="application/x-tex">B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span></span></span></span> 点的路径的条数，假设马的位置是固定不动的，并不是卒走一步马走一步。</p><h2 id="输入格式">输入格式</h2><p>一行四个正整数，分别表示 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>B</mi></mrow><annotation encoding="application/x-tex">B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span></span></span></span> 点坐标和马的坐标。</p><h2 id="输出格式">输出格式</h2><p>一个整数，表示所有的路径条数。</p><h2 id="样例-1">样例 #1</h2><h3 id="样例输入-1">样例输入 #1</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">6 </span><span class="hljs-number">6</span> <span class="hljs-number">3</span> <span class="hljs-number">3</span><br></code></pre></td></tr></table></figure><h3 id="样例输出-1">样例输出 #1</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">6<br></code></pre></td></tr></table></figure><h2 id="提示">提示</h2><p>对于 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>100</mn><mi mathvariant="normal">%</mi></mrow><annotation encoding="application/x-tex">100 \%</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8056em;vertical-align:-0.0556em;"></span><span class="mord">100%</span></span></span></span> 的数据，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>≤</mo><mi>n</mi><mo separator="true">,</mo><mi>m</mi><mo>≤</mo><mn>20</mn></mrow><annotation encoding="application/x-tex">1 \le n, m \le 20</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7804em;vertical-align:-0.136em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8304em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">n</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">20</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0</mn><mo>≤</mo></mrow><annotation encoding="application/x-tex">0 \le</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7804em;vertical-align:-0.136em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span></span></span></span> 马的坐标 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>≤</mo><mn>20</mn></mrow><annotation encoding="application/x-tex">\le 20</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719em;vertical-align:-0.136em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">20</span></span></span></span>。</p><p><strong>【题目来源】</strong></p><p>NOIP 2002 普及组第四题</p><h2 id="解题思路">解题思路</h2><h3 id="动态规划">动态规划</h3><p>本题是属于动态规划的题目，我们可以先从递归开始思考，同时用哈希表保存马的坐标</p><p>设马的坐标为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(x,y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span>，根据题目的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi></mrow><annotation encoding="application/x-tex">y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span>，得到以下坐标</p><ul><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>x</mi><mo>+</mo><mn>2</mn><mo separator="true">,</mo><mi>y</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(x+2,y-1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8389em;vertical-align:-0.1944em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span></li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>x</mi><mo>−</mo><mn>2</mn><mo separator="true">,</mo><mi>y</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(x-2,y-1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8389em;vertical-align:-0.1944em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span></li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>x</mi><mo>+</mo><mn>1</mn><mo separator="true">,</mo><mi>y</mi><mo>−</mo><mn>2</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(x+1,y-2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8389em;vertical-align:-0.1944em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mclose">)</span></span></span></span></li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>x</mi><mo>−</mo><mn>1</mn><mo separator="true">,</mo><mi>y</mi><mo>−</mo><mn>2</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(x-1,y-2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8389em;vertical-align:-0.1944em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mclose">)</span></span></span></span></li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>x</mi><mo>+</mo><mn>2</mn><mo separator="true">,</mo><mi>y</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(x+2,y+1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8389em;vertical-align:-0.1944em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span></li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>x</mi><mo>−</mo><mn>2</mn><mo separator="true">,</mo><mi>y</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(x-2,y+1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8389em;vertical-align:-0.1944em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span></li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>x</mi><mo>+</mo><mn>1</mn><mo separator="true">,</mo><mi>y</mi><mo>+</mo><mn>2</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(x+1,y+2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8389em;vertical-align:-0.1944em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mclose">)</span></span></span></span></li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>x</mi><mo>−</mo><mn>1</mn><mo separator="true">,</mo><mi>y</mi><mo>+</mo><mn>2</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(x-1,y+2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8389em;vertical-align:-0.1944em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mclose">)</span></span></span></span></li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(x,y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span></li></ul><p>设<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi><mi>f</mi><mi>s</mi><mo stretchy="false">(</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">dfs(i,j)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">df</span><span class="mord mathnormal">s</span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">)</span></span></span></span>，代表当前<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>j</mi></mrow><annotation encoding="application/x-tex">j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.854em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span></span></span></span>的方案数，根据题目的<strong>可以向下、或者向右</strong>，向下即<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi><mi>f</mi><mi>s</mi><mo stretchy="false">(</mo><mi>i</mi><mo>+</mo><mn>1</mn><mo separator="true">,</mo><mi>j</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">dfs(i+1,j)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">df</span><span class="mord mathnormal">s</span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">)</span></span></span></span>，向右即<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi><mi>f</mi><mi>s</mi><mo stretchy="false">(</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">dfs(i,j+1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">df</span><span class="mord mathnormal">s</span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span></p><p>最终得</p><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>d</mi><mi>f</mi><mi>s</mi><mo stretchy="false">(</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo stretchy="false">)</mo><mo>=</mo><mi>d</mi><mi>f</mi><mi>s</mi><mo stretchy="false">(</mo><mi>i</mi><mo>+</mo><mn>1</mn><mo separator="true">,</mo><mi>j</mi><mo stretchy="false">)</mo><mo>+</mo><mi>d</mi><mi>f</mi><mi>s</mi><mo stretchy="false">(</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">dfs(i,j)=dfs(i+1,j)+dfs(i,j+1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">df</span><span class="mord mathnormal">s</span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">df</span><span class="mord mathnormal">s</span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">df</span><span class="mord mathnormal">s</span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span></span></p><p>然后是递归边界了，当走到终点了，那就返回1，<strong>如果在搜索的时候遇到了马或者递归出边界</strong>，也要返回0，因为这是一个<strong>不合理</strong>的方案</p><p>这里是我用<strong>python</strong>演示</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 会超时的递归代码</span><br>a = <span class="hljs-built_in">input</span>().split()<br>ma = (<span class="hljs-built_in">int</span>(a[<span class="hljs-number">2</span>]),<span class="hljs-built_in">int</span>(a[<span class="hljs-number">3</span>])) <span class="hljs-comment"># 马的坐标</span><br>zd = (<span class="hljs-built_in">int</span>(a[<span class="hljs-number">0</span>]),<span class="hljs-built_in">int</span>(a[<span class="hljs-number">1</span>])) <span class="hljs-comment"># 终点的坐标</span><br><br>ma_z = [] <span class="hljs-comment"># 马的位置</span><br><br>p = [(<span class="hljs-number">2</span>,-<span class="hljs-number">1</span>),(-<span class="hljs-number">2</span>,-<span class="hljs-number">1</span>),(<span class="hljs-number">1</span>,-<span class="hljs-number">2</span>),(-<span class="hljs-number">1</span>,-<span class="hljs-number">2</span>),(<span class="hljs-number">2</span>,<span class="hljs-number">1</span>),(-<span class="hljs-number">2</span>,<span class="hljs-number">1</span>),(<span class="hljs-number">1</span>,<span class="hljs-number">2</span>),(-<span class="hljs-number">1</span>,<span class="hljs-number">2</span>),(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>)]<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> p:<br>    x = ma[<span class="hljs-number">0</span>]+i[<span class="hljs-number">0</span>]<br>    y = ma[<span class="hljs-number">1</span>]+i[<span class="hljs-number">1</span>]<br>    <span class="hljs-keyword">if</span> x &lt; <span class="hljs-number">0</span>  <span class="hljs-keyword">or</span> y &lt; <span class="hljs-number">0</span>:  <span class="hljs-comment"># 如果计算的x和y是负数，代表不合理的坐标 跳过</span><br>        <span class="hljs-keyword">continue</span><br>    <span class="hljs-keyword">else</span>:<br>        ma_z.append((x,y))<span class="hljs-comment"># 添加进哈希表</span><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">dfs</span>(<span class="hljs-params">i,j</span>):<br>    <span class="hljs-keyword">if</span> i &gt; zd[<span class="hljs-number">0</span>] <span class="hljs-keyword">or</span> j &gt; zd[<span class="hljs-number">1</span>]: <span class="hljs-comment"># 如果递归出边界 代表不合理的方案 返回0</span><br>        <span class="hljs-keyword">return</span> <span class="hljs-number">0</span><br>    <span class="hljs-keyword">if</span> (i,j) <span class="hljs-keyword">in</span> ma_z: <span class="hljs-comment"># 遇到了马 也要返回0</span><br>        <span class="hljs-keyword">return</span> <span class="hljs-number">0</span><br>    <span class="hljs-keyword">if</span> i == zd[<span class="hljs-number">0</span>] <span class="hljs-keyword">and</span> j == zd[<span class="hljs-number">1</span>]: <span class="hljs-comment"># 到达了终点 返回1 代表这条路行得通</span><br>        <span class="hljs-keyword">return</span> <span class="hljs-number">1</span><br>    <span class="hljs-keyword">return</span> dfs(i+<span class="hljs-number">1</span>,j)+dfs(i,j+<span class="hljs-number">1</span>) <span class="hljs-comment"># 相加的方案数</span><br><span class="hljs-built_in">print</span>(dfs(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>))<br></code></pre></td></tr></table></figure><p>因为回溯搜索的复杂度是<strong>指数级别</strong>的，因此会超时，现在我们改成记忆化搜索</p><p>对了，这里python可以加个<code>@catch</code>，如果是其他语言可以开个数组保存搜索结果，我这里演示一下吧</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs python">a = <span class="hljs-built_in">input</span>().split()<br>ma = (<span class="hljs-built_in">int</span>(a[<span class="hljs-number">2</span>]),<span class="hljs-built_in">int</span>(a[<span class="hljs-number">3</span>])) <span class="hljs-comment"># 马的坐标</span><br>zd = (<span class="hljs-built_in">int</span>(a[<span class="hljs-number">0</span>]),<span class="hljs-built_in">int</span>(a[<span class="hljs-number">1</span>])) <span class="hljs-comment"># 终点的坐标</span><br><br>ma_z = [] <span class="hljs-comment"># 马的位置</span><br><br>p = [(<span class="hljs-number">2</span>,-<span class="hljs-number">1</span>),(-<span class="hljs-number">2</span>,-<span class="hljs-number">1</span>),(<span class="hljs-number">1</span>,-<span class="hljs-number">2</span>),(-<span class="hljs-number">1</span>,-<span class="hljs-number">2</span>),(<span class="hljs-number">2</span>,<span class="hljs-number">1</span>),(-<span class="hljs-number">2</span>,<span class="hljs-number">1</span>),(<span class="hljs-number">1</span>,<span class="hljs-number">2</span>),(-<span class="hljs-number">1</span>,<span class="hljs-number">2</span>),(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>)]<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> p:<br>    x = ma[<span class="hljs-number">0</span>]+i[<span class="hljs-number">0</span>]<br>    y = ma[<span class="hljs-number">1</span>]+i[<span class="hljs-number">1</span>]<br>    <span class="hljs-keyword">if</span> x &lt; <span class="hljs-number">0</span>  <span class="hljs-keyword">or</span> y &lt; <span class="hljs-number">0</span>:  <span class="hljs-comment"># 如果计算的x和y是负数，代表不合理的坐标 跳过</span><br>        <span class="hljs-keyword">continue</span><br>    <span class="hljs-keyword">else</span>:<br>        ma_z.append((x,y))<span class="hljs-comment"># 添加进哈希表</span><br><br>catch = [[<span class="hljs-number">0</span> <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(zd[<span class="hljs-number">1</span>]+<span class="hljs-number">2</span>)] <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(zd[<span class="hljs-number">0</span>]+<span class="hljs-number">2</span>)] <span class="hljs-comment"># 开个数组</span><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">dfs</span>(<span class="hljs-params">i,j</span>):<br>    <span class="hljs-keyword">if</span> i &gt; zd[<span class="hljs-number">0</span>] <span class="hljs-keyword">or</span> j &gt; zd[<span class="hljs-number">1</span>]:<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">0</span><br>    <span class="hljs-keyword">if</span> catch[i][j] != <span class="hljs-number">0</span>: <span class="hljs-comment"># 返回答案 记得写在判断边界下面</span><br>        <span class="hljs-keyword">return</span> catch[i][j]<br>    <span class="hljs-keyword">if</span> (i,j) <span class="hljs-keyword">in</span> ma_z:<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">0</span><br>    <span class="hljs-keyword">if</span> zd[<span class="hljs-number">0</span>] == i <span class="hljs-keyword">and</span> j == zd[<span class="hljs-number">1</span>]:<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">1</span><br>    ans =  dfs(i+<span class="hljs-number">1</span>,j)+dfs(i,j+<span class="hljs-number">1</span>) <span class="hljs-comment"># 用个变量存储</span><br>    catch[i][j] = ans <span class="hljs-comment"># 保存答案</span><br>    <span class="hljs-keyword">return</span> ans <span class="hljs-comment"># 返回当前递归的答案</span><br><span class="hljs-built_in">print</span>(dfs(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>))<br></code></pre></td></tr></table></figure><p>好，这样就能通过本题目了</p><p><img src="https://pic.imgdb.cn/item/657c42f2c458853aef714c3b.jpg" alt=""></p><h3 id="动态规划-迭代">动态规划(迭代)</h3><p>我们可以把递归改成迭代，但改成迭代之前要把递归中的<strong>递去掉，保留归</strong>，我们只需把干脆写的代码，返过来<code>dp</code></p><p>之前是从起点到终点，我们现在改成从终点到起点，即</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs python">a = <span class="hljs-built_in">input</span>().split()<br>ma = (<span class="hljs-built_in">int</span>(a[<span class="hljs-number">2</span>]),<span class="hljs-built_in">int</span>(a[<span class="hljs-number">3</span>])) <span class="hljs-comment"># 马的坐标</span><br>zd = (<span class="hljs-built_in">int</span>(a[<span class="hljs-number">0</span>]),<span class="hljs-built_in">int</span>(a[<span class="hljs-number">1</span>])) <span class="hljs-comment"># 终点的坐标</span><br><br>ma_z = [] <span class="hljs-comment"># 马的位置</span><br><br>p = [(<span class="hljs-number">2</span>,-<span class="hljs-number">1</span>),(-<span class="hljs-number">2</span>,-<span class="hljs-number">1</span>),(<span class="hljs-number">1</span>,-<span class="hljs-number">2</span>),(-<span class="hljs-number">1</span>,-<span class="hljs-number">2</span>),(<span class="hljs-number">2</span>,<span class="hljs-number">1</span>),(-<span class="hljs-number">2</span>,<span class="hljs-number">1</span>),(<span class="hljs-number">1</span>,<span class="hljs-number">2</span>),(-<span class="hljs-number">1</span>,<span class="hljs-number">2</span>),(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>)]<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> p:<br>    x = ma[<span class="hljs-number">0</span>]+i[<span class="hljs-number">0</span>]<br>    y = ma[<span class="hljs-number">1</span>]+i[<span class="hljs-number">1</span>]<br>    <span class="hljs-keyword">if</span> x &lt; <span class="hljs-number">0</span>  <span class="hljs-keyword">or</span> y &lt; <span class="hljs-number">0</span>:  <span class="hljs-comment"># 如果计算的x和y是负数，代表不合理的坐标 跳过</span><br>        <span class="hljs-keyword">continue</span><br>    <span class="hljs-keyword">else</span>:<br>        ma_z.append((x,y))<span class="hljs-comment"># 添加进哈希表</span><br><br>catch = [[<span class="hljs-number">0</span> <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(zd[<span class="hljs-number">1</span>]+<span class="hljs-number">2</span>)] <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(zd[<span class="hljs-number">0</span>]+<span class="hljs-number">2</span>)]<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">dfs</span>(<span class="hljs-params">i,j</span>):<br>    <span class="hljs-keyword">if</span> i &lt; <span class="hljs-number">0</span> <span class="hljs-keyword">or</span> j &lt; <span class="hljs-number">0</span>: <span class="hljs-comment"># 如果超出了边界</span><br>        <span class="hljs-keyword">return</span> <span class="hljs-number">0</span><br>    <span class="hljs-keyword">if</span> catch[i][j] != <span class="hljs-number">0</span>:<br>        <span class="hljs-keyword">return</span> catch[i][j]<br>    <span class="hljs-keyword">if</span> (i,j) <span class="hljs-keyword">in</span> ma_z:<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">0</span><br>    <span class="hljs-keyword">if</span> i == <span class="hljs-number">0</span> <span class="hljs-keyword">and</span> j == <span class="hljs-number">0</span>: <span class="hljs-comment"># 如果回到起点，说明这条路合理，方案数+1</span><br>        <span class="hljs-keyword">return</span> <span class="hljs-number">1</span><br>    ans =  dfs(i-<span class="hljs-number">1</span>,j)+dfs(i,j-<span class="hljs-number">1</span>)<br>    catch[i][j] = ans <span class="hljs-comment"># 保存答案</span><br>    <span class="hljs-keyword">return</span> ans<br><span class="hljs-built_in">print</span>(dfs(zd[<span class="hljs-number">0</span>],zd[<span class="hljs-number">1</span>]))<br></code></pre></td></tr></table></figure><p>现在我们<strong>1:1</strong>翻译</p><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>d</mi><mi>f</mi><mi>s</mi><mo stretchy="false">(</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo stretchy="false">)</mo><mo>=</mo><mi>d</mi><mi>f</mi><mi>s</mi><mo stretchy="false">(</mo><mi>i</mi><mo>−</mo><mn>1</mn><mo separator="true">,</mo><mi>j</mi><mo stretchy="false">)</mo><mo>+</mo><mi>d</mi><mi>f</mi><mi>s</mi><mo stretchy="false">(</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">dfs(i,j)=dfs(i-1,j)+dfs(i,j-1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">df</span><span class="mord mathnormal">s</span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">df</span><span class="mord mathnormal">s</span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">df</span><span class="mord mathnormal">s</span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span></span></p><p>改成</p><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>d</mi><mi>p</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mi>j</mi><mo stretchy="false">]</mo><mo>=</mo><mi>d</mi><mi>p</mi><mo stretchy="false">[</mo><mi>i</mi><mo>−</mo><mn>1</mn><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mi>j</mi><mo stretchy="false">]</mo><mo>+</mo><mi>d</mi><mi>p</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mi>j</mi><mo>−</mo><mn>1</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">dp[i][j] = dp[i-1][j]+dp[i][j-1]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">d</span><span class="mord mathnormal">p</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">d</span><span class="mord mathnormal">p</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">d</span><span class="mord mathnormal">p</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span></span></span></span></span></p><p>同时把起点初始化成1，即<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi><mi>p</mi><mo stretchy="false">[</mo><mn>0</mn><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mn>0</mn><mo stretchy="false">]</mo><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">dp[0][0]=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">d</span><span class="mord mathnormal">p</span><span class="mopen">[</span><span class="mord">0</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">0</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span></p><p>因为直接从0开始的话，会出现负数下标，我们可以给<code>-1</code>的<code>+1</code></p><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>d</mi><mi>p</mi><mo stretchy="false">[</mo><mi>i</mi><mo>+</mo><mn>1</mn><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mi>j</mi><mo>+</mo><mn>1</mn><mo stretchy="false">]</mo><mo>=</mo><mi>d</mi><mi>p</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mi>j</mi><mo>+</mo><mn>1</mn><mo stretchy="false">]</mo><mo>+</mo><mi>d</mi><mi>p</mi><mo stretchy="false">[</mo><mi>i</mi><mo>+</mo><mn>1</mn><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mi>j</mi><mo stretchy="false">]</mo><mspace linebreak="newline"></mspace><mi>d</mi><mi>p</mi><mo stretchy="false">[</mo><mi>i</mi><mo>+</mo><mn>1</mn><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mi>j</mi><mo>+</mo><mn>1</mn><mo stretchy="false">]</mo><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">dp[i+1][j+1] = dp[i][j+1]+dp[i+1][j]\\dp[i+1][j+1] = 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">d</span><span class="mord mathnormal">p</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">d</span><span class="mord mathnormal">p</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">d</span><span class="mord mathnormal">p</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">]</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">d</span><span class="mord mathnormal">p</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span></span></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs python">a = <span class="hljs-built_in">input</span>().split()<br>ma = (<span class="hljs-built_in">int</span>(a[<span class="hljs-number">2</span>]),<span class="hljs-built_in">int</span>(a[<span class="hljs-number">3</span>])) <span class="hljs-comment"># 马的坐标</span><br>zd = (<span class="hljs-built_in">int</span>(a[<span class="hljs-number">0</span>]),<span class="hljs-built_in">int</span>(a[<span class="hljs-number">1</span>])) <span class="hljs-comment"># 终点的坐标</span><br><br>ma_z = [] <span class="hljs-comment"># 马的位置</span><br><br>p = [(<span class="hljs-number">2</span>,-<span class="hljs-number">1</span>),(-<span class="hljs-number">2</span>,-<span class="hljs-number">1</span>),(<span class="hljs-number">1</span>,-<span class="hljs-number">2</span>),(-<span class="hljs-number">1</span>,-<span class="hljs-number">2</span>),(<span class="hljs-number">2</span>,<span class="hljs-number">1</span>),(-<span class="hljs-number">2</span>,<span class="hljs-number">1</span>),(<span class="hljs-number">1</span>,<span class="hljs-number">2</span>),(-<span class="hljs-number">1</span>,<span class="hljs-number">2</span>),(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>)]<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> p:<br>    x = ma[<span class="hljs-number">0</span>]+i[<span class="hljs-number">0</span>]<br>    y = ma[<span class="hljs-number">1</span>]+i[<span class="hljs-number">1</span>]<br>    <span class="hljs-keyword">if</span> x &lt; <span class="hljs-number">0</span>  <span class="hljs-keyword">or</span> y &lt; <span class="hljs-number">0</span>:  <span class="hljs-comment"># 如果计算的x和y是负数，代表不合理的坐标 跳过</span><br>        <span class="hljs-keyword">continue</span><br>    <span class="hljs-keyword">else</span>:<br>        ma_z.append((x,y))<span class="hljs-comment"># 添加进哈希表</span><br><br>dp = [[<span class="hljs-number">0</span> <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(zd[<span class="hljs-number">1</span>]+<span class="hljs-number">2</span>)] <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(zd[<span class="hljs-number">0</span>]+<span class="hljs-number">2</span>)]<br><br><span class="hljs-comment">#def dfs(i,j):</span><br><span class="hljs-comment">#    if i &lt; 0 or j &lt; 0:</span><br><span class="hljs-comment">#        return 0</span><br><span class="hljs-comment">#    if catch[i][j] != 0:</span><br><span class="hljs-comment">#        return catch[i][j]</span><br><span class="hljs-comment">#    if (i,j) in ma_z:</span><br><span class="hljs-comment">#        return 0</span><br><span class="hljs-comment">#    if i == 0 and j == 0:</span><br><span class="hljs-comment">#        return 1</span><br><span class="hljs-comment">#    ans =  dfs(i-1,j)+dfs(i,j-1)</span><br><span class="hljs-comment">#    catch[i][j] = ans # 保存答案</span><br><span class="hljs-comment">#    return ans</span><br><br><span class="hljs-comment"># 注意这里下面的操作都要+1</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,zd[<span class="hljs-number">0</span>]+<span class="hljs-number">1</span>):<br>    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,zd[<span class="hljs-number">1</span>]+<span class="hljs-number">1</span>):<br>        <span class="hljs-keyword">if</span> i == j == <span class="hljs-number">0</span>:<br>            dp[i+<span class="hljs-number">1</span>][j+<span class="hljs-number">1</span>] = <span class="hljs-number">1</span><br>        <span class="hljs-keyword">elif</span> (i,j) <span class="hljs-keyword">in</span> ma_z:<br>            dp[i+<span class="hljs-number">1</span>][j+<span class="hljs-number">1</span>] = <span class="hljs-number">0</span><br>        <span class="hljs-keyword">else</span>:<br>            dp[i+<span class="hljs-number">1</span>][j+<span class="hljs-number">1</span>] = dp[i][j+<span class="hljs-number">1</span>] + dp[i+<span class="hljs-number">1</span>][j]<br><span class="hljs-built_in">print</span>(dp[zd[<span class="hljs-number">0</span>]+<span class="hljs-number">1</span>][zd[<span class="hljs-number">1</span>]+<span class="hljs-number">1</span>])<br></code></pre></td></tr></table></figure><p>这样就是我们见到的动态规划了</p><p><img src="https://pic.imgdb.cn/item/657c48bac458853aef8bb7b5.jpg" alt=""></p><h2 id="代码示例">代码示例</h2><p><code>Python3</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs python">a = <span class="hljs-built_in">input</span>().split()<br>ma = (<span class="hljs-built_in">int</span>(a[<span class="hljs-number">2</span>]),<span class="hljs-built_in">int</span>(a[<span class="hljs-number">3</span>])) <span class="hljs-comment"># 马的坐标</span><br>zd = (<span class="hljs-built_in">int</span>(a[<span class="hljs-number">0</span>]),<span class="hljs-built_in">int</span>(a[<span class="hljs-number">1</span>])) <span class="hljs-comment"># 终点的坐标</span><br><br>ma_z = [] <span class="hljs-comment"># 马的位置</span><br><br>p = [(<span class="hljs-number">2</span>,-<span class="hljs-number">1</span>),(-<span class="hljs-number">2</span>,-<span class="hljs-number">1</span>),(<span class="hljs-number">1</span>,-<span class="hljs-number">2</span>),(-<span class="hljs-number">1</span>,-<span class="hljs-number">2</span>),(<span class="hljs-number">2</span>,<span class="hljs-number">1</span>),(-<span class="hljs-number">2</span>,<span class="hljs-number">1</span>),(<span class="hljs-number">1</span>,<span class="hljs-number">2</span>),(-<span class="hljs-number">1</span>,<span class="hljs-number">2</span>),(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>)]<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> p:<br>    x = ma[<span class="hljs-number">0</span>]+i[<span class="hljs-number">0</span>]<br>    y = ma[<span class="hljs-number">1</span>]+i[<span class="hljs-number">1</span>]<br>    <span class="hljs-keyword">if</span> x &lt; <span class="hljs-number">0</span>  <span class="hljs-keyword">or</span> y &lt; <span class="hljs-number">0</span>:  <span class="hljs-comment"># 如果计算的x和y是负数，代表不合理的坐标 跳过</span><br>        <span class="hljs-keyword">continue</span><br>    <span class="hljs-keyword">else</span>:<br>        ma_z.append((x,y))<span class="hljs-comment"># 添加进哈希表</span><br><br>dp = [[<span class="hljs-number">0</span> <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(zd[<span class="hljs-number">1</span>]+<span class="hljs-number">2</span>)] <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(zd[<span class="hljs-number">0</span>]+<span class="hljs-number">2</span>)]<br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,zd[<span class="hljs-number">0</span>]+<span class="hljs-number">1</span>):<br>    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,zd[<span class="hljs-number">1</span>]+<span class="hljs-number">1</span>):<br>        <span class="hljs-keyword">if</span> i == j == <span class="hljs-number">0</span>:<br>            dp[i+<span class="hljs-number">1</span>][j+<span class="hljs-number">1</span>] = <span class="hljs-number">1</span><br>        <span class="hljs-keyword">elif</span> (i,j) <span class="hljs-keyword">in</span> ma_z:<br>            dp[i+<span class="hljs-number">1</span>][j+<span class="hljs-number">1</span>] = <span class="hljs-number">0</span><br>        <span class="hljs-keyword">else</span>:<br>            dp[i+<span class="hljs-number">1</span>][j+<span class="hljs-number">1</span>] = dp[i][j+<span class="hljs-number">1</span>] + dp[i+<span class="hljs-number">1</span>][j]<br><span class="hljs-built_in">print</span>(dp[zd[<span class="hljs-number">0</span>]+<span class="hljs-number">1</span>][zd[<span class="hljs-number">1</span>]+<span class="hljs-number">1</span>])<br></code></pre></td></tr></table></figure><p><code>c++</code></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-comment">// 注：c++题解来自官方题解</span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;cstring&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;cstdio&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;algorithm&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> ll long long</span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-type">const</span> <span class="hljs-type">int</span> fx[] = &#123;<span class="hljs-number">0</span>, <span class="hljs-number">-2</span>, <span class="hljs-number">-1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">2</span>, <span class="hljs-number">1</span>, <span class="hljs-number">-1</span>, <span class="hljs-number">-2</span>&#125;;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> fy[] = &#123;<span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">2</span>, <span class="hljs-number">1</span>, <span class="hljs-number">-1</span>, <span class="hljs-number">-2</span>, <span class="hljs-number">-2</span>, <span class="hljs-number">-1</span>&#125;;<br><span class="hljs-comment">//马可以走到的位置</span><br><br><span class="hljs-type">int</span> bx, by, mx, my;<br>ll f[<span class="hljs-number">40</span>][<span class="hljs-number">40</span>];<br><span class="hljs-type">bool</span> s[<span class="hljs-number">40</span>][<span class="hljs-number">40</span>]; <span class="hljs-comment">//判断这个点有没有马拦住</span><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d%d%d%d&quot;</span>, &amp;bx, &amp;by, &amp;mx, &amp;my);<br>    bx += <span class="hljs-number">2</span>; by += <span class="hljs-number">2</span>; mx += <span class="hljs-number">2</span>; my += <span class="hljs-number">2</span>;<br>    <span class="hljs-comment">//坐标+2以防越界</span><br>    f[<span class="hljs-number">2</span>][<span class="hljs-number">1</span>] = <span class="hljs-number">1</span>;<span class="hljs-comment">//初始化</span><br>    s[mx][my] = <span class="hljs-number">1</span>;<span class="hljs-comment">//标记马的位置</span><br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i = <span class="hljs-number">1</span>; i &lt;= <span class="hljs-number">8</span>; i++) s[mx + fx[i]][my + fy[i]] = <span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i = <span class="hljs-number">2</span>; i &lt;= bx; i++)&#123;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j = <span class="hljs-number">2</span>; j &lt;= by; j++)&#123;<br>            <span class="hljs-keyword">if</span>(s[i][j]) <span class="hljs-keyword">continue</span>; <span class="hljs-comment">// 如果被马拦住就直接跳过</span><br>            f[i][j] = f[i - <span class="hljs-number">1</span>][j] + f[i][j - <span class="hljs-number">1</span>];<br>            <span class="hljs-comment">//状态转移方程</span><br>        &#125;<br>    &#125;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%lld\n&quot;</span>, f[bx][by]);<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125; <br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>code</category>
      
      <category>洛谷</category>
      
    </categories>
    
    
    <tags>
      
      <tag>动态规划</tag>
      
      <tag>洛谷</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>动态规划基础(函数的定义) 洛谷原创题</title>
    <link href="/2023/12/02/liqiu_luogu/"/>
    <url>/2023/12/02/liqiu_luogu/</url>
    
    <content type="html"><![CDATA[<h2 id="前言">前言</h2><p>帮群友随手写写的</p><h2 id="题目描述">题目描述</h2><p><img src="https://pic.imgdb.cn/item/6569fa20c458853aef244dbe.jpg" alt=""></p><p><img src="https://pic.imgdb.cn/item/6569fa4bc458853aef250d33.jpg" alt=""></p><p><strong>数据范围</strong></p><ul><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><msup><mn>0</mn><mn>4</mn></msup><mo>&gt;</mo><mi>y</mi><mo>&gt;</mo><mi>x</mi><mo>&gt;</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">10^4&gt;y&gt;x&gt;1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8532em;vertical-align:-0.0391em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7335em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span></li></ul><span id="more"></span><h2 id="解题思路">解题思路</h2><h3 id="动态规划">动态规划</h3><p>对于这类问题，我们可以使用递归解决，设<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi><mi>f</mi><mi>s</mi><mo stretchy="false">(</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">dfs(i,j)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">df</span><span class="mord mathnormal">s</span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">)</span></span></span></span>，其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi><mo>=</mo><mi>x</mi></mrow><annotation encoding="application/x-tex">i=x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>j</mi><mo>=</mo><mi>y</mi></mrow><annotation encoding="application/x-tex">j=y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.854em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span></p><p>根据题意得</p><ul><li>当<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo>&gt;</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">x&gt;1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi><mi>f</mi><mi>s</mi><mo stretchy="false">(</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo stretchy="false">)</mo><mo>=</mo><mi>y</mi><mo>+</mo><mi>d</mi><mi>f</mi><mi>s</mi><mo stretchy="false">(</mo><mi>i</mi><mo>−</mo><mn>1</mn><mo separator="true">,</mo><mi>j</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">dfs(i,j)=y+dfs(i-1,j-1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">df</span><span class="mord mathnormal">s</span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">df</span><span class="mord mathnormal">s</span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.854em;vertical-align:-0.1944em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span></li><li>当<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">x=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi><mi>f</mi><mi>s</mi><mo stretchy="false">(</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo stretchy="false">)</mo><mo>=</mo><mi>y</mi></mrow><annotation encoding="application/x-tex">dfs(i,j)=y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">df</span><span class="mord mathnormal">s</span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span></li></ul><p>这样我们就可以写一个递归了 <strong>这里我为了方便 所以用python</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">dfs</span>(<span class="hljs-params">i,j</span>):<br>    <span class="hljs-keyword">if</span> i == <span class="hljs-number">1</span>:<br>        <span class="hljs-keyword">return</span> j<br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-keyword">return</span> j+dfs(i-<span class="hljs-number">1</span>,j-<span class="hljs-number">1</span>)<br><br><span class="hljs-comment">## test</span><br>x = <span class="hljs-number">2</span><br>y = <span class="hljs-number">3</span><br><span class="hljs-built_in">print</span>(dfs(x,y))<br><br>x = <span class="hljs-number">1</span><br>y = <span class="hljs-number">4</span><br><span class="hljs-built_in">print</span>(dfs(x,y))<br></code></pre></td></tr></table></figure><p>这里是不用记忆化搜索的，因为递归的过程中并没有重复计算</p><p>现在我们来<code>1:1</code>翻译成递推</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">dp[i][j] = j+dp[i-1][j-1]<br>dp[i][j] = j<br></code></pre></td></tr></table></figure><p>我们可以看到，如果直接从0开始遍历 会出现负数下标 因此我们可以<code>+1</code>则变成</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">dp[i+1][j+1] = j+dp[i][j]<br>dp[i+1][j+1] = j<br></code></pre></td></tr></table></figure><p>由于题目已给<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><msup><mn>0</mn><mn>4</mn></msup><mo>&gt;</mo><mi>x</mi><mo>&gt;</mo><mi>y</mi><mo>&gt;</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">10^4&gt;x&gt;y&gt;1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8532em;vertical-align:-0.0391em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7335em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>，所以递归和二维dp是过不了本题的</p><p>得考虑状压dp，可以把他压缩成一维dp</p><p>这里的状态转移主要是j 因此可以缩写成</p><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>d</mi><mi>p</mi><mo stretchy="false">[</mo><mi>i</mi><mo>+</mo><mn>1</mn><mo stretchy="false">]</mo><mo>=</mo><mi>i</mi></mrow><annotation encoding="application/x-tex">dp[i+1] = i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">d</span><span class="mord mathnormal">p</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span></span></p><h3 id="dp代码">dp代码</h3><p><strong>Python</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs python">dp = [<span class="hljs-number">0</span> <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">10002</span>)]<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">dfs</span>(<span class="hljs-params">x,y</span>):<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>,y+<span class="hljs-number">1</span>): <span class="hljs-comment"># 注意要+1</span><br>        dp[i+<span class="hljs-number">1</span>] = i<br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">sum</span>(dp[y+<span class="hljs-number">2</span>-x:y+<span class="hljs-number">2</span>])<br><br><br><span class="hljs-comment">## test</span><br>x = <span class="hljs-number">2</span><br>y = <span class="hljs-number">3</span><br><span class="hljs-built_in">print</span>(dfs(x,y))<br><br>x = <span class="hljs-number">1</span><br>y = <span class="hljs-number">4</span><br><span class="hljs-built_in">print</span>(dfs(x,y))<br></code></pre></td></tr></table></figure><p><strong>C++</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-type">int</span> dp[<span class="hljs-number">10002</span>];<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">dfs</span><span class="hljs-params">(<span class="hljs-type">int</span> x,<span class="hljs-type">int</span> y)</span></span>&#123;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i = <span class="hljs-number">1</span>; i &lt;= y;i++)&#123;<br>        dp[i+<span class="hljs-number">1</span>] = i;<br>    &#125;<br>    <span class="hljs-type">int</span> ans = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i = y+<span class="hljs-number">2</span>-x; i&lt;=y+<span class="hljs-number">2</span>;i++)&#123;<br>        ans+=dp[i];<br>    &#125;<br>    <span class="hljs-keyword">return</span> ans<br>&#125;<br><br><br><span class="hljs-type">int</span> <span class="hljs-built_in">main</span>() &#123;<br>    <span class="hljs-type">int</span> x = <span class="hljs-number">2</span>;<br>    <span class="hljs-type">int</span> y = <span class="hljs-number">3</span>;<br>    cout&lt;&lt;<span class="hljs-built_in">dfs</span>(x,y)&lt;&lt;endl;<br>    <br>    x = <span class="hljs-number">1</span>;<br>    y = <span class="hljs-number">4</span>;<br>    cout&lt;&lt;<span class="hljs-built_in">dfs</span>(x,y);<br>    <br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="数学">数学</h3><p>这里就要开始分析了，假设<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo>=</mo><mn>2</mn><mo separator="true">,</mo><mi>y</mi><mo>=</mo><mn>3</mn></mrow><annotation encoding="application/x-tex">x=2,y=3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8389em;vertical-align:-0.1944em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">3</span></span></span></span></p><p>从代码执行的角度来看无非是，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>3</mn><mo>+</mo><mi>d</mi><mi>f</mi><mi>s</mi><mo stretchy="false">(</mo><mn>2</mn><mo>−</mo><mn>1</mn><mo separator="true">,</mo><mn>3</mn><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">3+dfs(2-1,3-1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">3</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">df</span><span class="mord mathnormal">s</span><span class="mopen">(</span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8389em;vertical-align:-0.1944em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">3</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span>，实际发生的计算为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>3</mn><mo>+</mo><mn>2</mn></mrow><annotation encoding="application/x-tex">3+2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">3</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">2</span></span></span></span></p><p>同样的道理，当<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mi>y</mi><mo>=</mo><mn>4</mn></mrow><annotation encoding="application/x-tex">x=1,y=4</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8389em;vertical-align:-0.1944em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">4</span></span></span></span>时，实际发生计算为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>4</mn></mrow><annotation encoding="application/x-tex">4</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">4</span></span></span></span></p><p>总结出一个规律，首先是</p><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo stretchy="false">(</mo><mi>y</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo>+</mo><mo stretchy="false">(</mo><mi>y</mi><mo>−</mo><mn>1</mn><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo>+</mo><mo stretchy="false">(</mo><mi>y</mi><mo>−</mo><mn>1</mn><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo>+</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi></mrow><annotation encoding="application/x-tex">(y-1)+(y-1-1)+(y-1-1)+...</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.1056em;"></span><span class="mord">...</span></span></span></span></span></p><p>终止条件为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">x=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span></p><p>但是这样做，好想有点难思考</p><p>我们可以先吧<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0</mn><mo>+</mo><mn>1</mn><mo>+</mo><mn>2</mn><mo>+</mo><mn>3....</mn><mo>+</mo><mi>y</mi></mrow><annotation encoding="application/x-tex">0+1+2+3....+y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">3....</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span>算出来，再减去<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0</mn><mo>+</mo><mn>1</mn><mo>+</mo><mn>2</mn><mo>+</mo><mn>3...</mn><mo>+</mo><mi>x</mi></mrow><annotation encoding="application/x-tex">0+1+2+3...+x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">3...</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span></span></span></span></p><p>这里的计算，可以套用我博客的之前的公式，详情请看-&gt;<a href="https://blog.bingyue.top/2023/11/18/leetcode2656/">点我</a></p><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>a</mi><mi>n</mi><mi>s</mi><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.36em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>i</mi><mo>∗</mo><mi>k</mi><mo>+</mo><mo stretchy="false">(</mo><mi>k</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo>∗</mo><mo stretchy="false">(</mo><mi>k</mi><mi mathvariant="normal">/</mi><mi mathvariant="normal">/</mi><mn>2</mn><mo stretchy="false">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>k</mi><mi mathvariant="normal">/</mi><mn>2</mn><mo>=</mo><mn>0</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>i</mi><mo>∗</mo><mi>k</mi><mo>+</mo><mo stretchy="false">(</mo><mi>k</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo>∗</mo><mo stretchy="false">(</mo><mi>k</mi><mi mathvariant="normal">/</mi><mi mathvariant="normal">/</mi><mn>2</mn><mo stretchy="false">)</mo><mo>+</mo><mo stretchy="false">(</mo><mi>k</mi><mi mathvariant="normal">/</mi><mi mathvariant="normal">/</mi><mn>2</mn><mo stretchy="false">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>k</mi><mi mathvariant="normal">/</mi><mn>2</mn><mo stretchy="false">!</mo><mo>=</mo><mn>0</mn></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">ans=\begin{cases} i*k+(k-1)*(k//2) &amp; k/2=0 \\ i*k+(k-1)*(k//2)+(k//2) &amp; k/2!=0\end{cases}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">an</span><span class="mord mathnormal">s</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3em;vertical-align:-1.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mord">//2</span><span class="mclose">)</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mord">//2</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mord">//2</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:1em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mord">/2</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">0</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mord">/2</span><span class="mclose">!</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>把这里的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span>，换成<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi></mrow><annotation encoding="application/x-tex">y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span>就行了，同时<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">i=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mi>n</mi><mi>s</mi><mo>=</mo><mo stretchy="false">(</mo><mi>y</mi><mo>−</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">ans=(y-x,y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">an</span><span class="mord mathnormal">s</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">ans</span>(<span class="hljs-params">x,y</span>):<br>    o = <span class="hljs-number">0</span>;p = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">if</span> x % <span class="hljs-number">2</span> == <span class="hljs-number">0</span>:<br>        o = <span class="hljs-number">1</span>*x+(x-<span class="hljs-number">1</span>)*(x//<span class="hljs-number">2</span>)<br>    <span class="hljs-keyword">else</span>:<br>        o = <span class="hljs-number">1</span>*x+(x-<span class="hljs-number">1</span>)*(x//<span class="hljs-number">2</span>)+(x//<span class="hljs-number">2</span>)<br>    <span class="hljs-keyword">if</span> y % <span class="hljs-number">2</span> == <span class="hljs-number">0</span>:<br>        p = <span class="hljs-number">1</span>*y+(y-<span class="hljs-number">1</span>)*(y//<span class="hljs-number">2</span>)<br>    <span class="hljs-keyword">else</span>:<br>        p = <span class="hljs-number">1</span>*y+(y-<span class="hljs-number">1</span>)*(y//<span class="hljs-number">2</span>)+(y//<span class="hljs-number">2</span>)<br>    <span class="hljs-keyword">return</span> p-o<br><br><br>x = <span class="hljs-number">2</span><br>y = <span class="hljs-number">3</span><br><span class="hljs-built_in">print</span>(ans(y-x,y))<br><br>x = <span class="hljs-number">1</span><br>y = <span class="hljs-number">4</span><br><span class="hljs-built_in">print</span>(ans(y-x,y))<br></code></pre></td></tr></table></figure><h3 id="数学代码">数学代码</h3><p><strong>Python3</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">ans</span>(<span class="hljs-params">x,y</span>):<br>    o = <span class="hljs-number">0</span>;p = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">if</span> x % <span class="hljs-number">2</span> == <span class="hljs-number">0</span>:<br>        o = <span class="hljs-number">1</span>*x+(x-<span class="hljs-number">1</span>)*(x//<span class="hljs-number">2</span>)<br>    <span class="hljs-keyword">else</span>:<br>        o = <span class="hljs-number">1</span>*x+(x-<span class="hljs-number">1</span>)*(x//<span class="hljs-number">2</span>)+(x//<span class="hljs-number">2</span>)<br>    <span class="hljs-keyword">if</span> y % <span class="hljs-number">2</span> == <span class="hljs-number">0</span>:<br>        p = <span class="hljs-number">1</span>*y+(y-<span class="hljs-number">1</span>)*(y//<span class="hljs-number">2</span>)<br>    <span class="hljs-keyword">else</span>:<br>        p = <span class="hljs-number">1</span>*y+(y-<span class="hljs-number">1</span>)*(y//<span class="hljs-number">2</span>)+(y//<span class="hljs-number">2</span>)<br>    <span class="hljs-keyword">return</span> p-o<br><br><br>x = <span class="hljs-number">2</span><br>y = <span class="hljs-number">3</span><br><span class="hljs-built_in">print</span>(ans(y-x,y))<br><br>x = <span class="hljs-number">1</span><br>y = <span class="hljs-number">4</span><br><span class="hljs-built_in">print</span>(ans(y-x,y))<br></code></pre></td></tr></table></figure><p><strong>C++</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">ans</span><span class="hljs-params">(<span class="hljs-type">int</span> x,<span class="hljs-type">int</span> y)</span></span>&#123;<br>    <span class="hljs-type">int</span> o = <span class="hljs-number">0</span>;<br>    <span class="hljs-type">int</span> p = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">if</span>(o%<span class="hljs-number">2</span>==<span class="hljs-number">0</span>)&#123;o = <span class="hljs-number">1</span>*x+(x<span class="hljs-number">-1</span>)*(x/<span class="hljs-number">2</span>);&#125;<br>    <span class="hljs-keyword">else</span>&#123;o = o = <span class="hljs-number">1</span>*x+(x<span class="hljs-number">-1</span>)*(x/<span class="hljs-number">2</span>)+(x/<span class="hljs-number">2</span>);&#125;<br>    <br>    <span class="hljs-keyword">if</span>(y%<span class="hljs-number">2</span>==<span class="hljs-number">0</span>)&#123;p = <span class="hljs-number">1</span>*y+(y<span class="hljs-number">-1</span>)*(y/<span class="hljs-number">2</span>);&#125;<span class="hljs-keyword">else</span>&#123;p=<span class="hljs-number">1</span>*y+(y<span class="hljs-number">-1</span>)*(y/<span class="hljs-number">2</span>)+(y/<span class="hljs-number">2</span>);&#125;<br>    <span class="hljs-keyword">return</span> p-o;<br>&#125;<br><br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-type">int</span> x = <span class="hljs-number">999</span>;<br>    <span class="hljs-type">int</span> y = <span class="hljs-number">1000</span>;<br>    cout&lt;&lt;<span class="hljs-built_in">ans</span>(y-x,y)&lt;&lt;endl;<br>    <br>    x = <span class="hljs-number">1</span>;<br>    y = <span class="hljs-number">4</span>;<br>    cout&lt;&lt;<span class="hljs-built_in">ans</span>(y-x,y);<br>    <br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="后记">后记</h2><p>喜欢的话，多多支持，<s>同时也关注一下我</s></p>]]></content>
    
    
    <categories>
      
      <category>code</category>
      
      <category>洛谷</category>
      
    </categories>
    
    
    <tags>
      
      <tag>动态规划</tag>
      
      <tag>数学</tag>
      
      <tag>分类讨论</tag>
      
      <tag>洛谷</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Leetcode (滑动窗口基础)209.长度最小的子数组</title>
    <link href="/2023/11/18/leetcode209/"/>
    <url>/2023/11/18/leetcode209/</url>
    
    <content type="html"><![CDATA[<h2 id="前言">前言</h2><p>如果你是第一次做滑动窗口，本题是个很好的例子</p><h2 id="题目描述">题目描述</h2><p><a href="https://leetcode.cn/problems/minimum-size-subarray-sum/description/">209.长度最小的子数组</a></p><p>给定一个含有 <code>n</code> 个正整数的数组和一个正整数 <code>target</code> <strong>。</strong></p><p>找出该数组中满足其总和大于等于 <code>target</code> 的长度最小的 <strong>连续子数组</strong> <code>[numsl, numsl+1, ..., numsr-1, numsr]</code> ，并返回其长度**。**如果不存在符合条件的子数组，返回 <code>0</code> 。</p><span id="more"></span><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs bash">示例 1：<br>输入：target = 7, nums = [2,3,1,2,4,3]<br>输出：2<br>解释：子数组 [4,3] 是该条件下的长度最小的子数组。<br><br>示例 2：<br>输入：target = 4, nums = [1,4,4]<br>输出：1<br><br>示例 3：<br>输入：target = 11, nums = [1,1,1,1,1,1,1,1]<br>输出：0<br></code></pre></td></tr></table></figure><p><strong>提示：</strong></p><ul><li><code>1 &lt;= target &lt;= 109</code></li><li><code>1 &lt;= nums.length &lt;= 105</code></li><li><code>1 &lt;= nums[i] &lt;= 105</code></li></ul><h2 id="解题方式">解题方式</h2><h3 id="暴力">暴力</h3><p>第一眼看到此题，你可能会尝试暴力，则枚举<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>j</mi></mrow><annotation encoding="application/x-tex">j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.854em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span></span></span></span>，然后判断<strong>子数组</strong>里的元素是否<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>&gt;</mo><mo>=</mo><mi>t</mi><mi>a</mi><mi>r</mi><mi>g</mi><mi>e</mi><mi>t</mi></mrow><annotation encoding="application/x-tex">&gt;=target</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&gt;=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8095em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span></span></span></span></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span>:<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">minSubArrayLen</span>(<span class="hljs-params">self, target: <span class="hljs-built_in">int</span>, nums: <span class="hljs-type">List</span>[<span class="hljs-built_in">int</span>]</span>) -&gt; <span class="hljs-built_in">int</span>:<br>        ans = <span class="hljs-number">10</span> ** <span class="hljs-number">9</span> <span class="hljs-comment"># 初始化一个无穷大的答案</span><br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,<span class="hljs-built_in">len</span>(nums)):<br>            o = <span class="hljs-number">0</span> <span class="hljs-comment">#子数组的元素和</span><br>            <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(i,<span class="hljs-built_in">len</span>(nums)):<br>                o+=nums[j] <span class="hljs-comment"># 循环一次加一个</span><br>                <span class="hljs-keyword">if</span> o &gt;= target: <span class="hljs-comment"># 判断</span><br>                    ans = <span class="hljs-built_in">min</span>(ans,j-i+<span class="hljs-number">1</span>) <span class="hljs-comment"># 更新答案 注意 这里+1是因为自己也要算进去</span><br>        <span class="hljs-keyword">if</span> ans == <span class="hljs-number">10</span>**<span class="hljs-number">9</span>: <span class="hljs-keyword">return</span> <span class="hljs-number">0</span> <span class="hljs-comment"># 如果没有答案就返回0</span><br>        <span class="hljs-keyword">return</span> ans<br></code></pre></td></tr></table></figure><p><strong>时间复杂度</strong>:<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n^2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></p><p><strong>空间复杂度</strong>:<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span></span></span></span></p><p>但是<strong>很遗憾</strong>，暴力超时了，我们看回提示中的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>&lt;</mo><mo>=</mo><mi>n</mi><mi>u</mi><mi>m</mi><mi>s</mi><mi mathvariant="normal">.</mi><mi>l</mi><mi>e</mi><mi>n</mi><mi>g</mi><mi>t</mi><mi>h</mi><mo>&lt;</mo><mo>=</mo><mn>1</mn><msup><mn>0</mn><mn>5</mn></msup></mrow><annotation encoding="application/x-tex">1&lt;=nums.length&lt;=10^5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6835em;vertical-align:-0.0391em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">n</span><span class="mord mathnormal">u</span><span class="mord mathnormal">m</span><span class="mord mathnormal">s</span><span class="mord">.</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">e</span><span class="mord mathnormal">n</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span></span></span></span></span></span></span></span>，就是数组范围最坏情况是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><msup><mn>0</mn><mn>5</mn></msup></mrow><annotation encoding="application/x-tex">10^5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span></span></span></span></span></span></span></span>个元素，这样双层循环肯定会超时</p><p>因此我们需要把<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n^2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>的<strong>时间复杂度</strong>优化到<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span></p><h3 id="滑动窗口">滑动窗口</h3><ul><li><strong>Q</strong>:什么情况下用滑动窗口</li><li><strong>A</strong>:像这样的子数组问题，或者连续区间问题，都可以用滑动窗口</li></ul><p>滑动窗口本质就是<strong>定义左右边界，然后枚举右边界，维护左边界，并在满足条件下更新答案</strong></p><p>首先定义<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>j</mi></mrow><annotation encoding="application/x-tex">j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.854em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span></span></span></span>,<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span>为左边界,<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>j</mi></mrow><annotation encoding="application/x-tex">j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.854em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span></span></span></span>为右边界，再定义一个无穷大的答案<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mi>n</mi><mi>s</mi></mrow><annotation encoding="application/x-tex">ans</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">an</span><span class="mord mathnormal">s</span></span></span></span>一般为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><msup><mn>0</mn><mn>9</mn></msup></mrow><annotation encoding="application/x-tex">10^9</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">9</span></span></span></span></span></span></span></span></span></span></span>,以及一个<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>t</mi></mrow><annotation encoding="application/x-tex">t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6151em;"></span><span class="mord mathnormal">t</span></span></span></span> <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>t</mi></mrow><annotation encoding="application/x-tex">t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6151em;"></span><span class="mord mathnormal">t</span></span></span></span>代表子<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mi>u</mi><mi>m</mi><mi>s</mi></mrow><annotation encoding="application/x-tex">nums</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span><span class="mord mathnormal">u</span><span class="mord mathnormal">m</span><span class="mord mathnormal">s</span></span></span></span>里的元素和,然后开始思考<strong>如何维护左边界，如何更新答案</strong></p><p>先回答第一个问题</p><ul><li>当<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>t</mi><mo>&gt;</mo><mo>=</mo><mi>t</mi><mi>a</mi><mi>r</mi><mi>g</mi><mi>e</mi><mi>t</mi></mrow><annotation encoding="application/x-tex">t&gt;=target</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6542em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8095em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span></span></span></span>时，我们去缩小左边界，查找有没有更小长度的子数组，并更新<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mi>n</mi><mi>s</mi></mrow><annotation encoding="application/x-tex">ans</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">an</span><span class="mord mathnormal">s</span></span></span></span></li></ul><p>第二个问题</p><ul><li>当<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span>在缩小的时候，判断<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>t</mi><mo>&gt;</mo><mo>=</mo><mi>t</mi><mi>a</mi><mi>r</mi><mi>g</mi><mi>e</mi><mi>t</mi></mrow><annotation encoding="application/x-tex">t&gt;=target</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6542em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8095em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span></span></span></span>,更新当前答案为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>j</mi><mo>−</mo><mi>i</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">j-i+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.854em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7429em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>，<strong>注：当出现只有一个元素的时候 要加上自己 所以要+1</strong></li></ul><p>明白这些问题后，我们就开始写代码了</p><p>首先定义<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span>,<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>j</mi></mrow><annotation encoding="application/x-tex">j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.854em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span></span></span></span>,<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mi>n</mi><mi>s</mi></mrow><annotation encoding="application/x-tex">ans</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">an</span><span class="mord mathnormal">s</span></span></span></span>,<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>t</mi></mrow><annotation encoding="application/x-tex">t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6151em;"></span><span class="mord mathnormal">t</span></span></span></span></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span>:<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">minSubArrayLen</span>(<span class="hljs-params">self, target: <span class="hljs-built_in">int</span>, nums: <span class="hljs-type">List</span>[<span class="hljs-built_in">int</span>]</span>) -&gt; <span class="hljs-built_in">int</span>:<br>        i=<span class="hljs-number">0</span>;j=<span class="hljs-number">0</span>;ans=<span class="hljs-number">10</span>**<span class="hljs-number">9</span>;t=<span class="hljs-number">0</span><br></code></pre></td></tr></table></figure><p>写一个循环枚举右边界<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>j</mi></mrow><annotation encoding="application/x-tex">j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.854em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span></span></span></span></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span>:<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">minSubArrayLen</span>(<span class="hljs-params">self, target: <span class="hljs-built_in">int</span>, nums: <span class="hljs-type">List</span>[<span class="hljs-built_in">int</span>]</span>) -&gt; <span class="hljs-built_in">int</span>:<br>        i=<span class="hljs-number">0</span>;j=<span class="hljs-number">0</span>;ans=<span class="hljs-number">10</span>**<span class="hljs-number">9</span>;t=<span class="hljs-number">0</span><br>        <span class="hljs-keyword">while</span> j &lt; <span class="hljs-built_in">len</span>(nums):<br>            j+=<span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><p>开始维护子数组的元素，并加上维护<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span>:<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">minSubArrayLen</span>(<span class="hljs-params">self, target: <span class="hljs-built_in">int</span>, nums: <span class="hljs-type">List</span>[<span class="hljs-built_in">int</span>]</span>) -&gt; <span class="hljs-built_in">int</span>:<br>        i=<span class="hljs-number">0</span>;j=<span class="hljs-number">0</span>;ans=<span class="hljs-number">10</span>**<span class="hljs-number">9</span>;t=<span class="hljs-number">0</span><br>        <span class="hljs-keyword">while</span> j &lt; <span class="hljs-built_in">len</span>(nums):<br>            t+=nums[j] <span class="hljs-comment"># 添加子数组元素</span><br>            <span class="hljs-keyword">while</span> i &lt;= j <span class="hljs-keyword">and</span> t &gt;= target:<br>                <span class="hljs-comment">## 保持左右边界不相反 而且 t&gt;=target</span><br>                <span class="hljs-keyword">if</span> t &gt;= target:<br>                    ans = <span class="hljs-built_in">min</span>(ans,j-i+<span class="hljs-number">1</span>) <span class="hljs-comment"># 更新答案</span><br>                t-=nums[i] <span class="hljs-comment"># 删除子数组元素</span><br>                i+=<span class="hljs-number">1</span><br>            j+=<span class="hljs-number">1</span> <span class="hljs-comment"># 枚举右边界</span><br>        <span class="hljs-keyword">if</span> ans == <span class="hljs-number">10</span> ** <span class="hljs-number">9</span>: <span class="hljs-keyword">return</span> <span class="hljs-number">0</span> <span class="hljs-comment"># 如果答案还是无穷大 说明没有符合的子数组</span><br>        <span class="hljs-keyword">return</span> ans<br></code></pre></td></tr></table></figure><p>这样我们就遍历了一次数组解决了问题 可以通过本题了</p><p><img src="https://pic.imgdb.cn/item/65589e72c458853aefbe743b.png" alt=""></p><h2 id="示例代码">示例代码</h2><p><strong>Python</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 时间复杂度:O(n)</span><br><span class="hljs-comment"># 空间复杂度:O(1)</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span>:<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">minSubArrayLen</span>(<span class="hljs-params">self, target: <span class="hljs-built_in">int</span>, nums: <span class="hljs-type">List</span>[<span class="hljs-built_in">int</span>]</span>) -&gt; <span class="hljs-built_in">int</span>:<br>        i=<span class="hljs-number">0</span>;j=<span class="hljs-number">0</span>;ans=<span class="hljs-number">10</span>**<span class="hljs-number">9</span>;t=<span class="hljs-number">0</span><br>        <span class="hljs-keyword">while</span> j &lt; <span class="hljs-built_in">len</span>(nums):<br>            t+=nums[j]<br>            <span class="hljs-keyword">while</span> i &lt;= j <span class="hljs-keyword">and</span> t &gt;= target:<br>                <span class="hljs-keyword">if</span> t &gt;= target:<br>                    ans = <span class="hljs-built_in">min</span>(ans,j-i+<span class="hljs-number">1</span>)<br>                t-=nums[i]<br>                i+=<span class="hljs-number">1</span><br>            j+=<span class="hljs-number">1</span><br>        <span class="hljs-keyword">if</span> ans == <span class="hljs-number">10</span> ** <span class="hljs-number">9</span>: <span class="hljs-keyword">return</span> <span class="hljs-number">0</span><br>        <span class="hljs-keyword">return</span> ans<br></code></pre></td></tr></table></figure><p><strong>C++</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-comment">// 时间复杂度:O(n)</span><br><span class="hljs-comment">// 空间复杂度:O(1)</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span> &#123;<br><span class="hljs-keyword">public</span>:<br>    <span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">minSubArrayLen</span><span class="hljs-params">(<span class="hljs-type">int</span> target, vector&lt;<span class="hljs-type">int</span>&gt;&amp; nums)</span> </span>&#123;<br>        <span class="hljs-type">int</span> i = <span class="hljs-number">0</span>;<br>        <span class="hljs-type">int</span> j = <span class="hljs-number">0</span>;<br>        <span class="hljs-type">int</span> t = <span class="hljs-number">0</span>;<br>        <span class="hljs-type">int</span> ans = <span class="hljs-number">100000000</span>;<br>        <span class="hljs-keyword">while</span>(j&lt;nums.<span class="hljs-built_in">size</span>())&#123;<br>            t+=nums[j];<br>            <span class="hljs-keyword">while</span>(i&lt;=j&amp;&amp;t&gt;=target)&#123;<br>                ans=<span class="hljs-built_in">min</span>(ans,j-i+<span class="hljs-number">1</span>);<br>                t-=nums[i];<br>                i++;<br>            &#125;<br>            j++;<br>        &#125;<br>        <span class="hljs-keyword">if</span>(ans==<span class="hljs-number">100000000</span>)&#123;<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;&#125;<br>        <span class="hljs-keyword">return</span> ans;<br>    &#125;<br>&#125;;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>leetcode</category>
      
    </categories>
    
    
    <tags>
      
      <tag>leetcode</tag>
      
      <tag>code</tag>
      
      <tag>滑动窗口</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Leetcode 2965.K个元素的最大和</title>
    <link href="/2023/11/18/leetcode2656/"/>
    <url>/2023/11/18/leetcode2656/</url>
    
    <content type="html"><![CDATA[<h2 id="题目描述">题目描述</h2><p><a href="https://leetcode.cn/problems/maximum-sum-with-exactly-k-elements/description/">出处</a></p><p>给你一个下标从 <strong>0</strong> 开始的整数数组 <code>nums</code> 和一个整数 <code>k</code> 。你需要执行以下操作 <strong>恰好</strong> <code>k</code> 次，最大化你的得分：</p><span id="more"></span><ol><li>从 <code>nums</code> 中选择一个元素 <code>m</code> 。</li><li>将选中的元素 <code>m</code> 从数组中删除。</li><li>将新元素 <code>m + 1</code> 添加到数组中。</li><li>你的得分增加 <code>m</code> 。</li></ol><p>请你返回执行以上操作恰好 <code>k</code> 次后的最大得分。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs bash">示例 1：<br>输入：nums = [1,2,3,4,5], k = 3<br>输出：18<br>解释：我们需要从 nums 中恰好选择 3 个元素并最大化得分。<br>第一次选择 5 。和为 5 ，nums = [1,2,3,4,6] 。<br>第二次选择 6 。和为 6 ，nums = [1,2,3,4,7] 。<br>第三次选择 7 。和为 5 + 6 + 7 = 18 ，nums = [1,2,3,4,8] 。<br>所以我们返回 18 。<br>18 是可以得到的最大答案。<br><br>示例 2：<br>输入：nums = [5,5,5], k = 2<br>输出：11<br>解释：我们需要从 nums 中恰好选择 2 个元素并最大化得分。<br>第一次选择 5 。和为 5 ，nums = [5,5,6] 。<br>第二次选择 6 。和为 6 ，nums = [5,5,7] 。<br>所以我们返回 11 。<br>11 是可以得到的最大答案。<br></code></pre></td></tr></table></figure><p><strong>提示：</strong></p><ul><li><code>1 &lt;= nums.length &lt;= 100</code></li><li><code>1 &lt;= nums[i] &lt;= 100</code></li><li><code>1 &lt;= k &lt;= 100</code></li></ul><h2 id="解题方法">解题方法</h2><h3 id="暴力">暴力</h3><p>直接按照题意模拟 找到<span class='katex-error' title='ParseError: KaTeX parse error: Got function &#039;\max&#039; with no arguments as subscript at position 6: nums_\̲m̲a̲x̲'>nums_\max</span> 并执行<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span>次删除<span class='katex-error' title='ParseError: KaTeX parse error: Got function &#039;\max&#039; with no arguments as subscript at position 6: nums_\̲m̲a̲x̲'>nums_\max</span>并记录<span class='katex-error' title='ParseError: KaTeX parse error: Got function &#039;\max&#039; with no arguments as subscript at position 6: nums_\̲m̲a̲x̲'>nums_\max</span>的值</p><p>首先定义<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mi>n</mi><mi>s</mi></mrow><annotation encoding="application/x-tex">ans</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">an</span><span class="mord mathnormal">s</span></span></span></span>为答案 然后循环模拟</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span>:<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">maximizeSum</span>(<span class="hljs-params">self, nums: <span class="hljs-type">List</span>[<span class="hljs-built_in">int</span>], k: <span class="hljs-built_in">int</span></span>) -&gt; <span class="hljs-built_in">int</span>:<br>        ans = <span class="hljs-number">0</span><br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(k):<br>            o = <span class="hljs-built_in">max</span>(nums)<br>            ans+=o<br>            nums.remove(o)<br>            nums.append(o+<span class="hljs-number">1</span>)<br>        <span class="hljs-keyword">return</span> ans<br></code></pre></td></tr></table></figure><ul><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>时间复杂度</mtext><mo>:</mo><mi>O</mi><mo stretchy="false">(</mo><msup><mi>k</mi><mn>3</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">时间复杂度:O(k^{3})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord cjk_fallback">时间复杂度</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>空间复杂度</mtext><mo>:</mo><mi>O</mi><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">空间复杂度:O(1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord cjk_fallback">空间复杂度</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span></span></span></span> <strong>返回值不计入</strong></li></ul><h3 id="数学">数学</h3><p>首先我们看回题意 可以得知 操作是 找到当前的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi><mi>a</mi><mi>x</mi></mrow><annotation encoding="application/x-tex">max</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">ma</span><span class="mord mathnormal">x</span></span></span></span>值 -&gt; 记录 -&gt; 删除 -&gt; 添加<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi><mi>a</mi><mi>x</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">max+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">ma</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span></p><p>那么下一次添加的值不就是上一个<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi><mi>a</mi><mi>x</mi></mrow><annotation encoding="application/x-tex">max</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">ma</span><span class="mord mathnormal">x</span></span></span></span>值的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi><mi>a</mi><mi>x</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">max+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">ma</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span></p><p>因此我们设当前<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi><mi>a</mi><mi>x</mi></mrow><annotation encoding="application/x-tex">max</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">ma</span><span class="mord mathnormal">x</span></span></span></span>值为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span> 即<span class='katex-error' title='ParseError: KaTeX parse error: Got function &#039;\max&#039; with no arguments as subscript at position 6: nums_\̲m̲a̲x̲=i'>nums_\max=i</span></p><ul><li>操作第<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn></mrow><annotation encoding="application/x-tex">1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>次 为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span></li><li>操作第<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>2</mn></mrow><annotation encoding="application/x-tex">2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">2</span></span></span></span>次 为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi><mo>+</mo><mo stretchy="false">(</mo><mi>i</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">i+(i+1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7429em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span></li><li>操作第<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>3</mn></mrow><annotation encoding="application/x-tex">3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">3</span></span></span></span>次 为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi><mo>+</mo><mo stretchy="false">(</mo><mi>i</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mo>+</mo><mo stretchy="false">(</mo><mi>i</mi><mo>+</mo><mn>1</mn><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mo>=</mo><mi>i</mi><mo>+</mo><mo stretchy="false">(</mo><mi>i</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mo>+</mo><mo stretchy="false">(</mo><mi>i</mi><mo>+</mo><mn>2</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">i+(i+1)+(i+1+1)=i+(i+1)+(i+2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7429em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7429em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mclose">)</span></span></span></span></li><li>操作第<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>4</mn></mrow><annotation encoding="application/x-tex">4</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">4</span></span></span></span>次 为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi><mo>+</mo><mo stretchy="false">(</mo><mi>i</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mo>+</mo><mo stretchy="false">(</mo><mi>i</mi><mo>+</mo><mn>1</mn><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mo>+</mo><mo stretchy="false">(</mo><mi>i</mi><mo>+</mo><mn>1</mn><mo>+</mo><mn>1</mn><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mo>=</mo><mi>i</mi><mo>+</mo><mo stretchy="false">(</mo><mi>i</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mo>+</mo><mo stretchy="false">(</mo><mi>i</mi><mo>+</mo><mn>2</mn><mo stretchy="false">)</mo><mo>+</mo><mo stretchy="false">(</mo><mi>i</mi><mo>+</mo><mn>3</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">i+(i+1)+(i+1+1)+(i+1+1+1)=i+(i+1)+(i+2)+(i+3)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7429em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7429em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">3</span><span class="mclose">)</span></span></span></span></li></ul><p>不难发现 这是一道规律题 得公式</p><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>i</mi><mo>∗</mo><mi>k</mi><mo>+</mo><mn>0</mn><mo>+</mo><mn>1</mn><mo>+</mo><mn>2</mn><mo>+</mo><mn>3...</mn><mo>+</mo><mo stretchy="false">(</mo><mi>i</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">i*k+0+1+2+3...+(i-1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">3...</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span></span></p><p>问题来了<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0</mn><mo>+</mo><mn>1</mn><mo>+</mo><mn>2</mn><mo>+</mo><mn>3...</mn><mo>+</mo><mo stretchy="false">(</mo><mi>i</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">0+1+2+3...+(i-1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">3...</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span>如何算呢 我这里就拿<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi><mo>=</mo><mn>4</mn></mrow><annotation encoding="application/x-tex">k=4</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">4</span></span></span></span>来举例，即<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>+</mo><mn>2</mn><mo>+</mo><mn>3</mn><mo>+</mo><mn>4</mn></mrow><annotation encoding="application/x-tex">1+2+3+4</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">3</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">4</span></span></span></span>  设<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span></span></span></span>为数组的左边界 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi></mrow><annotation encoding="application/x-tex">y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span>为数组的右边界 即<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mi>u</mi><mi>m</mi><mi>s</mi><mo stretchy="false">[</mo><mi>x</mi><mo stretchy="false">]</mo><mo>+</mo><mi>n</mi><mi>u</mi><mi>m</mi><mi>s</mi><mo stretchy="false">[</mo><mi>y</mi><mo stretchy="false">]</mo><mo>=</mo><mi>n</mi><mi>u</mi><mi>m</mi><mi>s</mi><mo stretchy="false">[</mo><mi>x</mi><mo>+</mo><mn>1</mn><mo stretchy="false">]</mo><mo>+</mo><mi>n</mi><mi>u</mi><mi>m</mi><mi>s</mi><mo stretchy="false">[</mo><mi>y</mi><mo>−</mo><mn>1</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">nums[x]+nums[y]=nums[x+1]+nums[y-1]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">n</span><span class="mord mathnormal">u</span><span class="mord mathnormal">m</span><span class="mord mathnormal">s</span><span class="mopen">[</span><span class="mord mathnormal">x</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">n</span><span class="mord mathnormal">u</span><span class="mord mathnormal">m</span><span class="mord mathnormal">s</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">n</span><span class="mord mathnormal">u</span><span class="mord mathnormal">m</span><span class="mord mathnormal">s</span><span class="mopen">[</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">n</span><span class="mord mathnormal">u</span><span class="mord mathnormal">m</span><span class="mord mathnormal">s</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span></span></span></span></p><p>相当于数组的左右两边和是一样的 这样的和可以分为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi><mi mathvariant="normal">/</mi><mi mathvariant="normal">/</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">k//2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mord">//2</span></span></span></span>组</p><p>因此继续推理得到</p><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>i</mi><mo>∗</mo><mi>k</mi><mo>+</mo><mo stretchy="false">(</mo><mi>k</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo>∗</mo><mo stretchy="false">(</mo><mi>k</mi><mi mathvariant="normal">/</mi><mi mathvariant="normal">/</mi><mn>2</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">i*k+(k-1)*(k//2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mord">//2</span><span class="mclose">)</span></span></span></span></span></p><p>当<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span>是奇数的时候 也是按同样的道理 加上它中间哪个数</p><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>i</mi><mo>∗</mo><mi>k</mi><mo>+</mo><mo stretchy="false">(</mo><mi>k</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo>∗</mo><mo stretchy="false">(</mo><mi>k</mi><mi mathvariant="normal">/</mi><mi mathvariant="normal">/</mi><mn>2</mn><mo stretchy="false">)</mo><mo>+</mo><mo stretchy="false">(</mo><mi>k</mi><mi mathvariant="normal">/</mi><mi mathvariant="normal">/</mi><mn>2</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">i*k+(k-1)*(k//2)+(k//2) </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mord">//2</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mord">//2</span><span class="mclose">)</span></span></span></span></span></p><p>最后 得出结论</p><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>a</mi><mi>n</mi><mi>s</mi><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.36em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>i</mi><mo>∗</mo><mi>k</mi><mo>+</mo><mo stretchy="false">(</mo><mi>k</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo>∗</mo><mo stretchy="false">(</mo><mi>k</mi><mi mathvariant="normal">/</mi><mi mathvariant="normal">/</mi><mn>2</mn><mo stretchy="false">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>k</mi><mi mathvariant="normal">/</mi><mn>2</mn><mo>=</mo><mn>0</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>i</mi><mo>∗</mo><mi>k</mi><mo>+</mo><mo stretchy="false">(</mo><mi>k</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo>∗</mo><mo stretchy="false">(</mo><mi>k</mi><mi mathvariant="normal">/</mi><mi mathvariant="normal">/</mi><mn>2</mn><mo stretchy="false">)</mo><mo>+</mo><mo stretchy="false">(</mo><mi>k</mi><mi mathvariant="normal">/</mi><mi mathvariant="normal">/</mi><mn>2</mn><mo stretchy="false">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>k</mi><mi mathvariant="normal">/</mi><mn>2</mn><mo stretchy="false">!</mo><mo>=</mo><mn>0</mn></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">ans=\begin{cases} i*k+(k-1)*(k//2) &amp; k/2=0 \\ i*k+(k-1)*(k//2)+(k//2) &amp; k/2!=0\end{cases}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">an</span><span class="mord mathnormal">s</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3em;vertical-align:-1.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mord">//2</span><span class="mclose">)</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mord">//2</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mord">//2</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:1em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mord">/2</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">0</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mord">/2</span><span class="mclose">!</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><h2 id="示例代码">示例代码</h2><p><strong>Python</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">## 时间复杂度O(n)</span><br><span class="hljs-comment">## 空间复杂度O(1)</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span>:<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">maximizeSum</span>(<span class="hljs-params">self, nums: <span class="hljs-type">List</span>[<span class="hljs-built_in">int</span>], k: <span class="hljs-built_in">int</span></span>) -&gt; <span class="hljs-built_in">int</span>:<br>        a = <span class="hljs-built_in">max</span>(nums)<br>        <span class="hljs-keyword">if</span> k % <span class="hljs-number">2</span> == <span class="hljs-number">0</span>:<br>            <span class="hljs-keyword">return</span> a*k + (k-<span class="hljs-number">1</span>) * (k//<span class="hljs-number">2</span>)<br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-keyword">return</span> a*k + (k-<span class="hljs-number">1</span>) * (k//<span class="hljs-number">2</span>) + (k//<span class="hljs-number">2</span>) <br></code></pre></td></tr></table></figure><p><strong>C++</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-comment">// 时间复杂度O(n)</span><br><span class="hljs-comment">// 空间复杂度O(1)</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span> &#123;<br><span class="hljs-keyword">public</span>:<br>    <span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">maximizeSum</span><span class="hljs-params">(vector&lt;<span class="hljs-type">int</span>&gt;&amp; nums, <span class="hljs-type">int</span> k)</span> </span>&#123;<br>        <span class="hljs-type">int</span> ans = <span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; nums.<span class="hljs-built_in">size</span>(); i++)&#123;<br>            ans = <span class="hljs-built_in">max</span>(ans,nums[i]);<br>        &#125;<br>        <span class="hljs-keyword">if</span>(k % <span class="hljs-number">2</span> == <span class="hljs-number">0</span>)&#123;<br>            <span class="hljs-keyword">return</span> ans * k + (k<span class="hljs-number">-1</span>) * (k/<span class="hljs-number">2</span>);<br>        &#125;<br>        <span class="hljs-keyword">return</span> ans * k + (k - <span class="hljs-number">1</span>) * (k/<span class="hljs-number">2</span>)+(k/<span class="hljs-number">2</span>);<br>    &#125;<br>&#125;;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>leetcode</category>
      
    </categories>
    
    
    <tags>
      
      <tag>leetcode</tag>
      
      <tag>code</tag>
      
      <tag>数学</tag>
      
      <tag>分类讨论</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Leetcode 2918.数组的最小和</title>
    <link href="/2023/11/05/leetcode2918/"/>
    <url>/2023/11/05/leetcode2918/</url>
    
    <content type="html"><![CDATA[<h2 id="前言">前言</h2><p>本题出自<code>Leetcode</code><a href="https://leetcode.cn/contest/weekly-contest-369/"><strong>周赛 369场</strong></a></p><p>原题链接<a href="https://leetcode.cn/problems/minimum-equal-sum-of-two-arrays-after-replacing-zeros/">2918.数组的最小相等和</a></p><p><s>本题不需要任何算法 一个纯分类讨论题目</s></p><h2 id="题目描述">题目描述</h2><p>给你两个由正整数和 <code>0</code> 组成的数组 <code>nums1</code> 和 <code>nums2</code> 。</p><span id="more"></span><p>你必须将两个数组中的 <strong>所有</strong> <code>0</code> 替换为 <strong>严格</strong> 正整数，并且满足两个数组中所有元素的和 <strong>相等</strong> 。</p><p>返回 <strong>最小</strong> 相等和 ，如果无法使两数组相等，则返回 <code>-1</code> 。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs bash">示例 1：<br>输入：nums1 = [3,2,0,1,0], nums2 = [6,5,0]<br>输出：12<br>解释：可以按下述方式替换数组中的 0 ：<br>- 用 2 和 4 替换 nums1 中的两个 0 。得到 nums1 = [3,2,2,1,4] 。<br>- 用 1 替换 nums2 中的一个 0 。得到 nums2 = [6,5,1] 。<br>两个数组的元素和相等，都等于 12 。可以证明这是可以获得的最小相等和。<br><br>示例 2：<br>输入：nums1 = [2,0,2,0], nums2 = [1,4]<br>输出：-1<br>解释：无法使两个数组的和相等。<br></code></pre></td></tr></table></figure><p><strong>数据范围</strong></p><ul><li><code>1 &lt;= nums1.length, nums2.length &lt;= 105</code></li><li><code>0 &lt;= nums1[i], nums2[i] &lt;= 106</code></li></ul><h2 id="解题思路">解题思路</h2><p>我们可以分成<strong>五种</strong>情况讨论</p><ul><li>假设数组的和相等</li><li>假设<code>nums1</code>有<strong>0</strong> <code>nums2</code>没<strong>0</strong></li><li>假设<code>nums1</code>没<strong>0</strong> <code>nums2</code>有<strong>0</strong></li><li>两个数组都有<strong>0</strong></li><li>两个数组都没<strong>0</strong></li></ul><p>先来看看第一种情况 如果两个数组和相等 我们需要判断<code>nums1不包含0 == nums2不包含0</code> ,如果符合条件则直接返回<strong>任意一个数组和</strong></p><p>第二种情况 设<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi><mo>=</mo><mi>n</mi><mi>u</mi><mi>m</mi><mi>s</mi><mn>2</mn><mo stretchy="false">[</mo><mi>n</mi><mo stretchy="false">]</mo><mo>+</mo><mi>n</mi><mi>u</mi><mi>m</mi><mi>s</mi><mn>2</mn><mo stretchy="false">[</mo><mi>n</mi><mo>+</mo><mn>1</mn><mo stretchy="false">]</mo><mo>+</mo><mi>n</mi><mi>u</mi><mi>m</mi><mi>s</mi><mn>2</mn><mo stretchy="false">[</mo><mi>n</mi><mo>+</mo><mn>2</mn><mo stretchy="false">]</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi></mrow><annotation encoding="application/x-tex">i=nums2[n]+nums2[n+1]+nums2[n+2]....</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">n</span><span class="mord mathnormal">u</span><span class="mord mathnormal">m</span><span class="mord mathnormal">s</span><span class="mord">2</span><span class="mopen">[</span><span class="mord mathnormal">n</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">n</span><span class="mord mathnormal">u</span><span class="mord mathnormal">m</span><span class="mord mathnormal">s</span><span class="mord">2</span><span class="mopen">[</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">n</span><span class="mord mathnormal">u</span><span class="mord mathnormal">m</span><span class="mord mathnormal">s</span><span class="mord">2</span><span class="mopen">[</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mclose">]</span><span class="mord">....</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>j</mi></mrow><annotation encoding="application/x-tex">j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.854em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span></span></span></span>为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mi>u</mi><mi>m</mi><mi>s</mi><mn>1</mn></mrow><annotation encoding="application/x-tex">nums1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord mathnormal">n</span><span class="mord mathnormal">u</span><span class="mord mathnormal">m</span><span class="mord mathnormal">s</span><span class="mord">1</span></span></span></span>数组中的0个数，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi><mo>=</mo><mi>n</mi><mi>u</mi><mi>m</mi><mi>s</mi><mn>1</mn><mo stretchy="false">[</mo><mi>n</mi><mo stretchy="false">]</mo><mo>+</mo><mi>n</mi><mi>u</mi><mi>m</mi><mi>s</mi><mn>1</mn><mo stretchy="false">[</mo><mi>n</mi><mo>+</mo><mn>1</mn><mo stretchy="false">]</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi></mrow><annotation encoding="application/x-tex">k=nums1[n]+nums1[n+1]....</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">n</span><span class="mord mathnormal">u</span><span class="mord mathnormal">m</span><span class="mord mathnormal">s</span><span class="mord">1</span><span class="mopen">[</span><span class="mord mathnormal">n</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">n</span><span class="mord mathnormal">u</span><span class="mord mathnormal">m</span><span class="mord mathnormal">s</span><span class="mord">1</span><span class="mopen">[</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span><span class="mord">....</span></span></span></span> 如果<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi><mo>&gt;</mo><mo>=</mo><mi>i</mi><mo>∣</mo><mo stretchy="false">(</mo><mi>i</mi><mo>−</mo><mi>k</mi><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><mi mathvariant="normal">/</mi><mi>j</mi><mo>=</mo><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">k&gt;=i\mid(i-k)//j==0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7335em;vertical-align:-0.0391em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∣</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mclose">)</span><span class="mord">//</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">==</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span>则返回<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">−</span><span class="mord">1</span></span></span></span>,否返回<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mi>u</mi><mi>m</mi><mi>s</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">nums2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord mathnormal">n</span><span class="mord mathnormal">u</span><span class="mord mathnormal">m</span><span class="mord mathnormal">s</span><span class="mord">2</span></span></span></span>的数组和</p><p>第三种情况 设<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi><mo>=</mo><mi>n</mi><mi>u</mi><mi>m</mi><mi>s</mi><mn>1</mn><mo stretchy="false">[</mo><mi>n</mi><mo stretchy="false">]</mo><mo>+</mo><mi>n</mi><mi>u</mi><mi>m</mi><mi>s</mi><mn>1</mn><mo stretchy="false">[</mo><mi>n</mi><mo>+</mo><mn>1</mn><mo stretchy="false">]</mo><mo>+</mo><mi>n</mi><mi>u</mi><mi>m</mi><mi>s</mi><mn>1</mn><mo stretchy="false">[</mo><mi>n</mi><mo>+</mo><mn>2</mn><mo stretchy="false">]</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi></mrow><annotation encoding="application/x-tex">i=nums1[n]+nums1[n+1]+nums1[n+2]....</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">n</span><span class="mord mathnormal">u</span><span class="mord mathnormal">m</span><span class="mord mathnormal">s</span><span class="mord">1</span><span class="mopen">[</span><span class="mord mathnormal">n</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">n</span><span class="mord mathnormal">u</span><span class="mord mathnormal">m</span><span class="mord mathnormal">s</span><span class="mord">1</span><span class="mopen">[</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">n</span><span class="mord mathnormal">u</span><span class="mord mathnormal">m</span><span class="mord mathnormal">s</span><span class="mord">1</span><span class="mopen">[</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mclose">]</span><span class="mord">....</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>j</mi></mrow><annotation encoding="application/x-tex">j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.854em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span></span></span></span>为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mi>u</mi><mi>m</mi><mi>s</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">nums2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord mathnormal">n</span><span class="mord mathnormal">u</span><span class="mord mathnormal">m</span><span class="mord mathnormal">s</span><span class="mord">2</span></span></span></span>数组中的0个数，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi><mo>=</mo><mi>n</mi><mi>u</mi><mi>m</mi><mi>s</mi><mn>2</mn><mo stretchy="false">[</mo><mi>n</mi><mo stretchy="false">]</mo><mo>+</mo><mi>n</mi><mi>u</mi><mi>m</mi><mi>s</mi><mn>2</mn><mo stretchy="false">[</mo><mi>n</mi><mo>+</mo><mn>1</mn><mo stretchy="false">]</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi></mrow><annotation encoding="application/x-tex">k=nums2[n]+nums2[n+1]....</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">n</span><span class="mord mathnormal">u</span><span class="mord mathnormal">m</span><span class="mord mathnormal">s</span><span class="mord">2</span><span class="mopen">[</span><span class="mord mathnormal">n</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">n</span><span class="mord mathnormal">u</span><span class="mord mathnormal">m</span><span class="mord mathnormal">s</span><span class="mord">2</span><span class="mopen">[</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span><span class="mord">....</span></span></span></span> 如果<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi><mo>&gt;</mo><mo>=</mo><mi>i</mi><mo>∣</mo><mo stretchy="false">(</mo><mi>i</mi><mo>−</mo><mi>k</mi><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><mi mathvariant="normal">/</mi><mi>j</mi><mo>=</mo><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">k&gt;=i\mid(i-k)//j==0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7335em;vertical-align:-0.0391em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∣</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mclose">)</span><span class="mord">//</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">==</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span>则返回<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">−</span><span class="mord">1</span></span></span></span>,否返回<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mi>u</mi><mi>m</mi><mi>s</mi><mn>1</mn></mrow><annotation encoding="application/x-tex">nums1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord mathnormal">n</span><span class="mord mathnormal">u</span><span class="mord mathnormal">m</span><span class="mord mathnormal">s</span><span class="mord">1</span></span></span></span>的数组和</p><p>关于这条公式的到来 我这里解释一下</p><p><strong>假设</strong><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mi>u</mi><mi>m</mi><mi>s</mi><mn>1</mn><mo>=</mo><mo stretchy="false">[</mo><mn>3</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><mo separator="true">,</mo><mn>0</mn><mo stretchy="false">]</mo><mo separator="true">,</mo><mi>n</mi><mi>u</mi><mi>m</mi><mi>s</mi><mn>2</mn><mo>=</mo><mo stretchy="false">[</mo><mn>6</mn><mo separator="true">,</mo><mn>5</mn><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">nums1 = [3,2,0,1,0], nums2 = [6,5,1]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord mathnormal">n</span><span class="mord mathnormal">u</span><span class="mord mathnormal">m</span><span class="mord mathnormal">s</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">3</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">0</span><span class="mclose">]</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">n</span><span class="mord mathnormal">u</span><span class="mord mathnormal">m</span><span class="mord mathnormal">s</span><span class="mord">2</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">6</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">5</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">1</span><span class="mclose">]</span></span></span></span> 可以看到<strong>第二个数组是没0的 第一个有两个零</strong></p><p><strong>第一个条件</strong><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi><mo>&gt;</mo><mo>=</mo><mi>i</mi></mrow><annotation encoding="application/x-tex">k&gt;=i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7335em;vertical-align:-0.0391em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span> <strong>则说明 如果第一个数组还是0的情况 它的和已经大于第二个数组 显然是无法修改的 只能返回-1</strong></p><p><strong>在满足第一个条件之下 我们还要继续判断</strong><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>i</mi><mo>−</mo><mi>k</mi><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><mi mathvariant="normal">/</mi><mi>j</mi></mrow><annotation encoding="application/x-tex">(i-k)//j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mclose">)</span><span class="mord">//</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span></span></span></span><strong>意思是 求出两个数组的差 然后除于第一个数组的0的个数 校验一下是否能把第一个数组的所有0均匀分配 如果除出来是0说明第一个数组和第二个数组的和无法相等</strong></p><p>第四种情况 先把<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mi>u</mi><mi>m</mi><mi>s</mi><mn>1</mn></mrow><annotation encoding="application/x-tex">nums1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord mathnormal">n</span><span class="mord mathnormal">u</span><span class="mord mathnormal">m</span><span class="mord mathnormal">s</span><span class="mord">1</span></span></span></span>的<strong>0</strong>全部改成<strong>1</strong> 代入第二种情况 再反过来重复即可</p><p><strong>注意:第四种情况 如果无法满足条件 不要返回-1 而是原始的答案 具体看下面的代码</strong></p><p>第五种情况 直接判断和是否相等 相等返回其中一个<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mi>u</mi><mi>m</mi><mi>s</mi></mrow><annotation encoding="application/x-tex">nums</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span><span class="mord mathnormal">u</span><span class="mord mathnormal">m</span><span class="mord mathnormal">s</span></span></span></span>的和 没则返回**-1**</p><p><strong>现在看看代码怎么写</strong></p><p>首先定义四个函数<code>i,j,i_,j_</code></p><ul><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span>是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mi>u</mi><mi>m</mi><mi>s</mi><mn>1</mn></mrow><annotation encoding="application/x-tex">nums1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord mathnormal">n</span><span class="mord mathnormal">u</span><span class="mord mathnormal">m</span><span class="mord mathnormal">s</span><span class="mord">1</span></span></span></span>的和</li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>j</mi></mrow><annotation encoding="application/x-tex">j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.854em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span></span></span></span>是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mi>u</mi><mi>m</mi><mi>s</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">nums2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord mathnormal">n</span><span class="mord mathnormal">u</span><span class="mord mathnormal">m</span><span class="mord mathnormal">s</span><span class="mord">2</span></span></span></span>的和</li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi><mi mathvariant="normal">_</mi></mrow><annotation encoding="application/x-tex">i\_</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9695em;vertical-align:-0.31em;"></span><span class="mord mathnormal">i</span><span class="mord" style="margin-right:0.02778em;">_</span></span></span></span>是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mi>u</mi><mi>m</mi><mi>s</mi><mn>1</mn></mrow><annotation encoding="application/x-tex">nums1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord mathnormal">n</span><span class="mord mathnormal">u</span><span class="mord mathnormal">m</span><span class="mord mathnormal">s</span><span class="mord">1</span></span></span></span><strong>0</strong>的个数</li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>j</mi><mi mathvariant="normal">_</mi></mrow><annotation encoding="application/x-tex">j\_</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9695em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mord" style="margin-right:0.02778em;">_</span></span></span></span>是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mi>u</mi><mi>m</mi><mi>s</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">nums2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord mathnormal">n</span><span class="mord mathnormal">u</span><span class="mord mathnormal">m</span><span class="mord mathnormal">s</span><span class="mord">2</span></span></span></span><strong>0</strong>的个数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span>:<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">minSum</span>(<span class="hljs-params">self, nums1: <span class="hljs-type">List</span>[<span class="hljs-built_in">int</span>], nums2: <span class="hljs-type">List</span>[<span class="hljs-built_in">int</span>]</span>) -&gt; <span class="hljs-built_in">int</span>:<br>        i,j,i_,j_ = <span class="hljs-built_in">sum</span>(nums1),<span class="hljs-built_in">sum</span>(nums2),<span class="hljs-number">0</span>,<span class="hljs-number">0</span><br>        <span class="hljs-keyword">for</span> k <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,<span class="hljs-built_in">len</span>(nums1)):<br>            <span class="hljs-keyword">if</span> nums1[k] == <span class="hljs-number">0</span>:<br>                i_+=<span class="hljs-number">1</span><br>        <span class="hljs-keyword">for</span> k <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,<span class="hljs-built_in">len</span>(nums2)):<br>            <span class="hljs-keyword">if</span> nums2[k] == <span class="hljs-number">0</span>:<br>                j_+=<span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><p>先来判断第一种情况和最后一种情况</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span>:<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">minSum</span>(<span class="hljs-params">self, nums1: <span class="hljs-type">List</span>[<span class="hljs-built_in">int</span>], nums2: <span class="hljs-type">List</span>[<span class="hljs-built_in">int</span>]</span>) -&gt; <span class="hljs-built_in">int</span>:<br>        i,j,i_,j_ = <span class="hljs-built_in">sum</span>(nums1),<span class="hljs-built_in">sum</span>(nums2),<span class="hljs-number">0</span>,<span class="hljs-number">0</span><br>        <span class="hljs-keyword">for</span> k <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,<span class="hljs-built_in">len</span>(nums1)):<br>            <span class="hljs-keyword">if</span> nums1[k] == <span class="hljs-number">0</span>:<br>                i_+=<span class="hljs-number">1</span><br>        <span class="hljs-keyword">for</span> k <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,<span class="hljs-built_in">len</span>(nums2)):<br>            <span class="hljs-keyword">if</span> nums2[k] == <span class="hljs-number">0</span>:<br>                j_+=<span class="hljs-number">1</span><br>        <span class="hljs-keyword">if</span> i == j <span class="hljs-keyword">and</span> i_ == <span class="hljs-number">0</span> <span class="hljs-keyword">and</span> j_ == <span class="hljs-number">0</span>:<br>            <span class="hljs-keyword">return</span> i<br>        <span class="hljs-keyword">if</span> i_ == <span class="hljs-number">0</span> <span class="hljs-keyword">and</span> j_ == <span class="hljs-number">0</span>:<br>            <span class="hljs-keyword">return</span> i == j  <br></code></pre></td></tr></table></figure><p>这里不能压缩两种情况,假设两个数组的数相同，左边没0右边有0，这种情况不适合</p><p>分别写入第二种情况和第三种情况</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span>:<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">minSum</span>(<span class="hljs-params">self, nums1: <span class="hljs-type">List</span>[<span class="hljs-built_in">int</span>], nums2: <span class="hljs-type">List</span>[<span class="hljs-built_in">int</span>]</span>) -&gt; <span class="hljs-built_in">int</span>:<br>        i,j,i_,j_ = <span class="hljs-built_in">sum</span>(nums1),<span class="hljs-built_in">sum</span>(nums2),<span class="hljs-number">0</span>,<span class="hljs-number">0</span><br>        <span class="hljs-keyword">for</span> k <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,<span class="hljs-built_in">len</span>(nums1)):<br>            <span class="hljs-keyword">if</span> nums1[k] == <span class="hljs-number">0</span>:<br>                i_+=<span class="hljs-number">1</span><br>        <span class="hljs-keyword">for</span> k <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,<span class="hljs-built_in">len</span>(nums2)):<br>            <span class="hljs-keyword">if</span> nums2[k] == <span class="hljs-number">0</span>:<br>                j_+=<span class="hljs-number">1</span><br>        <span class="hljs-keyword">if</span> i == j <span class="hljs-keyword">and</span> i_ == <span class="hljs-number">0</span> <span class="hljs-keyword">and</span> j_ == <span class="hljs-number">0</span>:<br>            <span class="hljs-keyword">return</span> i<br>        <span class="hljs-keyword">if</span> i_ == <span class="hljs-number">0</span> <span class="hljs-keyword">and</span> j_ == <span class="hljs-number">0</span>:<br>            <span class="hljs-keyword">return</span> -<span class="hljs-number">1</span> <span class="hljs-keyword">if</span> i != j <span class="hljs-keyword">else</span> i<br>        <span class="hljs-keyword">if</span> i_ == <span class="hljs-number">0</span> <span class="hljs-keyword">and</span> j_ != <span class="hljs-number">0</span>:<br>            <span class="hljs-keyword">return</span> -<span class="hljs-number">1</span> <span class="hljs-keyword">if</span> j &gt;= i <span class="hljs-keyword">or</span> (i-j)//j_ == <span class="hljs-number">0</span> <span class="hljs-keyword">else</span> i<br>        <span class="hljs-keyword">if</span> i_ != <span class="hljs-number">0</span> <span class="hljs-keyword">and</span> j_ == <span class="hljs-number">0</span>:<br>            <span class="hljs-keyword">return</span> -<span class="hljs-number">1</span> <span class="hljs-keyword">if</span> i &gt;= j <span class="hljs-keyword">or</span> (j-i)//i_ == <span class="hljs-number">0</span> <span class="hljs-keyword">else</span> j<br></code></pre></td></tr></table></figure><p>最后写第四种情况，定义<code>ans</code>为最终答案 并把<code>ans</code>初始化成<strong>10的11次方</strong></p><p>先填充<code>nums1</code>然后代入公式 更新最小值 <code>nums2</code>同理</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 时间复杂度O(n)</span><br><span class="hljs-comment"># 空间复杂度O(1) 仅用了若干变量</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span>:<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">minSum</span>(<span class="hljs-params">self, nums1: <span class="hljs-type">List</span>[<span class="hljs-built_in">int</span>], nums2: <span class="hljs-type">List</span>[<span class="hljs-built_in">int</span>]</span>) -&gt; <span class="hljs-built_in">int</span>:<br>        i,j,i_,j_ = <span class="hljs-built_in">sum</span>(nums1),<span class="hljs-built_in">sum</span>(nums2),<span class="hljs-number">0</span>,<span class="hljs-number">0</span><br>        <span class="hljs-keyword">for</span> k <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,<span class="hljs-built_in">len</span>(nums1)):<br>            <span class="hljs-keyword">if</span> nums1[k] == <span class="hljs-number">0</span>:<br>                i_+=<span class="hljs-number">1</span> <span class="hljs-comment"># 先统计第一个数组0的个数</span><br>        <span class="hljs-keyword">for</span> k <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,<span class="hljs-built_in">len</span>(nums2)):<br>            <span class="hljs-keyword">if</span> nums2[k] == <span class="hljs-number">0</span>:<br>                j_+=<span class="hljs-number">1</span> <span class="hljs-comment"># 然后是第二个数组0的个数</span><br>        <span class="hljs-keyword">if</span> i == j <span class="hljs-keyword">and</span> i_ == <span class="hljs-number">0</span> <span class="hljs-keyword">and</span> j_ == <span class="hljs-number">0</span>:<br>            <span class="hljs-keyword">return</span> i <span class="hljs-comment"># 如果值相等 第一个数组和第二个数组都没0 则返回任意一个数组的和</span><br>        <span class="hljs-keyword">if</span> i_ == <span class="hljs-number">0</span> <span class="hljs-keyword">and</span> j_ == <span class="hljs-number">0</span>:<br>            <span class="hljs-keyword">return</span> -<span class="hljs-number">1</span> <span class="hljs-keyword">if</span> i != j <span class="hljs-keyword">else</span> i <span class="hljs-comment"># 如果第一个和第二个都没0 则判断一下他们的和</span><br>        <span class="hljs-keyword">if</span> i_ == <span class="hljs-number">0</span> <span class="hljs-keyword">and</span> j_ != <span class="hljs-number">0</span>:<br>            <span class="hljs-keyword">return</span> -<span class="hljs-number">1</span> <span class="hljs-keyword">if</span> j &gt;= i <span class="hljs-keyword">or</span> (i-j)//j_ == <span class="hljs-number">0</span> <span class="hljs-keyword">else</span> i <span class="hljs-comment"># 第一个数组有0 第二个数组没0 代入公式求解即可</span><br>        <span class="hljs-keyword">if</span> i_ != <span class="hljs-number">0</span> <span class="hljs-keyword">and</span> j_ == <span class="hljs-number">0</span>:<br>            <span class="hljs-keyword">return</span> -<span class="hljs-number">1</span> <span class="hljs-keyword">if</span> i &gt;= j <span class="hljs-keyword">or</span> (j-i)//i_ == <span class="hljs-number">0</span> <span class="hljs-keyword">else</span> j <span class="hljs-comment"># 第一个数组没0 第二个数组有0 代入公式求解即可</span><br>        o = <span class="hljs-number">10</span> ** <span class="hljs-number">11</span> <span class="hljs-comment"># 初始化一个无穷大的答案</span><br>        <span class="hljs-keyword">for</span> k <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,<span class="hljs-built_in">len</span>(nums1)):<br>            <span class="hljs-keyword">if</span> nums1[k] == <span class="hljs-number">0</span>: <br>                nums1[k] = <span class="hljs-number">1</span> <span class="hljs-comment"># 假设把第一个数组的0全部改成1</span><br>        k_ = <span class="hljs-built_in">sum</span>(nums1) <span class="hljs-comment"># 更新现在的值       </span><br>        o = <span class="hljs-built_in">min</span>(o,o <span class="hljs-keyword">if</span> j &gt;= k_ <span class="hljs-keyword">or</span> (k_-j)//j_ == <span class="hljs-number">0</span> <span class="hljs-keyword">else</span> k_) <span class="hljs-comment"># 代入公式求解 这里不满足不要返回-1 而是原来的o</span><br>        <span class="hljs-keyword">for</span> k <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,<span class="hljs-built_in">len</span>(nums2)):<br>            <span class="hljs-keyword">if</span> nums2[k] == <span class="hljs-number">0</span>:<br>                nums2[k] = <span class="hljs-number">1</span> <span class="hljs-comment"># 假设把第二个数组的0改成1</span><br>        k_ = <span class="hljs-built_in">sum</span>(nums2) <span class="hljs-comment"># 更新现在的和</span><br>        o = <span class="hljs-built_in">min</span>(o,o <span class="hljs-keyword">if</span> i &gt;= k_ <span class="hljs-keyword">or</span> (k_-i)//i_ == <span class="hljs-number">0</span> <span class="hljs-keyword">else</span> k_) <span class="hljs-comment"># 代入公式求解 这里不满足不要返回-1 而是原来的o</span><br>        <span class="hljs-keyword">return</span> o <span class="hljs-comment"># 返回答案</span><br></code></pre></td></tr></table></figure><h2 id="示例代码">示例代码</h2><p><strong>Python</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 时间复杂度O(n)</span><br><span class="hljs-comment"># 空间复杂度O(1) 仅用了若干变量</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span>:<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">minSum</span>(<span class="hljs-params">self, nums1: <span class="hljs-type">List</span>[<span class="hljs-built_in">int</span>], nums2: <span class="hljs-type">List</span>[<span class="hljs-built_in">int</span>]</span>) -&gt; <span class="hljs-built_in">int</span>:<br>        i,j,i_,j_ = <span class="hljs-built_in">sum</span>(nums1),<span class="hljs-built_in">sum</span>(nums2),<span class="hljs-number">0</span>,<span class="hljs-number">0</span><br>        <span class="hljs-keyword">for</span> k <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,<span class="hljs-built_in">len</span>(nums1)):<br>            <span class="hljs-keyword">if</span> nums1[k] == <span class="hljs-number">0</span>:<br>                i_+=<span class="hljs-number">1</span> <span class="hljs-comment"># 先统计第一个数组0的个数</span><br>        <span class="hljs-keyword">for</span> k <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,<span class="hljs-built_in">len</span>(nums2)):<br>            <span class="hljs-keyword">if</span> nums2[k] == <span class="hljs-number">0</span>:<br>                j_+=<span class="hljs-number">1</span> <span class="hljs-comment"># 然后是第二个数组0的个数</span><br>        <span class="hljs-keyword">if</span> i == j <span class="hljs-keyword">and</span> i_ == <span class="hljs-number">0</span> <span class="hljs-keyword">and</span> j_ == <span class="hljs-number">0</span>:<br>            <span class="hljs-keyword">return</span> i <span class="hljs-comment"># 如果值相等 第一个数组和第二个数组都没0 则返回任意一个数组的和</span><br>        <span class="hljs-keyword">if</span> i_ == <span class="hljs-number">0</span> <span class="hljs-keyword">and</span> j_ == <span class="hljs-number">0</span>:<br>            <span class="hljs-keyword">return</span> -<span class="hljs-number">1</span> <span class="hljs-keyword">if</span> i != j <span class="hljs-keyword">else</span> i <span class="hljs-comment"># 如果第一个和第二个都没0 则判断一下他们的和</span><br>        <span class="hljs-keyword">if</span> i_ == <span class="hljs-number">0</span> <span class="hljs-keyword">and</span> j_ != <span class="hljs-number">0</span>:<br>            <span class="hljs-keyword">return</span> -<span class="hljs-number">1</span> <span class="hljs-keyword">if</span> j &gt;= i <span class="hljs-keyword">or</span> (i-j)//j_ == <span class="hljs-number">0</span> <span class="hljs-keyword">else</span> i <span class="hljs-comment"># 第一个数组有0 第二个数组没0 代入公式求解即可</span><br>        <span class="hljs-keyword">if</span> i_ != <span class="hljs-number">0</span> <span class="hljs-keyword">and</span> j_ == <span class="hljs-number">0</span>:<br>            <span class="hljs-keyword">return</span> -<span class="hljs-number">1</span> <span class="hljs-keyword">if</span> i &gt;= j <span class="hljs-keyword">or</span> (j-i)//i_ == <span class="hljs-number">0</span> <span class="hljs-keyword">else</span> j <span class="hljs-comment"># 第一个数组没0 第二个数组有0 代入公式求解即可</span><br>        o = <span class="hljs-number">10</span> ** <span class="hljs-number">11</span> <span class="hljs-comment"># 初始化一个无穷大的答案</span><br>        <span class="hljs-keyword">for</span> k <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,<span class="hljs-built_in">len</span>(nums1)):<br>            <span class="hljs-keyword">if</span> nums1[k] == <span class="hljs-number">0</span>: <br>                nums1[k] = <span class="hljs-number">1</span> <span class="hljs-comment"># 假设把第一个数组的0全部改成1</span><br>        k_ = <span class="hljs-built_in">sum</span>(nums1) <span class="hljs-comment"># 更新现在的值       </span><br>        o = <span class="hljs-built_in">min</span>(o,o <span class="hljs-keyword">if</span> j &gt;= k_ <span class="hljs-keyword">or</span> (k_-j)//j_ == <span class="hljs-number">0</span> <span class="hljs-keyword">else</span> k_) <span class="hljs-comment"># 代入公式求解 这里不满足不要返回-1 而是原来的o</span><br>        <span class="hljs-keyword">for</span> k <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,<span class="hljs-built_in">len</span>(nums2)):<br>            <span class="hljs-keyword">if</span> nums2[k] == <span class="hljs-number">0</span>:<br>                nums2[k] = <span class="hljs-number">1</span> <span class="hljs-comment"># 假设把第二个数组的0改成1</span><br>        k_ = <span class="hljs-built_in">sum</span>(nums2) <span class="hljs-comment"># 更新现在的和</span><br>        o = <span class="hljs-built_in">min</span>(o,o <span class="hljs-keyword">if</span> i &gt;= k_ <span class="hljs-keyword">or</span> (k_-i)//i_ == <span class="hljs-number">0</span> <span class="hljs-keyword">else</span> k_) <span class="hljs-comment"># 代入公式求解 这里不满足不要返回-1 而是原来的o</span><br>        <span class="hljs-keyword">return</span> o <span class="hljs-comment"># 返回答案</span><br></code></pre></td></tr></table></figure><p><strong>C++</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-comment">// 时间复杂度O(n)</span><br><span class="hljs-comment">// 空间复杂度O(1)</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span> &#123;<br><span class="hljs-keyword">public</span>:<br>    <span class="hljs-function"><span class="hljs-type">long</span> <span class="hljs-type">long</span> <span class="hljs-title">minSum</span><span class="hljs-params">(vector&lt;<span class="hljs-type">int</span>&gt;&amp; nums1, vector&lt;<span class="hljs-type">int</span>&gt;&amp; nums2)</span> </span>&#123;<br>        <span class="hljs-type">long</span> <span class="hljs-type">long</span> i = <span class="hljs-number">0</span>; <span class="hljs-type">long</span> <span class="hljs-type">long</span> j = <span class="hljs-number">0</span>; <span class="hljs-type">int</span> i_ = <span class="hljs-number">0</span>; <span class="hljs-type">int</span> j_ = <span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> k = <span class="hljs-number">0</span>; k &lt; nums1.<span class="hljs-built_in">size</span>(); k++ )&#123;<br>            <span class="hljs-keyword">if</span> (nums1[k] == <span class="hljs-number">0</span>)&#123;i_++;&#125;<span class="hljs-keyword">else</span>&#123;i+=nums1[k];&#125;<br>        &#125;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> k = <span class="hljs-number">0</span>; k &lt; nums2.<span class="hljs-built_in">size</span>(); k++)&#123;<br>            <span class="hljs-keyword">if</span> (nums2[k] == <span class="hljs-number">0</span>)&#123;j_++;&#125;<span class="hljs-keyword">else</span>&#123;j+=nums2[k];&#125;<br>        &#125;<br>        <span class="hljs-keyword">if</span>(i == j &amp;&amp; i_ == <span class="hljs-number">0</span> &amp;&amp; j_ == <span class="hljs-number">0</span>)&#123;<span class="hljs-keyword">return</span> i;&#125;<br>        <span class="hljs-keyword">if</span>(i_ == <span class="hljs-number">0</span> &amp;&amp; j_ == <span class="hljs-number">0</span>)&#123;<span class="hljs-keyword">return</span> i = j ? <span class="hljs-number">-1</span> : i;&#125;<br>        <span class="hljs-keyword">if</span>(i_ == <span class="hljs-number">0</span> &amp;&amp; j_ != <span class="hljs-number">0</span>)&#123;<span class="hljs-keyword">return</span> j &gt;= i || (i-j)/j_ == <span class="hljs-number">0</span> ? <span class="hljs-number">-1</span> : i;&#125;<br>        <span class="hljs-keyword">if</span>(i_ != <span class="hljs-number">0</span> &amp;&amp; j_ == <span class="hljs-number">0</span>)&#123;<span class="hljs-keyword">return</span> i &gt;= j || (j-i)/i_ == <span class="hljs-number">0</span> ? <span class="hljs-number">-1</span> : j;&#125;<br>        <span class="hljs-type">long</span> <span class="hljs-type">long</span> o = <span class="hljs-number">100000000000</span>;<br>        <span class="hljs-type">long</span> <span class="hljs-type">long</span> k_ = <span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> k = <span class="hljs-number">0</span>; k &lt; nums1.<span class="hljs-built_in">size</span>(); k++)&#123;<br>            <span class="hljs-keyword">if</span>(nums1[k]==<span class="hljs-number">0</span>)&#123;nums1[k] = <span class="hljs-number">1</span>;k_++;&#125;<span class="hljs-keyword">else</span>&#123;k_+=nums1[k];&#125;<br>        &#125; <br>        o = <span class="hljs-built_in">min</span>(o,j &gt;= k_ || (k_-j)/j_ == <span class="hljs-number">0</span> ? o : k_);<br>        k_ = <span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> k = <span class="hljs-number">0</span>; k &lt; nums2.<span class="hljs-built_in">size</span>(); k++)&#123;<br>            <span class="hljs-keyword">if</span>(nums2[k]==<span class="hljs-number">0</span>)&#123;nums2[k] = <span class="hljs-number">1</span>; k_++;&#125;<span class="hljs-keyword">else</span>&#123;k_+=nums2[k];&#125;<br>        &#125;<br>        o = <span class="hljs-built_in">min</span>(o,i &gt;= k_ || (k_-i)/i_ == <span class="hljs-number">0</span> ? o : k_);<br>        <span class="hljs-keyword">if</span>(o == <span class="hljs-number">100000000000</span>)&#123;<span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>;&#125;<br>        <span class="hljs-keyword">return</span> o; <br>    &#125;<br>&#125;;<br></code></pre></td></tr></table></figure><h2 id="后记">后记</h2><p>这种题写起来真麻烦 博主测试的时候错了很多次</p><p><img src="https://s11.ax1x.com/2023/11/05/piQJQDs.png" alt=""></p><p>感谢你的收看</p>]]></content>
    
    
    <categories>
      
      <category>leetcode</category>
      
    </categories>
    
    
    <tags>
      
      <tag>leetcode</tag>
      
      <tag>code</tag>
      
      <tag>分类讨论</tag>
      
      <tag>贪心</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Leetcode 2673&amp;2674 有序三元组中的最大值</title>
    <link href="/2023/10/21/leetcode2873&amp;2874/"/>
    <url>/2023/10/21/leetcode2873&amp;2874/</url>
    
    <content type="html"><![CDATA[<h2 id="前言">前言</h2><p>这次的两道题目出<code>leetcode</code>周赛<a href="https://leetcode.cn/contest/weekly-contest-365/">第 365 场周赛</a></p><p>由于<code>t1</code>和<code>t2</code>题目意思一样 这里就合并起来讲了</p><span id="more"></span><p><a href="https://leetcode.cn/problems/maximum-value-of-an-ordered-triplet-i/">2873. 有序三元组中的最大值 I</a></p><p><a href="https://leetcode.cn/problems/maximum-value-of-an-ordered-triplet-ii/">2874. 有序三元组中的最大值 II</a></p><h2 id="题目描述">题目描述</h2><p>给你一个下标从 <strong>0</strong> 开始的整数数组 <code>nums</code> 。</p><p>请你从所有满足 <code>i &lt; j &lt; k</code> 的下标三元组 <code>(i, j, k)</code> 中，找出并返回下标三元组的最大值。如果所有满足条件的三元组的值都是负数，则返回 <code>0</code> 。</p><p><strong>下标三元组</strong> <code>(i, j, k)</code> 的值等于 <code>(nums[i] - nums[j]) * nums[k]</code> 。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs bash">示例 1：<br>输入：nums = [12,6,1,2,7]<br>输出：77<br>解释：下标三元组 (0, 2, 4) 的值是 (nums[0] - nums[2]) * nums[4] = 77 。<br>可以证明不存在值大于 77 的有序下标三元组。<br><br>示例 2：<br>输入：nums = [1,10,3,4,19]<br>输出：133<br>解释：下标三元组 (1, 2, 4) 的值是 (nums[1] - nums[2]) * nums[4] = 133 。<br>可以证明不存在值大于 133 的有序下标三元组。 <br><br>示例 3：<br>输入：nums = [1,2,3]<br>输出：0<br>解释：唯一的下标三元组 (0, 1, 2) 的值是一个负数，(nums[0] - nums[1]) * nums[2] = -3 。因此，答案是 0 。<br></code></pre></td></tr></table></figure><h2 id="解题思路">解题思路</h2><h3 id="暴力">暴力</h3><p>初始化答案<code>ans</code>通过<code>三层for</code>枚举<code>ijk</code>并代入<code>i&lt;j&lt;k</code>和<code>(nums[i] - nums[j]) * nums[k]</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 时间复杂度O(n的立方)</span><br><span class="hljs-comment"># 空间复杂度o(1)</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span>:<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">maximumTripletValue</span>(<span class="hljs-params">self, nums: <span class="hljs-type">List</span>[<span class="hljs-built_in">int</span>]</span>) -&gt; <span class="hljs-built_in">int</span>:<br>        ans = <span class="hljs-number">0</span><br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,<span class="hljs-built_in">len</span>(nums)):<br>            <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,<span class="hljs-built_in">len</span>(nums)):<br>                <span class="hljs-keyword">for</span> k <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,<span class="hljs-built_in">len</span>(nums)):<br>                    <span class="hljs-keyword">if</span> i &lt; j &lt; k:<br>                        ans = <span class="hljs-built_in">max</span>(ans,(nums[i]-nums[j])*nums[k])<br>        <span class="hljs-keyword">return</span> ans<br></code></pre></td></tr></table></figure><p><img src="https://s11.ax1x.com/2023/10/21/piFIDa9.png" alt=""></p><p>由于<code>t1</code>的数据范围很小只有<code>100</code> 三层for循环遍历了<code>100000</code>次 是可以勉强通过的</p><p>但是到了<code>t2</code>的数据范围比较大 是<code>100000</code>我们再用<code>t1</code>的代码是无法通过的 因为遍历<code>100000000</code>次显然是不行的 因此我们需要<code>空间换时间</code></p><h3 id="前缀值">前缀值</h3><p>我们再把眼光看回这条公式</p><p><code>(nums[i] - nums[j]) * nums[k]</code> <code>i&lt;j&lt;k</code></p><p>对于这种情况 假设我们已知道了<code>j</code> 那问题是不是变成了找<code>j-1</code>中的最大<code>i</code>和<code>j+1</code>的最大<code>k</code></p><p>变成两种条件</p><ul><li>找<code>j-1</code> 即<code>j</code>的左边的最大i</li><li>找<code>j+1</code> 即<code>j</code>右边最大<code>k</code></li></ul><p>可以预处理这些信息</p><p>好 现在来看看代码怎么写</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">i_ = [<span class="hljs-number">0</span> <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,<span class="hljs-built_in">len</span>(nums))]<br>k_ = [<span class="hljs-number">0</span> <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,<span class="hljs-built_in">len</span>(nums))]<br></code></pre></td></tr></table></figure><p>开两个数组 并全部初始化成0</p><p>分别<code>从左到右</code>更新<code>i</code>的最大值 <code>从右到左</code>更新<code>k</code>的最大值</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python">i_ = [<span class="hljs-number">0</span> <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,<span class="hljs-built_in">len</span>(nums))]<br>k_ = [<span class="hljs-number">0</span> <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,<span class="hljs-built_in">len</span>(nums))]<br><br>i_[<span class="hljs-number">0</span>] = nums[<span class="hljs-number">0</span>]<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>,<span class="hljs-built_in">len</span>(nums)):<br>    i_[i] = <span class="hljs-built_in">max</span>(i_[i-<span class="hljs-number">1</span>],nums[i])<br><br>k_[-<span class="hljs-number">1</span>] = nums[-<span class="hljs-number">1</span>]<br><span class="hljs-keyword">for</span> k <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(nums)-<span class="hljs-number">2</span>,-<span class="hljs-number">1</span>,-<span class="hljs-number">1</span>):<br>    k_[k] = <span class="hljs-built_in">max</span>(k_[k+<span class="hljs-number">1</span>],nums[k])<br></code></pre></td></tr></table></figure><ul><li>i_ 代表<code>j-1</code>的最大<code>i</code></li><li>k_代表<code>j+1</code>的最大<code>k</code></li></ul><p>开始枚举<code>j</code> 并初始化答案<code>(ans)</code> 代入公式不断更新最大值</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 时间复杂度:O(n)</span><br><span class="hljs-comment"># 空间复杂度:O(n)</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span>:<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">maximumTripletValue</span>(<span class="hljs-params">self, nums: <span class="hljs-type">List</span>[<span class="hljs-built_in">int</span>]</span>) -&gt; <span class="hljs-built_in">int</span>:<br>        i_ = [<span class="hljs-number">0</span> <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,<span class="hljs-built_in">len</span>(nums))]<br>        k_ = [<span class="hljs-number">0</span> <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,<span class="hljs-built_in">len</span>(nums))]<br><br>        i_[<span class="hljs-number">0</span>] = nums[<span class="hljs-number">0</span>]<br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>,<span class="hljs-built_in">len</span>(nums)):<br>            i_[i] = <span class="hljs-built_in">max</span>(i_[i-<span class="hljs-number">1</span>],nums[i])<br><br>        k_[-<span class="hljs-number">1</span>] = nums[-<span class="hljs-number">1</span>]<br>        <span class="hljs-keyword">for</span> k <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(nums)-<span class="hljs-number">2</span>,-<span class="hljs-number">1</span>,-<span class="hljs-number">1</span>):<br>            k_[k] = <span class="hljs-built_in">max</span>(k_[k+<span class="hljs-number">1</span>],nums[k])<br>        <br>        ans = <span class="hljs-number">0</span><br>        <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>,<span class="hljs-built_in">len</span>(nums)-<span class="hljs-number">1</span>):<br>            ans = <span class="hljs-built_in">max</span>(ans,(i_[j-<span class="hljs-number">1</span>] - nums[j])* k_[j+<span class="hljs-number">1</span>])<br>        <span class="hljs-keyword">return</span> ans<br></code></pre></td></tr></table></figure><p><code>t2</code>就能过了</p><p><img src="https://s11.ax1x.com/2023/10/21/pikEmuT.png" alt=""></p><h3 id="前缀值-优化">前缀值(优化)</h3><p>我们注意到<code>i_max</code>是在前面获取的 也是从左到右遍历的 我们可以在更新<code>ans</code>的时候 把<code>i_max</code>也更新 这样开一个数组就行</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 时间复杂度:O(n)</span><br><span class="hljs-comment"># 空间复杂度:O(n)</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span>:<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">maximumTripletValue</span>(<span class="hljs-params">self, nums: <span class="hljs-type">List</span>[<span class="hljs-built_in">int</span>]</span>) -&gt; <span class="hljs-built_in">int</span>:<br>        k_ = [<span class="hljs-number">0</span> <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,<span class="hljs-built_in">len</span>(nums))]<br><br>        k_[-<span class="hljs-number">1</span>] = nums[-<span class="hljs-number">1</span>]<br>        <span class="hljs-keyword">for</span> k <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(nums)-<span class="hljs-number">2</span>,-<span class="hljs-number">1</span>,-<span class="hljs-number">1</span>):<br>            k_[k] = <span class="hljs-built_in">max</span>(k_[k+<span class="hljs-number">1</span>],nums[k])<br>        <br>        ans = <span class="hljs-number">0</span><br>        i_ = nums[<span class="hljs-number">0</span>]<br>        <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>,<span class="hljs-built_in">len</span>(nums)-<span class="hljs-number">1</span>):<br>            ans = <span class="hljs-built_in">max</span>(ans,(i_ - nums[j])* k_[j+<span class="hljs-number">1</span>])<br>            i_ = <span class="hljs-built_in">max</span>(i_,nums[j])<br>        <span class="hljs-keyword">return</span> ans<br></code></pre></td></tr></table></figure><p><img src="https://s11.ax1x.com/2023/10/21/pikEl59.png" alt=""></p><h2 id="示例代码">示例代码</h2><p><code>Python</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 时间复杂度:O(n)</span><br><span class="hljs-comment"># 空间复杂度:O(n)</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span>:<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">maximumTripletValue</span>(<span class="hljs-params">self, nums: <span class="hljs-type">List</span>[<span class="hljs-built_in">int</span>]</span>) -&gt; <span class="hljs-built_in">int</span>:<br>        k_ = [<span class="hljs-number">0</span> <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,<span class="hljs-built_in">len</span>(nums))]<br><br>        k_[-<span class="hljs-number">1</span>] = nums[-<span class="hljs-number">1</span>]<br>        <span class="hljs-keyword">for</span> k <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(nums)-<span class="hljs-number">2</span>,-<span class="hljs-number">1</span>,-<span class="hljs-number">1</span>):<br>            k_[k] = <span class="hljs-built_in">max</span>(k_[k+<span class="hljs-number">1</span>],nums[k])<br>        <br>        ans = <span class="hljs-number">0</span><br>        i_ = nums[<span class="hljs-number">0</span>]<br>        <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>,<span class="hljs-built_in">len</span>(nums)-<span class="hljs-number">1</span>):<br>            ans = <span class="hljs-built_in">max</span>(ans,(i_ - nums[j])* k_[j+<span class="hljs-number">1</span>])<br>            i_ = <span class="hljs-built_in">max</span>(i_,nums[j])<br>        <span class="hljs-keyword">return</span> ans<br></code></pre></td></tr></table></figure><p><code>C++</code></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-comment">// 时间复杂度 O(n)</span><br><span class="hljs-comment">// 空间复杂度 O(n)</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span> &#123;<br><span class="hljs-keyword">public</span>:<br>    <span class="hljs-function"><span class="hljs-type">long</span> <span class="hljs-type">long</span> <span class="hljs-title">maximumTripletValue</span><span class="hljs-params">(vector&lt;<span class="hljs-type">int</span>&gt;&amp; nums)</span> </span>&#123;<br>        <span class="hljs-type">int</span> k[<span class="hljs-number">100001</span>];<br>        <span class="hljs-type">long</span> <span class="hljs-type">long</span> ans = <span class="hljs-number">0</span>;<br>        <span class="hljs-type">long</span> <span class="hljs-type">long</span> i_ = nums[<span class="hljs-number">0</span>];<br>        <span class="hljs-type">int</span> n = nums.<span class="hljs-built_in">size</span>();<br><br>        k[n<span class="hljs-number">-1</span>] = nums[n<span class="hljs-number">-1</span>];<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i = n - <span class="hljs-number">2</span>; i &gt;= <span class="hljs-number">0</span>; --i)&#123;<br>            k[i] = <span class="hljs-built_in">max</span>(k[i+<span class="hljs-number">1</span>],nums[i]);<br>        &#125;<br><br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> j = <span class="hljs-number">1</span>; j &lt; n - <span class="hljs-number">1</span>; ++j)&#123;<br>            ans = <span class="hljs-built_in">max</span>(ans,(i_ - nums[j]) * k[j+<span class="hljs-number">1</span>]);<br>            i_ = <span class="hljs-built_in">max</span>(i_,(<span class="hljs-type">long</span> <span class="hljs-type">long</span>)nums[j]);<br>        &#125;<br>        <span class="hljs-keyword">return</span> ans;<br>    &#125;<br>&#125;;<br></code></pre></td></tr></table></figure><h2 id="后记">后记</h2><p>多动手，多思考</p>]]></content>
    
    
    <categories>
      
      <category>leetcode</category>
      
    </categories>
    
    
    <tags>
      
      <tag>leetcode</tag>
      
      <tag>code</tag>
      
      <tag>动态规划</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>目前可用的QQ机器人hook框架-Chronocat教程(复活?)</title>
    <link href="/2023/10/14/chronocat_1/"/>
    <url>/2023/10/14/chronocat_1/</url>
    
    <content type="html"><![CDATA[<p>由于看到隔壁的最新消息，由于腾讯对低版本加了检测，故旧版本cc无法使用，本教程删除</p><span id="more"></span><blockquote><p>另外cc还在维护，最新版具体如何获得，看大家的渠道了</p></blockquote><p><img src="https://pic.imgdb.cn/item/65b7d0a6871b83018a5ef7f6.png" alt=""></p><img src="https://pic.imgdb.cn/item/65b7d126871b83018a61879f.jpg" style="zoom:50%;" /><p>还有一件事，就是和大家说其实<code>QQ9.0.8</code>也是有签名的，只不过被删了，</p><p>就这样吧</p><h2 id="2024-06-10-更新">2024.06.10 更新</h2><p><code>cc</code>已经复活了，<strong>配置方法好像大概没变？</strong></p><p><code>chronocat文档</code>:<a href="https://chronocat.vercel.app/">点我</a> <strong>支持nonebot,koishi等框架</strong></p><hr><p>接下来是原来的教程</p><p>最近<code>go-cqhttp</code>发表了一个重要通知，就是因为<code>txsb</code>频繁的去修改加密签名，<code>go-cqhttp</code>开发组已无力去维护本项目，协议库的时代已成为过去，陪伴了我们三年的时间</p><p>我们可以在<code>gocq</code>的<code>GitHub</code><a href="https://github.com/Mrs4s/go-cqhttp">仓库</a>看到这样的一句话</p><p><img src="https://s11.ax1x.com/2023/10/13/pipcjQx.png" alt=""></p><p>因为本人在学校里住宿，平时只能节假日或者周末上线，所以得知消息来晚了一点<code>(以下是官方原话自行看吧)</code></p><p><img src="https://pic.imgdb.cn/item/652965b5c458853aefb0e53a.png" alt=""></p><p>所以本期教程就使用推荐的框架<code>Chronocat</code></p><h2 id="配置客户端">配置客户端</h2><p>首先是安装<code>QQNT</code>版官方客户端  这里<code>Chronocat推荐了</code>了三个版本 选择对应的系统下载👇 👇</p><p><a href="https://dldir1.qq.com/qqfile/qq/QQNT/8ebcccd2/QQ9.9.0.14619_x64.exe">Windows</a></p><p><a href="https://dldir1.qq.com/qqfile/qq/QQNT/5333e29d/QQ_v6.9.12-10951.dmg">macOS</a></p><p><a href="https://dldir1.qq.com/qqfile/qq/QQNT/ad5b5393/linuxqq_3.1.2-13107_amd64.deb">Linux</a></p><p>本期教程以Windows系统演示</p><p>这里博主已经安装好了</p><p><img src="https://pic.imgdb.cn/item/652966e9c458853aefb4ee4a.png" alt=""></p><p>登录之后 <code>左下角的三条横线-&gt;设置-&gt;登录设置</code></p><p><img src="https://pic.imgdb.cn/item/6529673ac458853aefb64a3c.png" alt=""></p><p>把第一个和第二个打开 然后关掉设置</p><p>客户端已经配置好了 接下来去下载框架本体</p><h2 id="安装Liteloader">安装Liteloader</h2><p>因为Chronocat需要liteloader来启动</p><p><strong>注：本教程的liteloaderqqnt 版本太旧了，推荐大家看官方文档安装liteloader</strong></p><p>liteloader文档链接:<a href="https://liteloaderqqnt.github.io/">https://liteloaderqqnt.github.io/</a></p><p>把补丁解压 放到你的qqnt安装目录下的 <code>resources-&gt;app</code>文件夹</p><p><img src="https://pic.imgdb.cn/item/6529690ac458853aefbd36b4.png" alt=""></p><p>打开下面的<code>package.json</code>文件 修改如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash">  &#123;<br>   ...<br>   <span class="hljs-string">&quot;homepage&quot;</span>: <span class="hljs-string">&quot;https://im.qq.com&quot;</span>,<br>   <span class="hljs-string">&quot;sideEffects&quot;</span>: <span class="hljs-literal">true</span>,<br>-  <span class="hljs-string">&quot;main&quot;</span>: <span class="hljs-string">&quot;./app_launcher/index.js&quot;</span>,<br>+  <span class="hljs-string">&quot;main&quot;</span>: <span class="hljs-string">&quot;./LiteLoader&quot;</span>,<br>   ...<br>  &#125;<br></code></pre></td></tr></table></figure><p>保存关闭 退出你的qq 重新登录</p><p>打开设置</p><p><img src="https://chronocat.vercel.app/assets/images/settings1-0075a1e4e22c2a9fecd66caf33f89d3f.png" alt=""></p><p><img src="https://pic.imgdb.cn/item/652969e8c458853aefc002f9.png" alt=""></p><p>出现这两个说明安装成功了</p><h2 id="安装Chronocat">安装Chronocat</h2><p>下载最新版的插件</p><p><a href="https://github.com/chrononeko/chronocat/releases/download/v0.0.52/chronocat-llqqnt-v0.0.52.zip">chronocat-llqqnt-v0.0.52.zip</a></p><p><a href="https://cdn.bingyue.top/chronocat-llqqnt-v0.0.52.zip">备用下载链接</a></p><p>解压 打开你电脑上的文档文件夹 找到<code>LiteLoaderQQNT</code>文件夹</p><p><img src="https://pic.imgdb.cn/item/65296af3c458853aefc39619.png" alt=""></p><p>打开该文件夹 进入plugins文件夹 把解压好的<code>chronocat-llqqnt-v0.0.52</code>复制进去</p><p><img src="https://pic.imgdb.cn/item/65296b5ec458853aefc50b36.png" alt=""></p><p>重启一下QQ 确保插件正确加载</p><p><img src="https://pic.imgdb.cn/item/65296bd4c458853aefc6b676.png" alt=""></p><p>已经安装好了</p><h2 id="对接Nonebot">对接Nonebot</h2><p>确保你已经安装<code>nb-cli</code>如果没有可以去我之前的教程<a href="https://blog.bingyue.top/2023/03/26/nonebot2_cr/">查看</a></p><p>打开你的<code>cmd or powershell</code> 输入如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">pip install nonebot-adapter-red<br>pip install nonebot2[httpx]<br>pip install nonebot2[websockets]<br>pip install nonebot2[aiohttp]<br></code></pre></td></tr></table></figure><p>安装依赖后</p><p>打开我们编写机器人的文件夹</p><p><img src="https://s11.ax1x.com/2023/10/14/pi9pkyq.png" alt=""></p><p>这里我们修改<code>.env.dev</code>和<code>pyproject.toml</code></p><p>打开<code>pyproject.toml</code></p><p>把</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">adapters = [<br>    &#123; name = <span class="hljs-string">&quot;OneBot V11&quot;</span>, module_name = <span class="hljs-string">&quot;nonebot.adapters.onebot.v11&quot;</span> &#125;<br>]<br></code></pre></td></tr></table></figure><p>改成</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">adapters = [<br>    &#123; name = <span class="hljs-string">&quot;RedProtocol&quot;</span>, module_name = <span class="hljs-string">&quot;nonebot.adapters.red&quot;</span> &#125;<br>]<br></code></pre></td></tr></table></figure><p><img src="https://s11.ax1x.com/2023/10/14/pi9pZwT.png" alt=""></p><p>保存退出 如上图所示</p><p>再打开<code>.env.dev</code></p><p>添加内容</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">DRIVER=~httpx+~websockets<br>DRIVER=~aiohttp<br></code></pre></td></tr></table></figure><p>保存退出</p><p><img src="https://s11.ax1x.com/2023/10/14/pi9pKfJ.png" alt=""></p><p>返回当前文件夹 启动nonebot</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs bash">10-14 18:12:30 [SUCCESS] nonebot | NoneBot is initializing...<br>10-14 18:12:30 [INFO] nonebot | Current Env: dev<br>10-14 18:12:31 [SUCCESS] nonebot | Succeeded to load plugin <span class="hljs-string">&quot;echo&quot;</span> from <span class="hljs-string">&quot;nonebot.plugins.echo&quot;</span><br>10-14 18:12:31 [SUCCESS] nonebot | Running NoneBot...<br>10-14 18:12:31 [ERROR] nonebot | Error when running startup <span class="hljs-keyword">function</span>. Ignored!<br>Traceback (most recent call last):<br>  File <span class="hljs-string">&quot;&lt;string&gt;&quot;</span>, line 17, <span class="hljs-keyword">in</span> &lt;module&gt;<br>  File <span class="hljs-string">&quot;C:\Users\Administrator\AppData\Local\Programs\Python\Python310\lib\site-packages\nonebot\__init__.py&quot;</span>, line 331, <span class="hljs-keyword">in</span> run<br>    get_driver().run(*args, **kwargs)<br>  File <span class="hljs-string">&quot;C:\Users\Administrator\AppData\Local\Programs\Python\Python310\lib\site-packages\nonebot\drivers\none.py&quot;</span>, line 70, <span class="hljs-keyword">in</span> run<br>    loop.run_until_complete(self._serve())<br>  File <span class="hljs-string">&quot;C:\Users\Administrator\AppData\Local\Programs\Python\Python310\lib\asyncio\base_events.py&quot;</span>, line 636, <span class="hljs-keyword">in</span> run_until_complete<br>    self.run_forever()<br>  File <span class="hljs-string">&quot;C:\Users\Administrator\AppData\Local\Programs\Python\Python310\lib\asyncio\windows_events.py&quot;</span>, line 321, <span class="hljs-keyword">in</span> run_forever<br>    super().run_forever()<br>  File <span class="hljs-string">&quot;C:\Users\Administrator\AppData\Local\Programs\Python\Python310\lib\asyncio\base_events.py&quot;</span>, line 603, <span class="hljs-keyword">in</span> run_forever<br>    self._run_once()<br>  File <span class="hljs-string">&quot;C:\Users\Administrator\AppData\Local\Programs\Python\Python310\lib\asyncio\base_events.py&quot;</span>, line 1899, <span class="hljs-keyword">in</span> _run_once<br>    handle._run()<br>  File <span class="hljs-string">&quot;C:\Users\Administrator\AppData\Local\Programs\Python\Python310\lib\asyncio\events.py&quot;</span>, line 80, <span class="hljs-keyword">in</span> _run<br>    self._context.run(self._callback, *self._args)<br>  File <span class="hljs-string">&quot;C:\Users\Administrator\AppData\Local\Programs\Python\Python310\lib\site-packages\nonebot\drivers\none.py&quot;</span>, line 74, <span class="hljs-keyword">in</span> _serve<br>    await self._startup()<br>&gt; File <span class="hljs-string">&quot;C:\Users\Administrator\AppData\Local\Programs\Python\Python310\lib\site-packages\nonebot\drivers\none.py&quot;</span>, line 82, <span class="hljs-keyword">in</span> _startup<br>    await self._lifespan.startup()<br>  File <span class="hljs-string">&quot;C:\Users\Administrator\AppData\Local\Programs\Python\Python310\lib\site-packages\nonebot\drivers\_lifespan.py&quot;</span>, line 36, <span class="hljs-keyword">in</span> startup<br>    await self._run_lifespan_func(self._startup_funcs)<br>  File <span class="hljs-string">&quot;C:\Users\Administrator\AppData\Local\Programs\Python\Python310\lib\site-packages\nonebot\drivers\_lifespan.py&quot;</span>, line 30, <span class="hljs-keyword">in</span> _run_lifespan_func<br>    await cast(ASYNC_LIFESPAN_FUNC, func)()<br>  File <span class="hljs-string">&quot;C:\Users\Administrator\AppData\Local\Programs\Python\Python310\lib\site-packages\nonebot\adapters\red\adapter.py&quot;</span>, line 67, <span class="hljs-keyword">in</span> startup<br>    raise RuntimeError(<br>RuntimeError: No bots found <span class="hljs-keyword">in</span> config!<br>Please check your config file and make sure it<span class="hljs-string">&#x27;s correct.</span><br><span class="hljs-string">10-14 18:12:31 [INFO] nonebot | Application startup completed.</span><br></code></pre></td></tr></table></figure><p>如不出意外 你会收到如下报错</p><p>关闭命令行窗口 打开你的电脑c盘-&gt;user文件夹-&gt;<code>电脑用户名</code>文件夹</p><p>找到一个名叫<code>.chronocat</code>的文件夹<br><img src="https://s11.ax1x.com/2023/10/14/pi9pafH.png" alt=""></p><p>打开 config-&gt;chronocat.yml</p><p>这里我只做单账号配置 多账号配置参考官方在GitHub写的文档-&gt;<a href="https://github.com/nonebot/adapter-red/blob/main/README.md">传送门</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">################################################################</span><br><span class="hljs-comment">#                           全局配置</span><br><span class="hljs-comment">################################################################</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># 下面的配置是通用的！如果你只登录一个账号，</span><br><span class="hljs-comment"># 那么只需修改下面这部分配置即可！</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment">################################################################</span><br><br><span class="hljs-comment"># servers：服务配置</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># 配置 Chronocat 开启的服务。需要尤其注意服务列表的格式哦~</span><br>servers:<br>  <span class="hljs-comment"># type：服务类型</span><br>  <span class="hljs-comment">#</span><br>  <span class="hljs-comment"># 开启 red 服务只需要指定 type 为 red 即可。</span><br>  - <span class="hljs-built_in">type</span>: red<br><br>    <span class="hljs-comment"># token：服务密码</span><br>    <span class="hljs-comment">#</span><br>    <span class="hljs-comment"># Chronocat 已经自动生成了随机密码。要妥善保存哦！</span><br>    <span class="hljs-comment"># 客户端使用服务时需要提供这个密码！</span><br>    token: <span class="hljs-string">&#x27;8b3b9d03d3f053ae02712a3106e28e178c14c3d1d7a1be73dcf7b763e83b1485&#x27;</span><br><br>    <span class="hljs-comment"># port：服务端口</span><br>    <span class="hljs-comment">#</span><br>    <span class="hljs-comment"># Chronocat 开启 red 服务的端口，默认为 16530。</span><br>    port: 16530<br><br>  <span class="hljs-comment"># 开启 satori 服务与上面相同，指定 type 为 satori 即可。</span><br>  - <span class="hljs-built_in">type</span>: satori<br><br>    <span class="hljs-comment"># 这里的 token 与上面的相同，</span><br>    <span class="hljs-comment"># 但你也可以进行更换，让每个服务使用不同的服务密码。</span><br>    token: <span class="hljs-string">&#x27;8b3b9d03d3f053ae02712a3106e28e178c14c3d1d7a1be73dcf7b763e83b1485&#x27;</span><br><br>    <span class="hljs-comment"># satori 服务的默认端口为 5500。</span><br>    port: 5500<br><span class="hljs-comment">#</span><br></code></pre></td></tr></table></figure><p>修改这里的全局配置</p><p>这里的token是随机生成的 每个人的不一样 我们只需要在 <code>type</code>类型为<code>red</code>这里 添加一个服务器地址</p><p>则</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs bash">servers:<br>  <span class="hljs-comment"># type：服务类型</span><br>  <span class="hljs-comment">#</span><br>  <span class="hljs-comment"># 开启 red 服务只需要指定 type 为 red 即可。</span><br>  - <span class="hljs-built_in">type</span>: red<br><br>    <span class="hljs-comment"># token：服务密码</span><br>    <span class="hljs-comment">#</span><br>    <span class="hljs-comment"># Chronocat 已经自动生成了随机密码。要妥善保存哦！</span><br>    <span class="hljs-comment"># 客户端使用服务时需要提供这个密码！</span><br>    token: <span class="hljs-string">&#x27;8b3b9d03d3f053ae02712a3106e28e178c14c3d1d7a1be73dcf7b763e83b1485&#x27;</span><br><br>    <span class="hljs-comment"># port：服务端口</span><br>    <span class="hljs-comment">#</span><br>    <span class="hljs-comment"># Chronocat 开启 red 服务的端口，默认为 16530。</span><br>    port: 16530<br>    listen: localhost  <span class="hljs-comment"># host</span><br></code></pre></td></tr></table></figure><p>在这个<code>port:16530</code>下面加一句</p><p>像我这样</p><p><img src="https://s11.ax1x.com/2023/10/14/pi9p5Xq.png" alt=""></p><p>如果你是服务器 你可以把服务器地址填成公网则把<code>localhost</code>改成<code>0.0.0.0</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">请记住你设置的服务器地址<br>请记住type-red下的token<br>请记住type-red下的port<br></code></pre></td></tr></table></figure><p>返回机器人的文件夹 打开<code>env.dev</code></p><p>添加如下内容</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash">RED_BOTS=<span class="hljs-string">&#x27;</span><br><span class="hljs-string">[</span><br><span class="hljs-string">  &#123;</span><br><span class="hljs-string">    &quot;port&quot;: &quot;xxx&quot;, # 端口</span><br><span class="hljs-string">    &quot;token&quot;: &quot;xxx&quot;, # token</span><br><span class="hljs-string">    &quot;host&quot;: &quot;xxx&quot; # 服务器地址</span><br><span class="hljs-string">  &#125;</span><br><span class="hljs-string">]</span><br><span class="hljs-string">&#x27;</span><br></code></pre></td></tr></table></figure><p>这里为博主修改好的</p><p><img src="https://s11.ax1x.com/2023/10/14/pi9pX9J.png" alt=""></p><p>保存 继续启动nonebot</p><p>如果不出意外 你bot的消息会出现在控制台上</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs bash">PS E:\<span class="hljs-built_in">test</span>&gt; nb run<br>10-14 18:26:55 [SUCCESS] nonebot | NoneBot is initializing...<br>10-14 18:26:55 [INFO] nonebot | Current Env: dev<br>10-14 18:26:56 [SUCCESS] nonebot | Succeeded to load plugin <span class="hljs-string">&quot;echo&quot;</span> from <span class="hljs-string">&quot;nonebot.plugins.echo&quot;</span><br>10-14 18:26:56 [SUCCESS] nonebot | Running NoneBot...<br>10-14 18:26:56 [INFO] nonebot | Application startup completed.<br>10-14 18:26:56 [INFO] nonebot | RedProtocol | Bot 35******** connected, Chronocat Version: 0.0.52<br>10-14 18:26:57 [SUCCESS] nonebot | RedProtocol 35******** | [message.group]: Message from 2065708068 <span class="hljs-keyword">in</span> 『纱****************[image: &#123;<span class="hljs-string">&#x27;md5&#x27;</span>: <span class="hljs-string">&#x27;eaedd389*****************&#x27;</span>, <span class="hljs-string">&#x27;size&#x27;</span>: <span class="hljs-string">&#x27;22911&#x27;</span>, <span class="hljs-string">&#x27;id&#x27;</span>: <span class="hljs-string">&#x27;7289************&#x27;</span>, <span class="hljs-string">&#x27;uuid&#x27;</span>: <span class="hljs-string">&#x27;312*******&#x27;</span>, <span class="hljs-string">&#x27;path&#x27;</span>: <span class="hljs-string">&#x27;F:\\QQ\\**************************************************&#x27;</span>, <span class="hljs-string">&#x27;width&#x27;</span>: 321, <span class="hljs-string">&#x27;height&#x27;</span>: 335&#125;]<br>10-14 18:27:00 [SUCCESS] nonebot | RedProtocol 35******** | [message.group]: Message from ULTRAMAN THE NEXT <span class="hljs-keyword">in</span> 『纱***********总群: 6<br>10-14 18:27:03 [SUCCESS] nonebot | RedProtocol 35******** | [message.group]: Message from 2065******** <span class="hljs-keyword">in</span> ******是笨蛋[image: &#123;<span class="hljs-string">&#x27;md5&#x27;</span>: <span class="hljs-string">&#x27;68af1fafbb*************&#x27;</span>, <span class="hljs-string">&#x27;size&#x27;</span>: <span class="hljs-string">&#x27;16316&#x27;</span>, <span class="hljs-string">&#x27;id&#x27;</span>: <span class="hljs-string">&#x27;728**************&#x27;</span>, <span class="hljs-string">&#x27;uuid&#x27;</span>: <span class="hljs-string">&#x27;228*********&#x27;</span>, <span class="hljs-string">&#x27;path&#x27;</span>: <span class="hljs-string">&#x27;F:\\QQ\\***************************************************&#x27;</span>, <span class="hljs-string">&#x27;width&#x27;</span>: 371, <span class="hljs-string">&#x27;height&#x27;</span>: 351&#125;]<br>10-14 18:27:03 [INFO] nonebot | Shutting down<br>10-14 18:27:03 [INFO] nonebot | Waiting <span class="hljs-keyword">for</span> application shutdown.<br>10-14 18:27:03 [INFO] nonebot | Application shutdown complete.<br>PS E:\<span class="hljs-built_in">test</span>&gt;<br></code></pre></td></tr></table></figure><p>这样已经部署成功了</p><h2 id="插件编写示例">插件编写示例</h2><p>写法和gocq的差不多 但是部分api暂不支持</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> nonebot <span class="hljs-keyword">import</span> on_command<br><span class="hljs-keyword">from</span> nonebot.adapters.red.event <span class="hljs-keyword">import</span> GroupMessageEvent<br><span class="hljs-keyword">from</span> nonebot.adapters.red.message <span class="hljs-keyword">import</span> MessageSegment<br><br>a = on_command(<span class="hljs-string">&quot;测试&quot;</span>)<br><br><span class="hljs-meta">@a.handle()</span><br><span class="hljs-keyword">async</span> <span class="hljs-keyword">def</span> <span class="hljs-title function_">_</span>(<span class="hljs-params">event: GroupMessageEvent</span>):<br>    <span class="hljs-keyword">await</span> a.finish(<span class="hljs-string">f&quot;bingyue-&gt;<span class="hljs-subst">&#123;event.get_user_id()&#125;</span> ok&quot;</span>+MessageSegment.face(<span class="hljs-string">&#x27;124&#x27;</span>))<br></code></pre></td></tr></table></figure><h2 id="效果">效果</h2><p><img src="https://s11.ax1x.com/2023/10/14/pi99jIS.png" alt=""></p><h2 id="最后">最后</h2><p>编写不容易，该框架的写法和gocq基本一致，基本能日用了，坏处就是得挂个qqnt</p><p>唉 傻逼腾讯</p>]]></content>
    
    
    <categories>
      
      <category>code</category>
      
    </categories>
    
    
    <tags>
      
      <tag>bot</tag>
      
      <tag>qq机器人</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>最新的gocq开发版和签名下载</title>
    <link href="/2023/09/17/dl_new_cq_qsign/"/>
    <url>/2023/09/17/dl_new_cq_qsign/</url>
    
    <content type="html"><![CDATA[<p>最新go-cqhttp<code>dev</code>版</p><span id="more"></span><p>👇 👇 👇 👇</p><p><a href="https://cdn.bingyue.top/go-cqhttp-windows-new.zip">Windows传送门</a></p><p><a href="https://cdn.bingyue.top/go-cqhttp-linux-new.zip">Linux传送门</a></p><p>最新签名服务器</p><p>👇 👇 👇</p><p><a href="https://cdn.bingyue.top/unidbg-fetch-qsign-1.2.1.zip">传送门</a></p>]]></content>
    
    
    <categories>
      
      <category>qq机器人</category>
      
    </categories>
    
    
    <tags>
      
      <tag>bot</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>如何用3.6元搭建一个私人图床</title>
    <link href="/2023/08/29/teng_xun_yun_cos/"/>
    <url>/2023/08/29/teng_xun_yun_cos/</url>
    
    <content type="html"><![CDATA[<h2 id="前">前</h2><p>因为快开学了,截至到目前还有两天时间开学了，nonebot的教程将放在开学的第一个周末，同时最后一期放在国庆节</p><p>今天主要是讲如何用<code>3.6</code>元，搭建一个私人图床 准备如下</p><ul><li>一个实名好的账号(腾讯云)</li><li><code>3.6</code>元</li><li>确保你的账号第一次使用<code>cos存储服务</code></li></ul><span id="more"></span><h2 id="Go">Go</h2><p>打开<a href="https://console.cloud.tencent.com/cos/bucket">网址</a> 登录你的腾讯云账号 这里我用邮箱登录</p><p><img src="https://s11.ax1x.com/2023/08/29/pPdanWn.png" alt=""></p><p>登录之后 会看到有新人提示 选择领取存储容量<code>6个月50g</code> 我这里已经领取过了 因此无法提供图片</p><p>找到<code>资源包管理</code>点击<code>自助资源包</code></p><p><img src="https://s11.ax1x.com/2023/08/29/pPdaQyV.png" alt=""></p><p>购买资源包</p><p><img src="https://s11.ax1x.com/2023/08/29/pPdaGo4.png" alt=""></p><p>选择中国大陆</p><p>选择流量</p><p>选择外网下载流量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">注:我这里选择了一个月10g 这里根据你的使用情况来选择 也就是说我一个月可以下载10g左右 超出了就要按0.5/g算<br></code></pre></td></tr></table></figure><p>购买</p><p><img src="https://s11.ax1x.com/2023/08/29/pPdaYFJ.png" alt=""></p><p>购买之后返回自助资源包 查看结果</p><p><img src="https://s11.ax1x.com/2023/08/29/pPdatY9.png" alt=""></p><p>我这里提前买好了</p><p>然后去上传文件吧</p><h2 id="上传文件">上传文件</h2><p>返回存储桶管理 找到创建存储桶</p><p><img src="https://s11.ax1x.com/2023/08/29/pPdaaS1.png" alt=""></p><p>选择地区 <code>注意:不要选择香港 因为我们买的流量是大陆的</code></p><p>输入一个名字 这里顺便吧 然后勾选同意</p><p><img src="https://s11.ax1x.com/2023/08/29/pPdawy6.png" alt=""></p><p>下一步</p><p>然后继续下一步</p><p>最后点击创建</p><p>他会帮你跳转到创建好的存储桶</p><p>点击上传文件</p><p><img src="https://s11.ax1x.com/2023/08/29/pPda0OK.png" alt=""></p><p>我这里就身边拿一张图片做演示了</p><p><img src="https://s11.ax1x.com/2023/08/29/pPda6FH.png" alt=""></p><p>点击详情</p><p><img src="https://s11.ax1x.com/2023/08/29/pPdacYd.png" alt=""></p><p>这个对象地址就是我们上传的图片的了</p><p>复制到浏览器 打开查看一下</p><p><img src="https://s11.ax1x.com/2023/08/29/pPdaWlt.png" alt=""></p><p>我们的私人图床就做好了 想添加内容就去上传文件 然后查看对象地址</p><h2 id="最后">最后</h2><p>对于一些访问量大的网站，最好给cos存储套个cdn，避免被ddos产生高额账单<code>毕竟0.5/g</code></p><p>希望能帮到你</p>]]></content>
    
    
    <categories>
      
      <category>生活</category>
      
    </categories>
    
    
    <tags>
      
      <tag>日常</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>随身wifi玩机篇3 配置debian(完结篇)</title>
    <link href="/2023/08/21/wifi_td_3/"/>
    <url>/2023/08/21/wifi_td_3/</url>
    
    <content type="html"><![CDATA[<h2 id="前言">前言</h2><p>本篇是刷debian系统的 基础刷机篇请看<a href="https://blog.bingyue.top/2023/04/28/wifi_td_2/">这里</a></p><p>上一期教程中说过 我的型号是ufi003 接下来看看如何刷</p><span id="more"></span><h2 id="刷入准备">刷入准备</h2><p>这里感谢<code>jsbsbxjxh66</code>大佬制作的超频版 和 内存释放版 <a href="https://www.coolapk.com/feed/41664623">原文链接</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash">1.各个型号已经替换了相应的基带文件<br>2.安装了一些必备软件包<br>3.增加了rc.local开机自动执行服务修改/etc/rc.local文件可加入一些开机要执行的命令<br>4.刷入自带热点4G-wifi 密码:12345678<br>5.ssh连接地址10.42.0.1<br>ssh root@10.42.0.1 密码:1313144<br>6.加入了这些型号串口驱动ch341/ch342/ch343/ch344/ch347/ch9101/ch9102/ch9103/ch9143<br>7.各大网络文件系统全部编译上了如:NFS CIFS SMB AFS等等能编译的全编译了能不能用就不知道了<br>8.删除热点连wifi:nmtui &gt; 编译连接 &gt; 删除wifi热点 &gt;返回 &gt; 启用连接(里面连wifi)<br>链接： https://cloud.189.cn/t/neAnmabAnYji （访问码：6nti）<br></code></pre></td></tr></table></figure><p>先下载对应的包</p><p><a href="https://h5.cloud.189.cn/share.html#/t/neAnmabAnYji">下载链接 提取码6nti</a></p><p>然后对应刷入 刷入教程 👉<a href="https://blog.bingyue.top/2023/04/28/wifi_td_2/">传送门</a></p><h2 id="SSH">SSH</h2><p>刷完之后 等待开机联网</p><p>连接热点<code>热点名字和密码上面有</code> 打开xshell</p><p>开始连接ssh</p><p><img src="https://s11.ax1x.com/2023/08/20/pP8zqTe.png" alt=""></p><p>按照上面的内容 输入用户名和密码 <code>用户名是root 密码是1313144</code></p><p><img src="https://s11.ax1x.com/2023/08/20/pPGSw7D.png" alt=""></p><p>这样ssh就连接上了</p><h2 id="配置wifi连接">配置wifi连接</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">nmtui<br></code></pre></td></tr></table></figure><p>输入如上命令</p><p>打开网络管理器</p><p><img src="https://s11.ax1x.com/2023/08/20/pPGScct.png" alt=""></p><p>选择编辑连接</p><p>把下面的<code>4gwifi</code>删除掉 然后打开你电脑的<code>设备管理器</code>找到adb驱动</p><p><img src="https://s11.ax1x.com/2023/08/20/pPGSWB8.png" alt=""></p><p>右键选择<code>更新驱动程序-&gt;从我硬盘里获取列表-&gt;Microsoft-&gt;usb网络模块</code></p><p>插拔棒子 找到新感叹号驱动</p><p><img src="https://s11.ax1x.com/2023/08/20/pPGSIhj.png" alt=""></p><p>按上图方法安装</p><p>返回shell 继续连接</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">nmtui<br></code></pre></td></tr></table></figure><p>输入这个命令</p><p>选择启动连接 然后连接wifi</p><p><img src="https://s11.ax1x.com/2023/08/20/pPGpVED.png" alt=""></p><p><img src="https://s11.ax1x.com/2023/08/20/pPGpZUe.png" alt=""></p><p>打开你的路由器后台 找到随身wifi的内网ip 通过内网ip连接ssh</p><h2 id="后记">后记</h2><p>所以到这里就结束吧 <code>自己探索吧</code></p><p><s>棒子折腾篇完结</s></p>]]></content>
    
    
    <categories>
      
      <category>随身wifi</category>
      
      <category>刷机</category>
      
    </categories>
    
    
    <tags>
      
      <tag>随身wifi</tag>
      
      <tag>9008</tag>
      
      <tag>openwrt</tag>
      
      <tag>debian</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>nonebot双向聊天插件</title>
    <link href="/2023/08/20/nonebot_plugin_send_message/"/>
    <url>/2023/08/20/nonebot_plugin_send_message/</url>
    
    <content type="html"><![CDATA[<div align="center">  <a href="https://v2.nonebot.dev/store"><img src="https://github.com/A-kirami/nonebot-plugin-template/blob/resources/nbp_logo.png" width="180" height="180" alt="NoneBotPluginLogo"></a><h1>NoneBot-Plugin-Send-Message</h1><p><em>✨ 一个可以群昵称显示现在时间的插件 ✨</em><br><br></br></p></div><h2 id="如何安装？如何下载？">如何安装？如何下载？</h2><p>你可以使用 python中的pip</p><span id="more"></span><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">pip install nonebot-plugin-send-message<br></code></pre></td></tr></table></figure><p>或者nonebot里的</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">nb plugin install nonebot-plugin-send-message<br></code></pre></td></tr></table></figure><hr><h2 id="如何使用？">如何使用？</h2><p>先打开你的<code>.env.dev</code>或者<code>.env.prod</code>文件 添加如下内容</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">send_message=[<span class="hljs-string">&quot;10001&quot;</span>] <span class="hljs-comment"># 输入你的qq号记得带双引号</span><br>welcome = <span class="hljs-string">&quot;欢迎你添加我为好友\n我是一个传话机器人\n直接把你需要传递的信息发给我&quot;</span> <span class="hljs-comment"># 欢迎添加好友的信息 发送图片表情请手动cq码</span><br>SUPERUSERS=[<span class="hljs-string">&quot;123123123&quot;</span>] <span class="hljs-comment"># nonebot超级管理员配置</span><br></code></pre></td></tr></table></figure><p><code>send_message</code>是发送给传话的主人 就是对方发送消息传达的对象</p><p><code>welcome</code>为欢迎语</p><h3 id="这是主人发送对话用的">这是主人发送对话用的</h3><p><code>/传话 [QQ] [内容]</code> <code>#传话给指定的用户</code></p><p>注意此命令使用nonebot超级管理员才可以触发 如果你配置文件有<code>SUPERUSERS</code>直接添加你的qq号就行，没有的可以抄上面，有就忽略吧</p><hr><h2 id="有bug？-无法使用？">有bug？ 无法使用？</h2><p>请发issues给我</p><hr><h2 id="效果">效果</h2><p><img src="https://s11.ax1x.com/2023/08/12/pPuDEPH.png" alt=""></p><p><img src="https://s11.ax1x.com/2023/08/12/pPuDVGd.png" alt=""></p>]]></content>
    
    
    <categories>
      
      <category>nonebot</category>
      
    </categories>
    
    
    <tags>
      
      <tag>python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>使用hexo搭建个人博客并推送git</title>
    <link href="/2023/08/16/jiao_cheng_hexo/"/>
    <url>/2023/08/16/jiao_cheng_hexo/</url>
    
    <content type="html"><![CDATA[<h2 id="开始">开始</h2><p>今天教大家搭建一个<code>hexo框架</code>的博客，我现在用的就是这个框架的博客，使用起码挺方便的</p><p>本教程分为七步</p><ul><li>安装<code>nodejs</code></li></ul><span id="more"></span><ul><li><p>安装<code>git</code></p></li><li><p>安装&amp;配置<code>hexo</code></p></li><li><p>运行博客</p></li><li><p>配置主题</p></li><li><p>推送<code>GitHub</code></p></li><li><p>绑定域名</p><hr></li></ul><h2 id="安装node-js">安装node_js</h2><p>第一步打开<a href="https://nodejs.org/en">官网</a></p><p><img src="https://s11.ax1x.com/2023/08/16/pPlkbVO.png" alt="官网"></p><p>这里有两个版本 分别是<code>lts</code>版和<code>current</code>版 随便选择一个即可 我这里下的是<code>lts</code>版</p><p>如果你下载速度慢可以选择国内源 <code>这里下面是传送门</code></p><p><a href="https://npmmirror.com/mirrors/node/v18.16.1/node-v18.16.1-x64.msi">国内源lts</a></p><p><a href="https://npmmirror.com/mirrors/node/v20.4.0/node-v20.4.0-x64.msi">国内源current</a></p><p><img src="https://s11.ax1x.com/2023/08/16/pPlAns0.png" alt=""></p><p>按着步骤安装就行了</p><p><img src="https://s11.ax1x.com/2023/08/16/pPlAQdU.png" alt=""></p><p>等待进度条跑完，关闭即可</p><hr><h2 id="安装Git">安装Git</h2><p><a href="https://github.com/git-for-windows/git/releases/download/v2.41.0.windows.3/Git-2.41.0.3-64-bit.exe">点击我</a>即可下载 如果速度慢请开vpn</p><p><a href="https://github.com/git-for-windows/git/releases/download/v2.41.0.windows.3/Git-2.41.0.3-32-bit.exe">32位系统点击我下载</a></p><p>下载好后直接点<code>next</code>直到走完读条 此处无图略过</p><hr><h2 id="安装-配置hexo">安装&amp;配置hexo</h2><p>在你的桌面或者任意一处地方，创建一个博客文件夹，用来存放博客的代码</p><p>我这里以桌面进行</p><p><img src="https://s11.ax1x.com/2023/08/16/pPlAXwT.png" alt=""></p><p>在该文件夹下按住鼠标右键+shift键 打开<code>open git bash here</code></p><p>然后弹出一个窗口</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">node -v<br></code></pre></td></tr></table></figure><p>输入以上命令 检查nodejs是否安装好</p><p>不出意外会显示一个版本号 如果报错了请检查<code>环境变量</code></p><p><img src="https://s11.ax1x.com/2023/08/16/pPlE9p9.png" alt=""></p><p>接下来输入这三个命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install -g hexo-cli<br>hexo init<br>npm install --save hexo-deployer-git<br></code></pre></td></tr></table></figure><p>此处如果卡住开科学上网</p><p><img src="https://s11.ax1x.com/2023/08/16/pPlEyAU.png" alt=""></p><p><img src="https://s11.ax1x.com/2023/08/16/pPlE6NF.png" alt=""></p><p>然后文件夹会多出很多文件</p><p>打开<code>_config.yml</code>文件 按如下说明更改博客配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># Site</span><br>title: Hexo <span class="hljs-comment"># 博客标题</span><br>subtitle: <span class="hljs-string">&#x27;&#x27;</span> <span class="hljs-comment"># 小标题</span><br>description: <span class="hljs-string">&#x27;&#x27;</span> <span class="hljs-comment"># 描述</span><br>keywords: <span class="hljs-comment">#关键字</span><br>author: John Doe <span class="hljs-comment"># 作者名字</span><br>language: en <span class="hljs-comment"># 语言 改成zh-cn</span><br>timezone: <span class="hljs-string">&#x27;&#x27;</span> <span class="hljs-comment"># 时区 默认不填</span><br></code></pre></td></tr></table></figure><p>其他的暂时不用改 先保存</p><hr><h2 id="运行博客">运行博客</h2><p>输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo s -p 4000<br></code></pre></td></tr></table></figure><p>出现如下所示 说明启动成功了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo s -p 4000<br>INFO  Validating config<br>INFO  Start processing<br>INFO  Hexo is running at http://localhost:4000/ . Press Ctrl+C to stop.<br></code></pre></td></tr></table></figure><p>如果想取消按住你键盘上的<code>Ctrl</code>+<code>C</code>键</p><p>打开你的浏览器输入<code>localhost:4000</code> 访问一下</p><p><img src="https://s11.ax1x.com/2023/08/16/pPlVyrt.png" alt=""></p><p>这样我们的博客就能在内网访问了</p><hr><h2 id="配置主题">配置主题</h2><p>没错 hexo有个主题商店 里面有好多不错的博客主题</p><p><a href="https://hexo.io/themes/">传送门</a></p><p>由于每种主题配置方法不一样 我这里就以<code>claudia</code>主题为例子</p><p><img src="https://s11.ax1x.com/2023/08/16/pPlV7q0.png" alt=""></p><p>点击蓝色字体 跳转到他的<a href="https://github.com/Haojen/hexo-theme-Claudia">GitHub仓库</a></p><p>然后查看下面的文档 我这里的文档说要命令安装依赖 我们照着做就行了</p><p><img src="https://s11.ax1x.com/2023/08/16/pPlZVRH.png" alt=""></p><p>安装完依赖后开始下载代码放入博客<code>themes</code>文件夹</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> themes<br><span class="hljs-built_in">mkdir</span> Claudia<br><span class="hljs-built_in">cd</span> Claudia<br>git <span class="hljs-built_in">clone</span> https://github.com/Haojen/hexo-theme-Claudia<br></code></pre></td></tr></table></figure><p>或者你把源码打包下载 创建一个<code>Claudia</code>的文件夹 把源码放进去</p><p>他下面是教你配置主题的信息 我这里就跳过了 以文档的为准</p><p>返回博客跟目录 打开<code>_config.yml</code></p><p><img src="https://pic.imgdb.cn/item/64dc8ada661c6c8e54fea224.png" alt=""></p><p>移动到最下面把</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># Extensions</span><br><span class="hljs-comment">## Plugins: https://hexo.io/plugins/</span><br><span class="hljs-comment">## Themes: https://hexo.io/themes/</span><br>theme: landscape<br></code></pre></td></tr></table></figure><p>改成</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># Extensions</span><br><span class="hljs-comment">## Plugins: https://hexo.io/plugins/</span><br><span class="hljs-comment">## Themes: https://hexo.io/themes/</span><br>theme: Claudia <span class="hljs-comment">## 这里改成你的主题名字</span><br></code></pre></td></tr></table></figure><p>再运行一下博客</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo s -p 4000<br></code></pre></td></tr></table></figure><p><img src="https://pic.imgdb.cn/item/64dc8d99661c6c8e54061f95.png" alt=""></p><p>我这边已经进去了</p><p>如果你要一边改信息一边改效果 <code>改完之后直接刷新即可 无需重复启动博客</code></p><hr><h2 id="推送Github">推送Github</h2><p>这里确保你已经注册了GitHub账号</p><p>这边先去新创建一个仓库 名字叫<code>你的GitHub名字.github.io</code></p><p>博主这边已经创建了</p><p><img src="https://pic.imgdb.cn/item/64dc8efb661c6c8e5409f8e7.png" alt=""></p><p>返回你的博客根目录 打开<code>_config.yml</code></p><p><img src="https://pic.imgdb.cn/item/64dc8ada661c6c8e54fea224.png" alt=""></p><p>移到最下面把</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># Deployment</span><br><span class="hljs-comment">## Docs: https://hexo.io/docs/one-command-deployment</span><br>deploy:<br>  <span class="hljs-built_in">type</span>: <span class="hljs-string">&#x27;&#x27;</span><br></code></pre></td></tr></table></figure><p>改成</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># Deployment</span><br><span class="hljs-comment">## Docs: https://hexo.io/docs/one-command-deployment</span><br>deploy:<br>  <span class="hljs-built_in">type</span>: git<br>  repo: git@github.com:你的GitHub名字/你的GitHub名字.github.io.git<br>  branch: main<br></code></pre></td></tr></table></figure><p>返回你的<code>git bash</code>配置 用户名和邮箱</p><p><img src="https://pic.imgdb.cn/item/64dc900c661c6c8e540cf890.png" alt=""></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">git config --global user.name <span class="hljs-string">&quot;Your Name&quot;</span><br>git config --global user.email <span class="hljs-string">&quot;your.email@example.com&quot;</span><br></code></pre></td></tr></table></figure><p>开始生成<code>ssh密钥</code> 输入如下命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ssh-keygen -t rsa -C <span class="hljs-string">&#x27;你的邮箱&#x27;</span><br></code></pre></td></tr></table></figure><p>一直按回车就行了</p><p><img src="https://pic.imgdb.cn/item/64ddb28a661c6c8e54e603d5.png" alt=""></p><p>这样就代表成功了 然后按红色框的路径去找到密钥</p><p>用记事本打开全文复制</p><p>去GitHub配置-&gt;<a href="https://github.com/settings/keys">传送门</a></p><p><img src="https://pic.imgdb.cn/item/64dc9173661c6c8e5410f320.png" alt=""></p><p><img src="https://pic.imgdb.cn/item/64dc9147661c6c8e5410753e.png" alt=""></p><p>返回到博客跟目录 打开<code>open git bash hero</code> 输入命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo g<br>hexo d<br></code></pre></td></tr></table></figure><ul><li><code>hexo g</code> 是编译静态网页文件的意思</li><li><code>hexo d</code>是推送<code>GitHub</code>的意思</li></ul><p>然后等个几分钟,浏览器打开<code>你的GitHub名字.github.io</code>即可打开你的博客</p><hr><h2 id="域名绑定">域名绑定</h2><p>在GitHub上打开你的博客仓库<code>名字是 你的名字GitHub名字.github.io</code></p><p><img src="https://pic.imgdb.cn/item/64dc92be661c6c8e5414bbb1.png" alt=""></p><p>点击设置</p><p>然后点击<code>page</code></p><p><img src="https://pic.imgdb.cn/item/64dc92f3661c6c8e54155a44.png" alt=""></p><p><img src="https://pic.imgdb.cn/item/64dc930a661c6c8e5415985c.png" alt=""></p><p>去你的域名解析 添加该域名的解析 这里以<code>dnspod</code>为例子</p><p><img src="https://pic.imgdb.cn/item/64dc93c3661c6c8e5418cd6f.png" alt=""></p><p>过个几分钟 你的博客就能访问了</p><hr><h2 id="后记">后记</h2><p>就这样吧 拜拜~~</p>]]></content>
    
    
    <categories>
      
      <category>编程</category>
      
    </categories>
    
    
    <tags>
      
      <tag>code</tag>
      
      <tag>hexo</tag>
      
      <tag>nodejs</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>手把手教你配置签名服务器</title>
    <link href="/2023/08/03/qsign_1/"/>
    <url>/2023/08/03/qsign_1/</url>
    
    <content type="html"><![CDATA[<h2 id="前言">前言</h2><p>因为腾讯的限制 现在使用<code>go-cqhttp</code>需要签名服务器了 今天就来教大家手把手搭建一个签名服务器 支持<code>Windows</code>和<code>Linux</code> 在开始之前你要具备以下条件</p><ul><li>一台电脑</li><li>熟悉使用Linux</li><li>懂得自己解决问题</li></ul><h2 id="Windows">Windows</h2><p>1.首先安装jdk17 我这里默认装的17 当然你也可以装更高版本</p><span id="more"></span><p><a href="https://download.oracle.com/java/17/latest/jdk-17_windows-x64_bin.exe">jdk17下载链接</a></p><p>下载之后 根据提示一步一步安装</p><p><img src="https://s11.ax1x.com/2023/08/03/pPFiopn.png" alt=""></p><p>我这里不演示了</p><p>然后去下载qsign 这里如果你是萌新小白</p><p>我自己做了一个懒人启动版 你是大佬也可以用官方的</p><p><a href="https://github.com/fuqiuluo/unidbg-fetch-qsign">官方下载 </a></p><p><a href="https://pan.baidu.com/s/1_FFXFa2PwHJZJYNJTcXgyQ?pwd=749f">懒人启动版下载</a></p><p>下载之后 解压文件</p><p>打开<code>txlib</code>文件夹</p><p><img src="https://s11.ax1x.com/2023/08/03/pPFk8r6.png" alt=""></p><p>这里有三个版本的qq 请选择对应的协议版本</p><p>我这里用的是8963版本</p><p>打开<code>8.9.63</code>文件夹 找到<code>config.json</code>打开</p><p><img src="https://s11.ax1x.com/2023/08/03/pPFkNIe.png" alt=""></p><p><code>host</code> 改成<code>127.0.0.1</code> 如果你想本地搭建的话 你要部署到外网就填写 <code>0.0.0.0</code></p><p><code>port</code>是端口号 我这里改成3301了</p><p><code>key</code> 看你喜欢 随便取一个key</p><p>改完之后记住这三个参数 分别是<code>host</code> <code>port</code> <code>key</code></p><p><img src="https://s11.ax1x.com/2023/08/03/pPFksqf.png" alt=""></p><p>这是我改的</p><p>然后返回文件夹</p><p><img src="https://s11.ax1x.com/2023/08/03/pPFk5Mq.png" alt=""></p><p>如果你下的是我的懒人启动版 直接打开<code>start.bat</code> 输入版本号就能运行</p><p><code>官方的启动</code>方法如下</p><p>按住键盘上的shift+鼠标右键 选择打开<code>powershell</code></p><p>输入如下命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">bin\unidbg-fetch-qsign.bat --basePath=txlib\qq版本<br></code></pre></td></tr></table></figure><p>这样你的签名服务器就启动成功了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">注意:请一定要记住你设置的 host port key<br>注意:请一定要记住你设置的 host port key<br>注意:请一定要记住你设置的 host port key<br></code></pre></td></tr></table></figure><p>然后在右边点<code>配置go-cqhttp</code> 跳转到配置部分 下面是Linux安装部分</p><h2 id="Linux">Linux</h2><p>这里我以纯shell操作 装了桌面端的操作类似于Windows吧</p><p>首先是安装<code>jdk</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo apt update &amp;&amp; sudo apt upgrade -y<br>sudo apt-get install openjdk-11-jre<br>sudo apt-get install openjdk-11-jdk<br></code></pre></td></tr></table></figure><p>执行如上三条命令 选择<code>y</code></p><p>最后输入<code>java --version</code> 如果和下图一样 说明jdk安装成功</p><p><img src="https://s11.ax1x.com/2023/08/03/pPFA9eK.png" alt=""></p><p>然后去下载<code>qsign</code></p><p><a href="https://github.com/fuqiuluo/unidbg-fetch-qsign">官方下载 </a></p><p><a href="https://pan.baidu.com/s/1_FFXFa2PwHJZJYNJTcXgyQ?pwd=749f">懒人启动版下载</a></p><p>这里推荐下载懒人启动版 然后通过一些方式把文件传到Linux里</p><p>然后cd进去 文件夹</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> unidbg-fetch-qsign-1.1.7<br><span class="hljs-built_in">cd</span> txlib<br><span class="hljs-built_in">cd</span> qq版本<br>有如下版本<br>8.9.63<br>8.9.68<br>8.9.70<br></code></pre></td></tr></table></figure><p>然后安装vim编辑器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo apt install vim<br></code></pre></td></tr></table></figure><p>编辑<code>config.json</code>文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim config.json<br></code></pre></td></tr></table></figure><p>按<code>i</code>键进入编辑模式</p><p>然后去修改<code>host</code> <code>port</code> <code>key</code></p><p><img src="https://s11.ax1x.com/2023/08/03/pPFEVNF.png" alt=""></p><p>我这里已经改好了 然后按<code>esc</code>键 退出编辑模式 输入<code>:wq</code> 保存并退出</p><p>然后退出跟目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> ../../<br></code></pre></td></tr></table></figure><p>如果你下的是我的懒人启版只需要执行下面命令即可</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">chmod</span> +x ./start.sh<br>./start.sh<br></code></pre></td></tr></table></figure><p>官方的 输入如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">bash bin\unidbg-fetch-qsign.bat --basePath=txlib\qq版本<br></code></pre></td></tr></table></figure><p>这样你的签名服务器就启动成功了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">注意:请一定要记住你设置的 host port key<br>注意:请一定要记住你设置的 host port key<br>注意:请一定要记住你设置的 host port key<br></code></pre></td></tr></table></figure><h2 id="配置go-cqhttp">配置go-cqhttp</h2><p>正式发行版的cq是不支持签名服务器的 因此我们要下载dev分支的<code>go-cqhttp</code></p><p><a href="https://pan.baidu.com/s/1eooOkMrWynfNBgRbpsR3zA?pwd=iw2r">windows版本下载</a></p><p><code>Linux用户自己想办法 去官方GitHub看看</code></p><p>配置cq的教程前面说了  👉<a href="https://blog.bingyue.top/2022/10/03/cq_1/">传送门</a></p><p>我们只需在<code>config.yml</code>下 找到签名服务器的内容</p><p><img src="https://s11.ax1x.com/2023/08/03/pPFEq29.png" alt=""></p><p>按照如下格式设置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sign-server: <span class="hljs-string">&#x27;http:&#123;你设置的host&#125;:&#123;你设置的port&#125;&#x27;</span><br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">key: <span class="hljs-string">&#x27;你设置的key&#x27;</span><br></code></pre></td></tr></table></figure><p>然后保存退出 打开go-cqhttp点登录</p><h2 id="遇到问题">遇到问题</h2><p>去下面评论</p>]]></content>
    
    
    <categories>
      
      <category>qq机器人</category>
      
    </categories>
    
    
    <tags>
      
      <tag>qq机器人</tag>
      
      <tag>cqhttp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>QQ扫码登录抓取分析</title>
    <link href="/2023/07/31/qq_sao_ma/"/>
    <url>/2023/07/31/qq_sao_ma/</url>
    
    <content type="html"><![CDATA[<h2 id="前言">前言</h2><p>这是七月份最后一篇博客，这几天家里一直有事，所以没怎么写，然后我朋友找我有没有办法搞一个验证QQ号是否本人的东西，我第一时间想到了扫码登录</p><p>所以本期教程来写一个封装的扫码登录</p><span id="more"></span><p>因为我很久不写php了 已经快忘光了 所以本期教程使用python</p><h2 id="开始">开始</h2><p>这里我选择<a href="https://xw.qq.com/?f=c_news">腾讯网</a> 点右上角头像，就是我们想要的扫码登录了</p><p><img src="https://s11.ax1x.com/2023/08/01/pP9qsyt.png" alt=""></p><p><img src="https://s11.ax1x.com/2023/08/01/pP9qyOP.png" alt=""></p><p>这里就是二维码登录了</p><p>我们<code>右键鼠标-&gt;检查-&gt;网络</code> 然后<code>刷新页面</code></p><p><img src="https://s11.ax1x.com/2023/08/01/pP9qgw8.png" alt=""></p><p>可以看到多了很多数据包</p><h2 id="申请二维码登录">申请二维码登录</h2><p>往下寻找 可以看到有个请求二维码的接口</p><p><img src="https://s11.ax1x.com/2023/08/01/pP9q2TS.png" alt=""></p><p><img src="https://s11.ax1x.com/2023/08/01/pP9qWFg.png" alt=""></p><p>再看看 请求头 我们可以看到它 返回一个<code>qrsig的cookie</code> 这个应该是签名密钥了 标记二维码信息</p><p>这个api的信息是固定的 直接请求即可</p><p><img src="https://s11.ax1x.com/2023/08/01/pP9qfYQ.png" alt=""></p><p>我们目前得到了申请端的原理</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">url : <br>https://ssl.ptlogin2.qq.com/ptqrshow?appid=716027609&amp;e=2&amp;l=M&amp;s=3&amp;d=72&amp;v=4&amp;t=0.9719602746914588&amp;daid=383&amp;pt_3rd_aid=100383922&amp;u1=https%3A%2F%2Fgraph.qq.com%2Foauth2.0%2Flogin_jump<br>cookie: qrsig<br></code></pre></td></tr></table></figure><h2 id="心跳包">心跳包</h2><p>我们可以看到它请求了很多次这个链接 无非这个链接就是获取二维码状态了</p><p><img src="https://s11.ax1x.com/2023/08/01/pP9qhWj.png" alt=""></p><p>看看返回内容 果然是</p><p><img src="https://s11.ax1x.com/2023/08/01/pP9q5Ss.png" alt=""></p><p>再来看看它请求的参数 (我这边申请了两次二维码) 来看看有何不同</p><p><img src="https://s11.ax1x.com/2023/08/01/pP9qIln.png" alt=""></p><p>可以看到<code>ptqrtoken</code>和<code>action</code>发生了变化</p><p>所以我们只需要解决这两个参数就能获取二维码状态了</p><p>经过我在<code>fidder</code>的调试 发现<code>login_sig</code>不会影响结果 所以可以删掉<code>login_sig</code>这个参数 因此该api为</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">https://ssl.ptlogin2.qq.com/ptqrlogin?u1=https%3A%2F%2Fgraph.qq.com%2Foauth2.0%2Flogin_jump&amp;ptqrtoken=&#123;&#125;&amp;ptredirect=0&amp;h=1&amp;t=1&amp;g=1&amp;from_ui=1&amp;ptlang=2052&amp;action=0-0-&#123;&#125;&amp;js_ver=23071715&amp;js_type=1&amp;pt_uistyle=40&amp;aid=716027609&amp;daid=383&amp;pt_3rd_aid=100383922&amp;has_onekey=1&amp;&amp;o1vId=271f9cd6edb6fcd5b0cdbfea4b2646a0&amp;pt_js_version=v1.46.0<br></code></pre></td></tr></table></figure><p>这里的action不难看出 是一个13位的时间戳<code>0-0-&#123;13位时间戳&#125;</code></p><p>那<code>ptqrtoken</code>呢 这个时候需要<code>js逆向</code>了 因为找遍了所有请求</p><h2 id="解密ptqrtoken">解密ptqrtoken</h2><p>切进去 这里就是js文件了</p><p><img src="https://s11.ax1x.com/2023/08/01/pP9qoyq.png" alt=""></p><p>全局搜索一下<code>ptqrtoken</code></p><p><img src="https://pic.imgdb.cn/item/64c7fe141ddac507cca42800.jpg" alt=""></p><p>发现只有一处 先打个断点调试一下</p><p><img src="https://pic.imgdb.cn/item/64c7febb1ddac507cca50121.jpg" alt=""></p><p>由上面图片得到 这里的i是一个链接 但是它后面调用一个叫<code>hash33</code>的函数 并且带上了<code>qrsig</code> 那就在<code>hash33</code>打个断点 跳转进去</p><p><img src="https://pic.imgdb.cn/item/64c7ffb01ddac507cca6563c.png" alt=""></p><p>在返回结果继续打个断点 看看是不是我们想要的<code>ptqrtoken</code></p><p><img src="https://pic.imgdb.cn/item/64c800221ddac507cca6eb20.png" alt=""></p><p>嗯 这就是我们想要的<code>ptqrtoken</code> 同时t函数是<code>qrsig</code> 将以下代码翻译为<code>python</code> 示例如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">get_ptqrtoken</span>(<span class="hljs-params">qsing: <span class="hljs-built_in">str</span></span>) -&gt; <span class="hljs-built_in">int</span>:<br>    a = <span class="hljs-built_in">len</span>(qsing)<br>    <span class="hljs-built_in">hash</span> = <span class="hljs-number">0</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,a):<br>        <span class="hljs-built_in">hash</span> += ((<span class="hljs-built_in">hash</span> &lt;&lt; <span class="hljs-number">5</span>) &amp; <span class="hljs-number">2147483647</span>) + <span class="hljs-built_in">ord</span>(qsing[i]) &amp; <span class="hljs-number">2147483647</span><br>        <span class="hljs-built_in">hash</span> &amp;= <span class="hljs-number">2147483647</span><br><br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">hash</span> &amp; <span class="hljs-number">2147483647</span><br></code></pre></td></tr></table></figure><p>但是你会发现 即使解开了加密 还是访问不了二维码状态的api</p><h2 id="遇到问题">遇到问题</h2><p>这里你如果没安装<code>httpx</code>模块 可以通过以下命令安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">pip install httpx<br></code></pre></td></tr></table></figure><p>这里笔者通过以下python代码进行了简单 封装</p><p><code>这里为申请二维码的</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> httpx<br><br>a = httpx.get(<span class="hljs-string">&quot;https://ssl.ptlogin2.qq.com/ptqrshow?appid=716027609&amp;e=2&amp;l=M&amp;s=3&amp;d=72&amp;v=4&amp;t=0.9719602746914588&amp;daid=383&amp;pt_3rd_aid=100383922&amp;u1=https%3A%2F%2Fgraph.qq.com%2Foauth2.0%2Flogin_jump&quot;</span>)<br><br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;./qrcode.jpg&quot;</span>,<span class="hljs-string">&quot;wb&quot;</span>) <span class="hljs-keyword">as</span> f:<br>    f.write(a.content)<br>    f.close()<br><br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;qrsig&quot;</span>,<span class="hljs-string">&quot;w&quot;</span>,encoding=<span class="hljs-string">&quot;utf_8&quot;</span>) <span class="hljs-keyword">as</span> s:<br>    s.write(a.cookies[<span class="hljs-string">&quot;qrsig&quot;</span>])<br>    s.close()<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;获取二维码成功&quot;</span>)<br></code></pre></td></tr></table></figure><p>获取<code>心跳包</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> httpx<br><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">import</span> time<br><br><span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> os.path.isfile(<span class="hljs-string">&quot;qrsig&quot;</span>) <span class="hljs-keyword">or</span> <span class="hljs-keyword">not</span> os.path.isfile(<span class="hljs-string">&quot;qrcode.jpg&quot;</span>):<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;二维码信息读取失败,请打开get.py获取二维码&quot;</span>)<br><br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;qrsig&quot;</span>,<span class="hljs-string">&quot;r&quot;</span>,encoding=<span class="hljs-string">&quot;utf_8&quot;</span>) <span class="hljs-keyword">as</span> f:<br>    qrsig = f.read().strip()<br>    f.close()<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">get_ptqrtoken</span>(<span class="hljs-params">qsing: <span class="hljs-built_in">str</span></span>) -&gt; <span class="hljs-built_in">int</span>:<br>    a = <span class="hljs-built_in">len</span>(qsing)<br>    <span class="hljs-built_in">hash</span> = <span class="hljs-number">0</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,a):<br>        <span class="hljs-built_in">hash</span> += ((<span class="hljs-built_in">hash</span> &lt;&lt; <span class="hljs-number">5</span>) &amp; <span class="hljs-number">2147483647</span>) + <span class="hljs-built_in">ord</span>(qsing[i]) &amp; <span class="hljs-number">2147483647</span><br>        <span class="hljs-built_in">hash</span> &amp;= <span class="hljs-number">2147483647</span><br><br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">hash</span> &amp; <span class="hljs-number">2147483647</span><br><br>time_ = <span class="hljs-built_in">int</span>(time.time() * <span class="hljs-number">1000</span>)<br>h = httpx.get(<span class="hljs-string">f&quot;https://ssl.ptlogin2.qq.com/ptqrlogin?u1=https%3A%2F%2Fgraph.qq.com%2Foauth2.0%2Flogin_jump&amp;ptqrtoken=<span class="hljs-subst">&#123;get_ptqrtoken(qrsig)&#125;</span>&amp;ptredirect=0&amp;h=1&amp;t=1&amp;g=1&amp;from_ui=1&amp;ptlang=2052&amp;action=0-0-<span class="hljs-subst">&#123;time_&#125;</span>&amp;js_ver=23071715&amp;js_type=1&amp;pt_uistyle=40&amp;aid=716027609&amp;daid=383&amp;pt_3rd_aid=100383922&amp;has_onekey=1&amp;&amp;o1vId=271f9cd6edb6fcd5b0cdbfea4b2646a0&amp;pt_js_version=v1.46.0&quot;</span>)<br><span class="hljs-built_in">print</span>(h.status_code)<br></code></pre></td></tr></table></figure><p>如果不出意外 它会返回一个403的状态码 而不是200</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">403错误是禁止相应。是HTTP协议中的一个状态码(Status Code)。没有权限访问此站。403错误是网站访问过程中，常见的错误提示。<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">200状态码:表示请求已成功,请求所希望的响应头或数据体将随此响应返回<br></code></pre></td></tr></table></figure><p>猜想应该是缺少了一个参数</p><p>这个时候打开<code>fidder</code> 抓包软件</p><p>对端口进行抓取 选择<code>重发并编辑</code> 这边我删掉了<code>login_sig</code>参数</p><p><img src="https://s11.ax1x.com/2023/08/01/pP9xwY8.png" alt=""></p><p>发现还是能正常运行 因此<code>login_sig</code>可以不填写</p><p><img src="https://s11.ax1x.com/2023/08/01/pP9xsyj.png" alt=""></p><p>那继续删掉cookie试试能不能访问 如果删掉cookie还能访问 那就是跟cookie无关 否则就是cookie问题</p><p><img src="https://s11.ax1x.com/2023/08/01/pP9xcmn.png" alt=""></p><p>发现403 看来不能访问跟cookie有关 <img src="https://s11.ax1x.com/2023/08/01/pP9xWkV.png" alt=""></p><p>那接下来 在cookie里继续删减一些无关参数</p><p>这里经过我的测试 最后只需要留qrsig就行了 删了其他参数不影响api访问</p><p><img src="https://s11.ax1x.com/2023/08/01/pP9zP0I.png" alt=""></p><p>在请求参数上面做了cookie 激动人心的200出现了</p><p><img src="https://s11.ax1x.com/2023/08/01/pP9z8hT.png" alt=""></p><p>再写一层封装就行了 最终代码如下面</p><h2 id="示例代码">示例代码</h2><p><code>get.py</code> 申请二维码登录的</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> httpx<br><br>a = httpx.get(<span class="hljs-string">&quot;https://ssl.ptlogin2.qq.com/ptqrshow?appid=716027609&amp;e=2&amp;l=M&amp;s=3&amp;d=72&amp;v=4&amp;t=0.9719602746914588&amp;daid=383&amp;pt_3rd_aid=100383922&amp;u1=https%3A%2F%2Fgraph.qq.com%2Foauth2.0%2Flogin_jump&quot;</span>)<br><br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;./qrcode.jpg&quot;</span>,<span class="hljs-string">&quot;wb&quot;</span>) <span class="hljs-keyword">as</span> f:<br>    f.write(a.content)<br>    f.close()<br><br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;qrsig&quot;</span>,<span class="hljs-string">&quot;w&quot;</span>,encoding=<span class="hljs-string">&quot;utf_8&quot;</span>) <span class="hljs-keyword">as</span> s:<br>    s.write(a.cookies[<span class="hljs-string">&quot;qrsig&quot;</span>])<br>    s.close()<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;获取二维码成功&quot;</span>)<br></code></pre></td></tr></table></figure><p>执行后 当前目录会生成一个二维码 以及保存一个qrsig 登录请使用扫一扫   <code>注意:不要使用二维码识别或者相册识别！！</code></p><p><code>2.py</code> 获取二维码状态</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> httpx<br><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">import</span> time<br><br><span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> os.path.isfile(<span class="hljs-string">&quot;qrsig&quot;</span>) <span class="hljs-keyword">or</span> <span class="hljs-keyword">not</span> os.path.isfile(<span class="hljs-string">&quot;qrcode.jpg&quot;</span>):<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;二维码信息读取失败,请打开get.py获取二维码&quot;</span>)<br><br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;qrsig&quot;</span>,<span class="hljs-string">&quot;r&quot;</span>,encoding=<span class="hljs-string">&quot;utf_8&quot;</span>) <span class="hljs-keyword">as</span> f:<br>    qrsig = f.read().strip()<br>    f.close()<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">get_ptqrtoken</span>(<span class="hljs-params">qsing: <span class="hljs-built_in">str</span></span>) -&gt; <span class="hljs-built_in">int</span>:<br>    a = <span class="hljs-built_in">len</span>(qsing)<br>    <span class="hljs-built_in">hash</span> = <span class="hljs-number">0</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,a):<br>        <span class="hljs-built_in">hash</span> += ((<span class="hljs-built_in">hash</span> &lt;&lt; <span class="hljs-number">5</span>) &amp; <span class="hljs-number">2147483647</span>) + <span class="hljs-built_in">ord</span>(qsing[i]) &amp; <span class="hljs-number">2147483647</span><br>        <span class="hljs-built_in">hash</span> &amp;= <span class="hljs-number">2147483647</span><br><br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">hash</span> &amp; <span class="hljs-number">2147483647</span><br><br><span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>    time_ = <span class="hljs-built_in">int</span>(time.time() * <span class="hljs-number">1000</span>)<br>    h = httpx.get(<span class="hljs-string">f&quot;https://ssl.ptlogin2.qq.com/ptqrlogin?u1=https%3A%2F%2Fgraph.qq.com%2Foauth2.0%2Flogin_jump&amp;ptqrtoken=<span class="hljs-subst">&#123;get_ptqrtoken(qrsig)&#125;</span>&amp;ptredirect=0&amp;h=1&amp;t=1&amp;g=1&amp;from_ui=1&amp;ptlang=2052&amp;action=0-0-<span class="hljs-subst">&#123;time_&#125;</span>&amp;js_ver=23071715&amp;js_type=1&amp;pt_uistyle=40&amp;aid=716027609&amp;daid=383&amp;pt_3rd_aid=100383922&amp;has_onekey=1&amp;&amp;o1vId=271f9cd6edb6fcd5b0cdbfea4b2646a0&amp;pt_js_version=v1.46.0&quot;</span>,cookies=&#123;<span class="hljs-string">&quot;qrsig&quot;</span>:qrsig&#125;)<br><br>    <span class="hljs-keyword">if</span> h.status_code != <span class="hljs-number">200</span>:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;登录遇到问题&quot;</span>)<br>        <span class="hljs-keyword">break</span><br>    <br>    k = h.text.split(<span class="hljs-string">&quot;,&quot;</span>)<br><br>    <span class="hljs-keyword">if</span> k[<span class="hljs-number">0</span>] == <span class="hljs-string">&quot;ptuiCB(&#x27;65&#x27;&quot;</span>:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;二维码已失效&quot;</span>)<br>        <span class="hljs-keyword">break</span><br><br>    <span class="hljs-keyword">if</span> k[<span class="hljs-number">0</span>] == <span class="hljs-string">&quot;ptuiCB(&#x27;67&#x27;&quot;</span>:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;二维码已被扫描,等待被确认&quot;</span>)<br>        <br>    <span class="hljs-keyword">if</span> k[<span class="hljs-number">0</span>] == <span class="hljs-string">&quot;ptuiCB(&#x27;68&#x27;&quot;</span>:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;二维码登录被拒绝&quot;</span>)<br>        <span class="hljs-keyword">break</span><br><br>    <span class="hljs-keyword">if</span> k[<span class="hljs-number">0</span>] == <span class="hljs-string">&quot;ptuiCB(&#x27;66&#x27;&quot;</span>:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;等待扫描二维码,二维码未失效&quot;</span>)<br>    <br>    <span class="hljs-keyword">if</span> k[<span class="hljs-number">0</span>] == <span class="hljs-string">&quot;ptuiCB(&#x27;0&#x27;&quot;</span>:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;登录成功\n以下是你的登录链接&quot;</span>)<br>        <span class="hljs-built_in">print</span>(k[<span class="hljs-number">2</span>])<br>        <span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;按任意键退出\n&quot;</span>)<br>        <span class="hljs-keyword">break</span><br><br>    time.sleep(<span class="hljs-number">3</span>)<br></code></pre></td></tr></table></figure><p>执行文件后 去扫描当前目录下的二维码 没有二维码请先执行<code>get.py</code> 如果没错误 则会返回一个登录链接 点进去就能登录了</p><h2 id="源码下载">源码下载</h2><p>这里我方便大家运行 我稍微改了一下 以下是传送门</p><p>👇 👇 👇</p><p><a href="https://pan.baidu.com/s/1_vOP6DYKvODvB8RdyMDHnw?pwd=9ajb">传送门</a></p><p>👆 👆 👆</p><h2 id="效果">效果</h2><p><img src="https://s11.ax1x.com/2023/08/01/pP9zODs.png" alt=""></p><h2 id="后记">后记</h2><p>这篇博文写了挺久的 希望能帮助到你 下期见！！！</p>]]></content>
    
    
    <categories>
      
      <category>web逆向</category>
      
      <category>通讯类</category>
      
    </categories>
    
    
    <tags>
      
      <tag>code</tag>
      
      <tag>编程</tag>
      
      <tag>python</tag>
      
      <tag>js逆向</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Nonebot-金币管理系统(频道插件)</title>
    <link href="/2023/07/21/nonebot_guild_1/"/>
    <url>/2023/07/21/nonebot_guild_1/</url>
    
    <content type="html"><![CDATA[<h2 id="介绍">介绍</h2><p>今天利用空闲时间写了一个金币的插件，做到优先同步内存，再同步数据库，在用户1000+的高频率使用下，已经做到毫无压力了，主要思路如下</p><ul><li>开机做好预处理，把全部用户数据加载出来，并缓存在内存中</li></ul><span id="more"></span><ul><li><p>动态维护 对内存里的数据进行加减</p></li><li><p>再统一提交给数据库</p></li></ul><h2 id="如何使用">如何使用</h2><p>本插件下载链接 👇 👇</p><p><a href="https://pan.baidu.com/s/1jF7TRDURJzil_ZX_i2S1Dg?pwd=ctr8">传送门</a></p><p>☝ ☝ ☝</p><p>添加到你的频道插件目录下 并在 <code>pyproject.toml</code>里添加该文件夹</p><p><img src="https://s11.ax1x.com/2023/07/21/pCbYmwQ.png" alt=""></p><p>我这里把插件放在plugin文件夹里了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">plugin_dirs = [<span class="hljs-string">&quot;plugin&quot;</span>] <span class="hljs-comment"># 添加该插件所在的文件夹</span><br></code></pre></td></tr></table></figure><h2 id="代码展示">代码展示</h2><p>1.核心代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">## 作者:bingyue</span><br><span class="hljs-comment">## QQ: 35***19417</span><br><span class="hljs-comment">## 一个高效率的写法，适合用于金币好感度</span><br><br><span class="hljs-keyword">from</span> nonebot <span class="hljs-keyword">import</span> on_command, on_fullmatch<br><span class="hljs-keyword">from</span> nonebot.permission <span class="hljs-keyword">import</span> SUPERUSER<br><span class="hljs-keyword">from</span> nonebot.params <span class="hljs-keyword">import</span> CommandArg<br><span class="hljs-keyword">from</span> nonebot.adapters.qqguild <span class="hljs-keyword">import</span> Message, MessageEvent<br><span class="hljs-keyword">from</span> . <span class="hljs-keyword">import</span> sqlite_conn<br><br>a = on_command(<span class="hljs-string">&quot;增加金币&quot;</span>,permission=SUPERUSER)<br>b = on_command(<span class="hljs-string">&quot;减少金币&quot;</span>,permission=SUPERUSER)<br>c = on_fullmatch(<span class="hljs-string">&quot;查询金币&quot;</span>)<br><br><span class="hljs-meta">@a.handle()</span><br><span class="hljs-keyword">async</span> <span class="hljs-keyword">def</span> <span class="hljs-title function_">_</span>(<span class="hljs-params">b: Message = CommandArg(<span class="hljs-params"></span>)</span>):<br>    c = <span class="hljs-built_in">list</span>(b)<br>    <span class="hljs-keyword">await</span> add_jb(c[<span class="hljs-number">0</span>].data[<span class="hljs-string">&quot;user_id&quot;</span>],<span class="hljs-built_in">int</span>(c[<span class="hljs-number">1</span>].data[<span class="hljs-string">&quot;text&quot;</span>].strip()))<br>    <span class="hljs-keyword">await</span> a.finish(<span class="hljs-string">&quot;添加金币成功！&quot;</span>)<br><br><span class="hljs-meta">@b.handle()</span><br><span class="hljs-keyword">async</span> <span class="hljs-keyword">def</span> <span class="hljs-title function_">_</span>(<span class="hljs-params">d: Message = CommandArg(<span class="hljs-params"></span>)</span>):<br>    c = <span class="hljs-built_in">list</span>(d)<br>    <span class="hljs-keyword">await</span> del_jb(c[<span class="hljs-number">0</span>].data[<span class="hljs-string">&quot;user_id&quot;</span>],<span class="hljs-built_in">int</span>(c[<span class="hljs-number">1</span>].data[<span class="hljs-string">&quot;text&quot;</span>]))<br>    <span class="hljs-keyword">await</span> b.finish(<span class="hljs-string">&quot;减少金币成功&quot;</span>)<br><br><span class="hljs-meta">@c.handle()</span><br><span class="hljs-keyword">async</span> <span class="hljs-keyword">def</span> <span class="hljs-title function_">_</span>(<span class="hljs-params">event: MessageEvent</span>):<br>    j = <span class="hljs-keyword">await</span> find_jb(event.get_user_id())<br>    <span class="hljs-keyword">if</span> j <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:<br>        <span class="hljs-keyword">await</span> c.finish(<span class="hljs-string">&quot;你目前的金币为0&quot;</span>)<br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-keyword">await</span> c.finish(<span class="hljs-string">f&quot;你目前的金币为<span class="hljs-subst">&#123;j&#125;</span>&quot;</span>)<br><br><span class="hljs-keyword">async</span> <span class="hljs-keyword">def</span> <span class="hljs-title function_">add_jb</span>(<span class="hljs-params"><span class="hljs-built_in">id</span>:<span class="hljs-built_in">str</span>, e:<span class="hljs-built_in">int</span></span>) -&gt; <span class="hljs-literal">None</span>:<br>    <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">    增加好感度</span><br><span class="hljs-string"></span><br><span class="hljs-string">    id: 你的频道号</span><br><span class="hljs-string">    </span><br><span class="hljs-string">    e: 增加的具体数据</span><br><span class="hljs-string">    &quot;&quot;&quot;</span><br>    j = <span class="hljs-keyword">await</span> find_jb(<span class="hljs-built_in">id</span>)<br>    <span class="hljs-keyword">if</span> j <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:<br>        sqlite_conn.conn_jb.cursor().execute(<span class="hljs-string">f&#x27;insert into `jb` (`id`,`jb`) values(&quot;<span class="hljs-subst">&#123;<span class="hljs-built_in">id</span>&#125;</span>&quot;,<span class="hljs-subst">&#123;e&#125;</span>)&#x27;</span>)<br>        sqlite_conn.h[<span class="hljs-built_in">id</span>] = e<br>    <span class="hljs-keyword">else</span>:<br>        sqlite_conn.conn_jb.cursor().execute(<span class="hljs-string">f&#x27;UPDATE `jb` SET jb=<span class="hljs-subst">&#123;j+e&#125;</span> WHERE id=&quot;<span class="hljs-subst">&#123;<span class="hljs-built_in">id</span>&#125;</span>&quot;&#x27;</span>)<br>        sqlite_conn.h[<span class="hljs-built_in">id</span>] += e<br><br><br><span class="hljs-keyword">async</span> <span class="hljs-keyword">def</span> <span class="hljs-title function_">find_jb</span>(<span class="hljs-params"><span class="hljs-built_in">id</span>:<span class="hljs-built_in">str</span></span>) -&gt; <span class="hljs-built_in">int</span>:<br>    <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">    查询好感度</span><br><span class="hljs-string"></span><br><span class="hljs-string">    id: 你的频道号id</span><br><span class="hljs-string">    &quot;&quot;&quot;</span><br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">id</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> sqlite_conn.h:<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">None</span><br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-keyword">return</span> sqlite_conn.h[<span class="hljs-built_in">id</span>]<br><br><span class="hljs-keyword">async</span> <span class="hljs-keyword">def</span> <span class="hljs-title function_">del_jb</span>(<span class="hljs-params"><span class="hljs-built_in">id</span>:<span class="hljs-built_in">str</span>, e:<span class="hljs-built_in">int</span></span>) -&gt; <span class="hljs-literal">None</span>:<br>    <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">    减少好感度</span><br><span class="hljs-string"></span><br><span class="hljs-string">    id: 你的频道号</span><br><span class="hljs-string"></span><br><span class="hljs-string">    e: 减少的具体数据</span><br><span class="hljs-string">    &quot;&quot;&quot;</span><br>    j = <span class="hljs-keyword">await</span> find_jb(<span class="hljs-built_in">id</span>)<br>    <span class="hljs-keyword">if</span> j <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:<br>        sqlite_conn.conn_jb.cursor().execute(<span class="hljs-string">f&#x27;insert into `jb` (`id`,`jb`) values(&quot;<span class="hljs-subst">&#123;<span class="hljs-built_in">id</span>&#125;</span>&quot;,<span class="hljs-subst">&#123;-e&#125;</span>)&#x27;</span>)<br>        sqlite_conn.h[<span class="hljs-built_in">id</span>] = -e<br>    <span class="hljs-keyword">else</span>:<br>        sqlite_conn.conn_jb.cursor().execute(<span class="hljs-string">f&#x27;UPDATE `jb` SET jb=<span class="hljs-subst">&#123;j-e&#125;</span> WHERE id=&quot;<span class="hljs-subst">&#123;<span class="hljs-built_in">id</span>&#125;</span>&quot;&#x27;</span>)<br>        sqlite_conn.h[<span class="hljs-built_in">id</span>] -= e<br></code></pre></td></tr></table></figure><p>2.连接数据库，预处理</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">## 作者:bingyue</span><br><span class="hljs-comment">## QQ: 35***19417</span><br><span class="hljs-comment">## 一个高效率的写法，适合用于金币好感度</span><br><br><span class="hljs-keyword">from</span> nonebot.log <span class="hljs-keyword">import</span> logger<br><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">import</span> sqlite3<br><br>h = &#123;&#125;<br><br><span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> os.path.isdir(<span class="hljs-string">&quot;data&quot;</span>):<br>    logger.error(<span class="hljs-string">&quot;未检测到data文件,正在创建&quot;</span>)<br>    os.mkdir(<span class="hljs-string">&quot;data&quot;</span>)<br>    logger.success(<span class="hljs-string">&quot;创建data文件夹成功&quot;</span>)<br>    <br><span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> os.path.isfile(<span class="hljs-string">&quot;data/jb.db&quot;</span>):<br>    conn_jb = sqlite3.connect(<span class="hljs-string">&quot;data/jb.db&quot;</span>)<br>    logger.warning(<span class="hljs-string">&quot;正在加载数据库！！&quot;</span>)<br>    conn_jb.cursor().execute(<span class="hljs-string">f&quot;CREATE TABLE `jb` (`id` text, `jb` int(12))&quot;</span>)<br>    conn_jb.commit()<br>    logger.success(<span class="hljs-string">&quot;创建表格完毕&quot;</span>)<br><br>conn_jb = sqlite3.connect(<span class="hljs-string">&quot;data/jb.db&quot;</span>)<br><br>q = conn_jb.cursor().execute(<span class="hljs-string">f&quot;SELECT * from `jb`&quot;</span>).fetchall()<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> q:<br>    h[i[<span class="hljs-number">0</span>]] = i[<span class="hljs-number">1</span>]<br><br></code></pre></td></tr></table></figure><p>3.定时同步给数据库</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs Py"><span class="hljs-comment">## 作者:bingyue</span><br><span class="hljs-comment">## QQ: 35***19417</span><br><span class="hljs-comment">## 一个高效率的写法，适合用于金币好感度</span><br><br><span class="hljs-keyword">from</span> nonebot_plugin_apscheduler <span class="hljs-keyword">import</span> scheduler<br><span class="hljs-keyword">from</span> . <span class="hljs-keyword">import</span> sqlite_conn<br><span class="hljs-keyword">from</span> nonebot.log <span class="hljs-keyword">import</span> logger<br><br><span class="hljs-meta">@scheduler.scheduled_job(<span class="hljs-params"><span class="hljs-string">&#x27;interval&#x27;</span>, seconds=<span class="hljs-number">60</span></span>)</span><br><span class="hljs-keyword">async</span> <span class="hljs-keyword">def</span> <span class="hljs-title function_">eveny_day</span>() -&gt; <span class="hljs-literal">None</span>:<br>    sqlite_conn.conn_jb.commit()<br>    logger.success(<span class="hljs-string">&quot;同步数据成功！&quot;</span>)<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>qq频道</category>
      
    </categories>
    
    
    <tags>
      
      <tag>bot</tag>
      
      <tag>qq机器人</tag>
      
      <tag>code</tag>
      
      <tag>编程</tag>
      
      <tag>python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>nonebot-qq频道适配器教程</title>
    <link href="/2023/07/20/nonebot_guild/"/>
    <url>/2023/07/20/nonebot_guild/</url>
    
    <content type="html"><![CDATA[<p>大家好，今天教大家一期，使用nonebot的qq频道适配器去对接官方的频道bot，你需要准备以下工具</p><ul><li>一台电脑</li><li>python环境</li><li>去官方申请的key</li><li>vscode <code>(其他代码编辑器也行)</code></li></ul><span id="more"></span><h2 id="申请官方key">申请官方key</h2><p>登录<a href="https://q.qq.com/#/">QQ开发平台</a>，没有账号可以去注册一个号，我这边已经注册好了</p><p><img src="https://s11.ax1x.com/2023/07/20/pCH8cbd.png" alt=""></p><p><img src="https://s11.ax1x.com/2023/07/20/pCHG4oR.png" alt=""></p><p>我这里已经申请到key了，你申请之后官方会给你三个票据</p><table><thead><tr><th>bot_app_id</th><th>用于识别一个机器人的 id</th></tr></thead><tbody><tr><td>bot_secret</td><td>用于在 oauth 场景进行请求签名的密钥</td></tr><tr><td>bot_token</td><td>机器人token，用于以机器人身份调用 openapi，格式为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mrow><mi>a</mi><mi>p</mi><msub><mi>p</mi><mi>i</mi></msub><mi>d</mi></mrow><mi mathvariant="normal">.</mi></mrow><annotation encoding="application/x-tex">{app_id}.</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="mord mathnormal">p</span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">d</span></span><span class="mord">.</span></span></span></span>{random_str}</td></tr></tbody></table><p>这三个东西非常重要 接下来我们去下载nonebot封装的适配器</p><h2 id="下载适配器">下载适配器</h2><h3 id="手动下载">手动下载</h3><p>打开<code>powershell</code>输入如下命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">nb adapter install nonebot-adapter-qqguild<br>nb driver install nonebot2[aiohttp]<br></code></pre></td></tr></table></figure><p>安装适配器后 打开你的插件目录 找到<code>pyproject.toml</code></p><p><img src="https://s11.ax1x.com/2023/07/20/pCHJDne.png" alt=""></p><p>把<code>adapters</code>适配器里添加<code>qq频道适配器</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">adapters = [<br>    &#123; name = <span class="hljs-string">&quot;QQ 频道&quot;</span>, module_name = <span class="hljs-string">&quot;nonebot.adapters.qqguild&quot;</span> &#125;<br>]<br></code></pre></td></tr></table></figure><p>再找到<code>.env</code>文件</p><p>把<code>DRIVER=~fastapi</code></p><p><img src="https://s11.ax1x.com/2023/07/20/pCHJo7j.png" alt=""></p><p>改成</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">ENVIRONMENT=dev<br>DRIVER=~aiohttp<br></code></pre></td></tr></table></figure><h3 id="懒人安装">懒人安装</h3><p>在创建项目的时候 把驱动器改成aiohttp 同时适配器选择qq频道</p><p><img src="https://s11.ax1x.com/2023/07/20/pCHJxuF.png" alt=""></p><p><img src="https://s11.ax1x.com/2023/07/20/pCHJzB4.png" alt=""></p><h2 id="使用">使用</h2><p>完事之后，打开你的<code>env.dev.</code></p><p>输入如下内容</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs bash">QQGUILD_BOTS=<span class="hljs-string">&#x27;</span><br><span class="hljs-string">[</span><br><span class="hljs-string">  &#123;</span><br><span class="hljs-string">    &quot;id&quot;: &quot;xxx&quot;, #这里是bot_id</span><br><span class="hljs-string">    &quot;token&quot;: &quot;xxx&quot;, # 这里是 bot_secret</span><br><span class="hljs-string">    &quot;secret&quot;: &quot;xxx&quot;, # 这里是bot_token</span><br><span class="hljs-string">    &quot;intent&quot;: &#123;</span><br><span class="hljs-string">      &quot;guild_messages&quot;: true,</span><br><span class="hljs-string">      &quot;at_messages&quot;: false</span><br><span class="hljs-string">    &#125;</span><br><span class="hljs-string">  &#125;</span><br><span class="hljs-string">]</span><br><span class="hljs-string">&#x27;</span><br></code></pre></td></tr></table></figure><p>保存</p><p>在当前目录下启动nb</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">07-20 19:59:42 [INFO] nonebot | QQ Guild | Bot ********* connected<br>07-20 19:59:42 [SUCCESS] nonebot | QQ Guild ********** | [READY]: &#123;<span class="hljs-string">&#x27;version&#x27;</span>: 1, <span class="hljs-string">&#x27;session_id&#x27;</span>: <span class="hljs-string">&#x27;********************&#x27;</span>, <span class="hljs-string">&#x27;user&#x27;</span>: &#123;<span class="hljs-string">&#x27;id&#x27;</span>: **********, <span class="hljs-string">&#x27;username&#x27;</span>: <span class="hljs-string">&#x27;*****&#x27;</span>, <span class="hljs-string">&#x27;avatar&#x27;</span>: None, <span class="hljs-string">&#x27;bot&#x27;</span>: True, <span class="hljs-string">&#x27;union_openid&#x27;</span>: None, <span class="hljs-string">&#x27;union_user_account&#x27;</span>: None&#125;, <span class="hljs-string">&#x27;shard&#x27;</span>: (0, 1)&#125;<br></code></pre></td></tr></table></figure><p>如果出现上述东西 说明已连接成功 可以自由收发消息了</p><h2 id="插件示例">插件示例</h2><p>这里只展示一些基础写法，可以参考一下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> nonebot <span class="hljs-keyword">import</span> on_fullmatch<br><span class="hljs-keyword">from</span> nonebot.adapters.qqguild <span class="hljs-keyword">import</span> MessageEvent, MessageSegment<br><br>a = on_fullmatch(<span class="hljs-string">&quot;/获取用户id&quot;</span>)<br><br><span class="hljs-meta">@a.handle()</span><br><span class="hljs-keyword">async</span> <span class="hljs-keyword">def</span> <span class="hljs-title function_">_</span>(<span class="hljs-params">event: MessageEvent</span>):<br>    <span class="hljs-keyword">await</span> a.finish(<span class="hljs-string">f&quot;你的用户id为:<span class="hljs-subst">&#123;event.get_user_id()&#125;</span>&quot;</span>)<br><br>b = on_fullmatch(<span class="hljs-string">&quot;/你好&quot;</span>)<br><br><span class="hljs-meta">@b.handle()</span><br><span class="hljs-keyword">async</span> <span class="hljs-keyword">def</span> <span class="hljs-title function_">_</span>(<span class="hljs-params">event: MessageEvent</span>):<br>    <span class="hljs-keyword">await</span> b.finish(MessageSegment.reference(event.<span class="hljs-built_in">id</span>)+<span class="hljs-string">&quot;你也好呀！&quot;</span>)<br></code></pre></td></tr></table></figure><p><img src="https://s11.ax1x.com/2023/07/20/pCH0usx.png" alt=""></p>]]></content>
    
    
    <categories>
      
      <category>qq频道</category>
      
    </categories>
    
    
    <tags>
      
      <tag>bot</tag>
      
      <tag>qq机器人</tag>
      
      <tag>code</tag>
      
      <tag>编程</tag>
      
      <tag>python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>oppo/真我解锁bl (仅限mtk)</title>
    <link href="/2023/07/12/oppo_realme_bl/"/>
    <url>/2023/07/12/oppo_realme_bl/</url>
    
    <content type="html"><![CDATA[<h2 id="感谢">感谢</h2><p>感谢大佬<a href="">@^0^/＊</a>提供的援助</p><h2 id="前言">前言</h2><p>本期教程可能繁琐，适用于不支持深度计划解锁的oppo/真我 手机的bl，以及后半篇讲到如何去除dm和avb校验，到最后成功装上magisk的全教程,<s>这可能是全网最详细的教程了吧！</s> 以下是基础科普</p><span id="more"></span><p>总结： oppo/真我 的bl有三道防线 <code>解锁bl-&gt;去除dm-&gt;avb</code></p><p>1.什么是bl</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">在嵌入式操作系统中，BootLoader是在操作系统内核运行之前运行。可以初始化硬件设备、建立内存空间映射图，<br>从而将系统的软硬件环境带到一个合适状态，以便为最终调用操作系统内核准备好正确的环境。<br>在解开BL锁之前，用户是无法自由进行刷机操作和ROOT操作的。部分手机官方为了保证手机的安全，<br>为手机设置了BL锁，在BL锁未解的情况下，用户是不能自行刷机或获取ROOT权限的。 <br></code></pre></td></tr></table></figure><p>2.什么是dm-verify?为什么要去除他</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">它是一个专门校验分区的模块，通过哈希对比，<br>去查看分区是否被篡改，因为我们root会修改boot分区，<br>所以要去除dm-verify<br></code></pre></td></tr></table></figure><p>3.avb是什么？为什么也要去除它</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">avb校验功能主要是由external/avb/libavb库实现的<br>该库主要完成的工作包括各个分区镜像的校验，签名验证，以及vbmeta数据的解析，<br>包括了各种flags的处理以及dm-verity所需要的参数解析。同上root会修改分区内容<br></code></pre></td></tr></table></figure><h2 id="解锁bl的前期准备">解锁bl的前期准备</h2><p>首先确保你电脑有python环境 如果没python环境可以去参考我之前做qqbot的教程</p><p><a href="https://blog.bingyue.top/2022/10/03/python_start/#more">传送门</a></p><p><a href="https://www.aliyundrive.com/s/qza2oEVVjFV">下载本工具</a> 打开直接安装</p><p><img src="https://s11.ax1x.com/2023/07/08/pCgGgrF.png" alt="等待进度条跑完"></p><p><a href="https://pan.baidu.com/s/1QzxifgdJ8EEB55NhUFEI4g?pwd=f9rf">点击下载强解工具</a></p><p>解压 如图</p><p><img src="https://s11.ax1x.com/2023/07/08/pCgGWVJ.png" alt=""></p><p>按住你键盘上的<code>shift</code>键 点击鼠标右键 选择 <code>打开powershell</code></p><p>输入如下命令 将你的python源切换到清华</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">pip config <span class="hljs-built_in">set</span> global.index-url https://pypi.tuna.tsinghua.edu.cn/simple<br></code></pre></td></tr></table></figure><p>再输入以下命令 安装强解工具 所需的第三方库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">pip install -r requirements.txt<br></code></pre></td></tr></table></figure><p>这样我们的解锁工具就配置好了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">注意：以下的内容请阅读<br>首先确保你的coloros/realme os 是出厂版本<br>本人建议安卓11/安卓10的机型解锁<br>如果你机子是安卓12/安卓13 解锁有可能失败<br>请你一定做好相关的救砖准备！！！<br>请你一定做好相关的救砖准备！！！<br>请你一定做好相关的救砖准备！！！<br></code></pre></td></tr></table></figure><h2 id="解锁bl-安卓10以下的设备">解锁bl  安卓10以下的设备</h2><p>在powershell里输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">python mtk da seccfg unlock<br></code></pre></td></tr></table></figure><p><img src="https://s11.ax1x.com/2023/07/08/pCgJYJ1.png" alt=""></p><p>这个时候 按住电源键+音量上下键 等待驱动安装 开始读条</p><p><img src="https://s11.ax1x.com/2023/07/08/pCgJdsO.png" alt=""></p><p>出现这样就成功了</p><p>这个时候拔掉数据线 按住电源键 重启手机</p><p>如果不出意外 你开机将会看到如下内容</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">Your device has been unlocked and can<span class="hljs-string">&#x27;t be trusted.</span><br><span class="hljs-string">Your device will boot in 5 seconds.</span><br></code></pre></td></tr></table></figure><h2 id="解锁bl-安卓11以上的设备">解锁bl 安卓11以上的设备</h2><p>注意 你的设备是安卓11 你解开之后是有dm校验的 而且bl也没成功 这得归功于oppo的傻逼底层 而oppo/真我 却把dm藏在 <code>lk</code>分区</p><p>所以今下来先干掉lk 再去强解bl</p><p>在powershell里输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">python mtk r lk,lk2 lk.bin,lk2.bin<br></code></pre></td></tr></table></figure><p>备份官方的lk （一定要保存好,我这里重命名为 <code>lk.base</code>和<code>lk2.base</code>）</p><p>这里得看你的设备有多少个lk分区 我这台手机两个</p><p>提取之后 刷入解锁的lk <a href="https://pan.baidu.com/s/1sHpbB_CKnealwsxclSA-uw?pwd=9ji7">下载连接</a></p><p>2024.06.07 更新 最新的lk<a href="https://pan.baidu.com/s/1ePnLzVhb2aPloZZNs88kCA?pwd=56kw">下载链接</a></p><p>放到mtkclient目录下 把这个文件刷入到两个分区里</p><p>重命名一下吧 就叫<code>lk.bin</code>好了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">python mtk w lk,lk2 lk.bin,lk.bin<br></code></pre></td></tr></table></figure><p>强开bl</p><p><img src="https://s11.ax1x.com/2023/07/08/pCgJdsO.png" alt=""></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">python mtk da seccfg unlock<br></code></pre></td></tr></table></figure><p>拔掉数据线 先按电源键激活一下lk 如果出现黑屏+振动 请不要担心 正常现象</p><p>这个时候你的手机就跟黑砖一样 但端口不能寄</p><p>继续按住 电源键+音量上+音量下</p><p>继续刷回官方的lk</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">python mtk w lk,lk2 lk.base,lk2.base<br></code></pre></td></tr></table></figure><p>按一下电源键 如果看到了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">Your device has been unlocked and can<span class="hljs-string">&#x27;t be trusted.</span><br><span class="hljs-string">Your device will boot in 5 seconds.</span><br></code></pre></td></tr></table></figure><p>说明bl锁已经打开了</p><p>你会发现你进不了桌面 这个时候你等半个小时左右吧 待会会有3-4次重启 记得按电源键</p><p>然后进入到rec 点<code>清除数据-&gt;格式化数据分区-&gt;输入验证码-&gt;完成清除-&gt;重启</code></p><p><code>设置-&gt;关于本机-&gt;版本信息-&gt;连按版本号-&gt;返回-&gt;更多设置-&gt;开发者选项</code></p><p><img src="https://s11.ax1x.com/2023/07/12/pCfVWXd.png" alt=""></p><p>我这里oem解锁变灰了 说明bl解锁成功了</p><h2 id="刷入magisk">刷入magisk</h2><p>按住电源键+音量上下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">python mtk r boot boot.img<br></code></pre></td></tr></table></figure><p>提取boot</p><p>手机安装magisk <a href="https://github.com/topjohnwu/Magisk/releases/download/v26.1/Magisk-v26.1.apk">下载链接</a></p><p>去修补boot 切记 不要开<code>修补vbmeta</code></p><p>连接adb 输入如下命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">adb shell<br>reboot fastboot<br>fastboot flash boot boot.img(这一空是你修改好的面具boot 拖入到poershell就行)<br></code></pre></td></tr></table></figure><p>如图所示</p><p><img src="https://s11.ax1x.com/2023/07/12/pCfMh26.png" alt=""></p><p>刷入成功了</p><p>重启手机 看效果吧</p><h2 id="后续">后续</h2><p>你吃上了root没</p><p><img src="https://s11.ax1x.com/2023/07/12/pCfVR6H.png" alt=""></p>]]></content>
    
    
    <categories>
      
      <category>解锁bl</category>
      
    </categories>
    
    
    <tags>
      
      <tag>bootloader</tag>
      
      <tag>刷机</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>nonebot2 二编写基础插件</title>
    <link href="/2023/07/04/nonebot_teach_3/"/>
    <url>/2023/07/04/nonebot_teach_3/</url>
    
    <content type="html"><![CDATA[<h2 id="前言">前言</h2><p>相信经过前面的学习 大家已经学会启动nonebot了 和 加载插件 那今天我们写一个插件</p><h2 id="认识Nonebot文件结构">认识Nonebot文件结构</h2><p>在上一篇中 我们创建了一个nb项目</p><span id="more"></span><p>以下是该文件结构</p><p><img src="https://s11.ax1x.com/2023/06/30/pC0g00O.png" alt=""></p><p>我们先打开<code>pyproject.toml</code></p><p>内容如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs bash">[project]<br>name = <span class="hljs-string">&quot;test&quot;</span> <span class="hljs-comment"># 插件名字</span><br>version = <span class="hljs-string">&quot;0.1.0&quot;</span> <span class="hljs-comment"># 插件版本</span><br>description = <span class="hljs-string">&quot;test&quot;</span> <span class="hljs-comment"># 插件介绍</span><br>readme = <span class="hljs-string">&quot;README.md&quot;</span> <span class="hljs-comment"># 插件文档</span><br>requires-python = <span class="hljs-string">&quot;&gt;=3.8, &lt;4.0&quot;</span> <span class="hljs-comment"># 适用py版本 (勿动)</span><br><br>[tool.nonebot]<br>adapters = [<br>    &#123; name = <span class="hljs-string">&quot;OneBot V11&quot;</span>, module_name = <span class="hljs-string">&quot;nonebot.adapters.onebot.v11&quot;</span> &#125;<br>] <span class="hljs-comment"># 勿动</span><br>plugins = []<br>plugin_dirs = [<span class="hljs-string">&quot;src/plugins&quot;</span>]<br>builtin_plugins = [<span class="hljs-string">&quot;echo&quot;</span>]<br></code></pre></td></tr></table></figure><p>看到</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">plugins = []<br>plugin_dirs = [<span class="hljs-string">&quot;src/plugins&quot;</span>]<br>builtin_plugins = [<span class="hljs-string">&quot;echo&quot;</span>]<br></code></pre></td></tr></table></figure><p>plugins是加载成品的加载 也就是你从nb官网下载的插件</p><p>一般以这种形式开头</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">plugins = [<span class="hljs-string">&quot;nonebot_plugin_xxxx&quot;</span>]<br></code></pre></td></tr></table></figure><p>plugin_dirs 则是加载文件夹里的插件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">plugin_dirs = [<span class="hljs-string">&quot;src/plugins&quot;</span>] <span class="hljs-comment"># 加载scr文件夹里的plugin文件夹下的插件</span><br></code></pre></td></tr></table></figure><p>builtin_plugins 则是加载官方内置的插件 一般用不到 可以改为</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">builtin_plugins = []<br></code></pre></td></tr></table></figure><p>改好之后保存即可</p><p>打开<code>.env.dev</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">LOG_LEVEL=DEBUG<br></code></pre></td></tr></table></figure><p>我们删除这句话 并添加如下内容</p><p>注意 这里不要使用系统自带记事本取修改 否则会报如下错误</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">UnicodeDecodeError: <span class="hljs-string">&#x27;utf-8&#x27;</span> codec can<span class="hljs-string">&#x27;t decode byte 0xc5 in position 16: invalid continuation byte</span><br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">HOST=0.0.0.0  <span class="hljs-comment"># 配置 NoneBot 监听的 IP / 主机名 默认127.0.0.1</span><br>PORT=8080  <span class="hljs-comment"># 配置 NoneBot 监听的端口 这里设置成你的cq对接的端口号</span><br>COMMAND_START=[<span class="hljs-string">&quot;/&quot;</span>]  <span class="hljs-comment"># 配置命令起始字符</span><br>COMMAND_SEP=[<span class="hljs-string">&quot;.&quot;</span>]  <span class="hljs-comment"># 配置命令分割字符</span><br>SUPERUSERS=[<span class="hljs-string">&quot;你的qq号&quot;</span>] <span class="hljs-comment"># nb超级管理员 输入你的qq号</span><br><br></code></pre></td></tr></table></figure><p>这样配置基础就做好了</p><h2 id="开启环境">开启环境</h2><p>在你的<code>scr/plugins</code> 创建一个py文件 名字随意</p><p><img src="https://s11.ax1x.com/2023/06/30/pC028Df.png" alt=""></p><p>用vscode打开他</p><p>编写如下内容</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> nonebot <span class="hljs-keyword">import</span> on_command<br><br>a = on_command(<span class="hljs-string">&quot;你好&quot;</span>) <span class="hljs-comment"># 设置一个消息指令</span><br><br><span class="hljs-meta">@a.handle()</span><br><span class="hljs-keyword">async</span> <span class="hljs-keyword">def</span> <span class="hljs-title function_">_</span>(): <span class="hljs-comment"># 当触发这个消息的时候 async def里的代码会被执行</span><br>    <span class="hljs-keyword">await</span> a.finish(<span class="hljs-string">&quot;hello world&quot;</span>) <span class="hljs-comment"># 结束事件返回一句 hello world</span><br></code></pre></td></tr></table></figure><p>保存</p><p>启动你的nb和cq</p><p>向你的机器人回复一句<code>你好</code> 你便会收到一句<code>hello world</code></p><h2 id="插件编写">插件编写</h2><table><thead><tr><th>函数</th><th style="text-align:left">作用</th></tr></thead><tbody><tr><td>on_command</td><td style="text-align:left">设置消息关键字 当消息开头包含关键字即触发</td></tr><tr><td>on_fullmatch</td><td style="text-align:left">设置消息关键字 当关键字与消息完全一致时触发</td></tr><tr><td>on_keyword</td><td style="text-align:left">设置消息关键字 当消息包含关键字时触发</td></tr><tr><td>random.randint(0,7)</td><td style="text-align:left">生成一个0~7的随机数 可以随意更改</td></tr><tr><td>random.choice(a)</td><td style="text-align:left">从a列表里随机挑一个出来</td></tr></tbody></table><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> nonebot <span class="hljs-keyword">import</span> on_fullmatch<br><span class="hljs-keyword">import</span> random<br><br>a = on_fullmatch(<span class="hljs-string">&quot;随机人生&quot;</span>)<br><br><span class="hljs-meta">@a.handle()</span><br><span class="hljs-keyword">async</span> <span class="hljs-keyword">def</span> <span class="hljs-title function_">_</span>():<br>    name = [<span class="hljs-string">&quot;大音希声&quot;</span>,<span class="hljs-string">&quot;恬静可人&quot;</span>,<span class="hljs-string">&quot;珞珞如石&quot;</span>] <span class="hljs-comment"># 姓名</span><br>    age = random.randint(<span class="hljs-number">19</span>,<span class="hljs-number">27</span>) <span class="hljs-comment"># 随机年龄</span><br>    job = [<span class="hljs-string">&quot;行政主管&quot;</span>,<span class="hljs-string">&quot;企业主管&quot;</span>,<span class="hljs-string">&quot;经理人&quot;</span>,<span class="hljs-string">&quot;土木营造监工&quot;</span>] <span class="hljs-comment"># 职业</span><br><br>    name_ = random.choice(name) <span class="hljs-comment"># 随机姓名</span><br>    job_ = random.choice(job)<br><br>    <span class="hljs-keyword">await</span> a.finish(<span class="hljs-string">f&quot;姓名:<span class="hljs-subst">&#123;name_&#125;</span>\n年龄:<span class="hljs-subst">&#123;age&#125;</span>\n职业:<span class="hljs-subst">&#123;job_&#125;</span>&quot;</span>) <span class="hljs-comment"># 结束事件并发送消息</span><br></code></pre></td></tr></table></figure><p>以上为一个基础的插件 如不出意外 你会收到机器人回复</p><p>我们可以进一步的改进一下 例如加一些等待</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> nonebot <span class="hljs-keyword">import</span> on_fullmatch<br><span class="hljs-keyword">import</span> random<br><span class="hljs-keyword">import</span> asyncio<br><br>a = on_fullmatch(<span class="hljs-string">&quot;随机人生&quot;</span>)<br><br><span class="hljs-meta">@a.handle()</span><br><span class="hljs-keyword">async</span> <span class="hljs-keyword">def</span> <span class="hljs-title function_">_</span>():<br>    name = [<span class="hljs-string">&quot;大音希声&quot;</span>,<span class="hljs-string">&quot;恬静可人&quot;</span>,<span class="hljs-string">&quot;珞珞如石&quot;</span>] <span class="hljs-comment"># 姓名</span><br>    age = random.randint(<span class="hljs-number">19</span>,<span class="hljs-number">27</span>) <span class="hljs-comment"># 随机年龄</span><br>    job = [<span class="hljs-string">&quot;行政主管&quot;</span>,<span class="hljs-string">&quot;企业主管&quot;</span>,<span class="hljs-string">&quot;经理人&quot;</span>,<span class="hljs-string">&quot;土木营造监工&quot;</span>] <span class="hljs-comment"># 职业</span><br><br>    <span class="hljs-keyword">await</span> a.send(<span class="hljs-string">&quot;请稍等，正在生成中&quot;</span>) <span class="hljs-comment"># 发送一条消息</span><br>    <span class="hljs-keyword">await</span> asyncio.sleep(<span class="hljs-number">3</span>) <span class="hljs-comment"># 冷却3秒</span><br><br>    name_ = random.choice(name) <span class="hljs-comment"># 随机姓名</span><br>    job_ = random.choice(job)<br><br>    <span class="hljs-keyword">await</span> a.finish(<span class="hljs-string">f&quot;姓名:<span class="hljs-subst">&#123;name_&#125;</span>\n年龄:<span class="hljs-subst">&#123;age&#125;</span>\n职业:<span class="hljs-subst">&#123;job_&#125;</span>&quot;</span>) <span class="hljs-comment"># 结束事件并发送消息</span><br></code></pre></td></tr></table></figure><p>这样更完美了 当然你也可以加一些数据进去</p><p>这算是个基础插件编写了</p><h2 id="后记">后记</h2><p>下一篇 我会讲解如何去调用管理员权限 以及 写连续对话的插件</p>]]></content>
    
    
    <categories>
      
      <category>qq机器人</category>
      
      <category>nonebot教程</category>
      
    </categories>
    
    
    <tags>
      
      <tag>bot</tag>
      
      <tag>qq机器人</tag>
      
      <tag>code</tag>
      
      <tag>编程</tag>
      
      <tag>python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Leetcode 445.两数相加 II</title>
    <link href="/2023/07/03/leetcode445/"/>
    <url>/2023/07/03/leetcode445/</url>
    
    <content type="html"><![CDATA[<h2 id="题目详情">题目详情</h2><h4 id="两数相加-II"><a href="https://leetcode.cn/problems/add-two-numbers-ii/">两数相加 II</a></h4><span id="more"></span><p>给你两个 非空 链表来代表两个非负整数。数字最高位位于链表开始位置。它们的每个节点只存储一位数字。将这两数相加会返回一个新的链表。</p><p>你可以假设除了数字 0 之外，这两个数字都不会以零开头。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash">输入：l1 = [7,2,4,3], l2 = [5,6,4]<br>输出：[7,8,0,7]<br><br>输入：l1 = [2,4,3], l2 = [5,6,4]<br>输出：[8,0,7]<br><br>输入：l1 = [0], l2 = [0]<br>输出：[0]<br><br></code></pre></td></tr></table></figure><h2 id="解题思路">解题思路</h2><p>本题需要逆向运算，因此容易想到栈的性质<code>后进来的先出</code>，这和我之前20题的讲的栈是一样的,建立a和b两个栈</p><p><img src="https://s11.ax1x.com/2023/07/03/pCspfiT.png" alt=""></p><p>从示例1开始，依次把数字放进去</p><p><img src="https://s11.ax1x.com/2023/07/03/pCspqdx.png" alt=""></p><p>先弹出<code>3</code>和<code>4</code> 3+4=7 新链表第一哥节点为7</p><p><img src="https://s11.ax1x.com/2023/07/03/pCspvWD.png" alt=""></p><p>再到6+4=10 这时出现两位数了 我们要进1位 然后取除10的余数为当前的节点</p><p>因此节点第二位是0</p><p><img src="https://s11.ax1x.com/2023/07/03/pCs9FTP.png" alt=""></p><p>再到5+2=7 但别忘了之前的进位 所以是 5+2+1=8 第三个节点为8</p><p><img src="https://s11.ax1x.com/2023/07/03/pCs93kV.png" alt=""></p><p>这里b栈的数字已经全部用完了 这里取出来的数为0 所以是7+0 =7</p><p>最后一个节点为5</p><p><img src="https://s11.ax1x.com/2023/07/03/pCs9N6J.png" alt=""></p><p>到这里还没完 因为题目要求是翻转的链表 因此我们再把链表反转一下即可</p><p>那现在开始写代码吧</p><p>先把数字放进去栈</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python">a = []<br>b = []<br><span class="hljs-keyword">while</span> l1 <span class="hljs-keyword">or</span> l2:<br>    <span class="hljs-keyword">if</span> l1:<br>       a.append(l1.val)<br>       l1 = l1.<span class="hljs-built_in">next</span><br>            <br>    <span class="hljs-keyword">if</span> l2:<br>       b.append(l2.val)<br>       l2 = l2.<span class="hljs-built_in">next</span><br></code></pre></td></tr></table></figure><p>然后写个条件循环</p><p>出栈并处理进位添加节点</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs python">m = n = ListNode(<span class="hljs-number">0</span>)<br><span class="hljs-keyword">while</span> a <span class="hljs-keyword">or</span> b:<br>    <span class="hljs-keyword">if</span> a:<br>       k = a.pop()<br>    <span class="hljs-keyword">else</span>:<br>       k = <span class="hljs-number">0</span><br>            <br>    <span class="hljs-keyword">if</span> b:<br>        v = b.pop()<br>    <span class="hljs-keyword">else</span>:<br>        v = <span class="hljs-number">0</span><br>            <br>    s = (k+v+c)<br>    c = s // <span class="hljs-number">10</span><br>    m.<span class="hljs-built_in">next</span> = ListNode(s % <span class="hljs-number">10</span>)<br>    m = m.<span class="hljs-built_in">next</span><br></code></pre></td></tr></table></figure><p>补位 (如果遍历完了 还有进位 则需补位)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">if</span> c:<br>   m.<span class="hljs-built_in">next</span> = ListNode(c)<br></code></pre></td></tr></table></figure><p>再写个反转链表的函数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span>:<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">reverseList</span>(<span class="hljs-params">self, head: ListNode</span>) -&gt; ListNode:<br>        prev, curr = <span class="hljs-literal">None</span>, head<br>        <span class="hljs-keyword">while</span> curr <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-literal">None</span>:<br>            <span class="hljs-built_in">next</span> = curr.<span class="hljs-built_in">next</span><br>            curr.<span class="hljs-built_in">next</span> = prev<br>            prev = curr<br>            curr = <span class="hljs-built_in">next</span><br>        <span class="hljs-keyword">return</span> prev<br></code></pre></td></tr></table></figure><p>大功告成</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span>:<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">reverseList</span>(<span class="hljs-params">self, head: ListNode</span>) -&gt; ListNode:<br>        prev, curr = <span class="hljs-literal">None</span>, head<br>        <span class="hljs-keyword">while</span> curr <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-literal">None</span>:<br>            <span class="hljs-built_in">next</span> = curr.<span class="hljs-built_in">next</span><br>            curr.<span class="hljs-built_in">next</span> = prev<br>            prev = curr<br>            curr = <span class="hljs-built_in">next</span><br>        <span class="hljs-keyword">return</span> prev<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">addTwoNumbers</span>(<span class="hljs-params">self, l1: <span class="hljs-type">Optional</span>[ListNode], l2: <span class="hljs-type">Optional</span>[ListNode]</span>) -&gt; <span class="hljs-type">Optional</span>[ListNode]:<br>        a = []<br>        b = []<br>        c = <span class="hljs-number">0</span><br>        m = n = ListNode(<span class="hljs-number">0</span>)<br>        k = <span class="hljs-number">0</span><br>        v = <span class="hljs-number">0</span><br>        <span class="hljs-keyword">while</span> l1 <span class="hljs-keyword">or</span> l2:<br>            <span class="hljs-keyword">if</span> l1:<br>                a.append(l1.val)<br>                l1 = l1.<span class="hljs-built_in">next</span><br>            <br>            <span class="hljs-keyword">if</span> l2:<br>                b.append(l2.val)<br>                l2 = l2.<span class="hljs-built_in">next</span> <br>        <span class="hljs-keyword">while</span> a <span class="hljs-keyword">or</span> b:<br>            <span class="hljs-keyword">if</span> a:<br>                k = a.pop()<br>            <span class="hljs-keyword">else</span>:<br>                k = <span class="hljs-number">0</span><br>            <br>            <span class="hljs-keyword">if</span> b:<br>                v = b.pop()<br>            <span class="hljs-keyword">else</span>:<br>                v = <span class="hljs-number">0</span><br>            <br>            s = (k+v+c)<br>            c = s // <span class="hljs-number">10</span><br>            m.<span class="hljs-built_in">next</span> = ListNode(s % <span class="hljs-number">10</span>)<br>            m = m.<span class="hljs-built_in">next</span><br>        <span class="hljs-keyword">if</span> c:<br>            m.<span class="hljs-built_in">next</span> = ListNode(c)<br>        <span class="hljs-keyword">return</span> self.reverseList(n.<span class="hljs-built_in">next</span>)<br></code></pre></td></tr></table></figure><h2 id="示例代码">示例代码</h2><p>Python3</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">## 时间复杂度: O(max(n,m))</span><br><span class="hljs-comment">## 空间复杂度: O(m+n)</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span>:<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">reverseList</span>(<span class="hljs-params">self, head: ListNode</span>) -&gt; ListNode:<br>        prev, curr = <span class="hljs-literal">None</span>, head<br>        <span class="hljs-keyword">while</span> curr <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-literal">None</span>:<br>            <span class="hljs-built_in">next</span> = curr.<span class="hljs-built_in">next</span><br>            curr.<span class="hljs-built_in">next</span> = prev<br>            prev = curr<br>            curr = <span class="hljs-built_in">next</span><br>        <span class="hljs-keyword">return</span> prev<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">addTwoNumbers</span>(<span class="hljs-params">self, l1: <span class="hljs-type">Optional</span>[ListNode], l2: <span class="hljs-type">Optional</span>[ListNode]</span>) -&gt; <span class="hljs-type">Optional</span>[ListNode]:<br>        a = []<br>        b = []<br>        c = <span class="hljs-number">0</span><br>        m = n = ListNode(<span class="hljs-number">0</span>)<br>        k = <span class="hljs-number">0</span><br>        v = <span class="hljs-number">0</span><br>        <span class="hljs-keyword">while</span> l1 <span class="hljs-keyword">or</span> l2:<br>            <span class="hljs-keyword">if</span> l1:<br>                a.append(l1.val)<br>                l1 = l1.<span class="hljs-built_in">next</span><br>            <br>            <span class="hljs-keyword">if</span> l2:<br>                b.append(l2.val)<br>                l2 = l2.<span class="hljs-built_in">next</span> <br>        <span class="hljs-keyword">while</span> a <span class="hljs-keyword">or</span> b:<br>            <span class="hljs-keyword">if</span> a:<br>                k = a.pop()<br>            <span class="hljs-keyword">else</span>:<br>                k = <span class="hljs-number">0</span><br>            <br>            <span class="hljs-keyword">if</span> b:<br>                v = b.pop()<br>            <span class="hljs-keyword">else</span>:<br>                v = <span class="hljs-number">0</span><br>            <br>            s = (k+v+c)<br>            c = s // <span class="hljs-number">10</span><br>            m.<span class="hljs-built_in">next</span> = ListNode(s % <span class="hljs-number">10</span>)<br>            m = m.<span class="hljs-built_in">next</span><br>        <span class="hljs-keyword">if</span> c:<br>            m.<span class="hljs-built_in">next</span> = ListNode(c)<br>        <span class="hljs-keyword">return</span> self.reverseList(n.<span class="hljs-built_in">next</span>)<br></code></pre></td></tr></table></figure><p>C++</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-comment">// 时间复杂度: O(max(m,n))</span><br><span class="hljs-comment">// 空间复杂度: O(m+n)</span><br><span class="hljs-comment">// 本代码来自官方题解</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span> &#123;<br><span class="hljs-keyword">public</span>:<br>    <span class="hljs-function">ListNode* <span class="hljs-title">addTwoNumbers</span><span class="hljs-params">(ListNode* l1, ListNode* l2)</span> </span>&#123;<br>        stack&lt;<span class="hljs-type">int</span>&gt; s1, s2;<br>        <span class="hljs-keyword">while</span> (l1) &#123;<br>            s1.<span class="hljs-built_in">push</span>(l1 -&gt; val);<br>            l1 = l1 -&gt; next;<br>        &#125;<br>        <span class="hljs-keyword">while</span> (l2) &#123;<br>            s2.<span class="hljs-built_in">push</span>(l2 -&gt; val);<br>            l2 = l2 -&gt; next;<br>        &#125;<br>        <span class="hljs-type">int</span> carry = <span class="hljs-number">0</span>;<br>        ListNode* ans = <span class="hljs-literal">nullptr</span>;<br>        <span class="hljs-keyword">while</span> (!s1.<span class="hljs-built_in">empty</span>() <span class="hljs-keyword">or</span> !s2.<span class="hljs-built_in">empty</span>() <span class="hljs-keyword">or</span> carry != <span class="hljs-number">0</span>) &#123;<br>            <span class="hljs-type">int</span> a = s1.<span class="hljs-built_in">empty</span>() ? <span class="hljs-number">0</span> : s1.<span class="hljs-built_in">top</span>();<br>            <span class="hljs-type">int</span> b = s2.<span class="hljs-built_in">empty</span>() ? <span class="hljs-number">0</span> : s2.<span class="hljs-built_in">top</span>();<br>            <span class="hljs-keyword">if</span> (!s1.<span class="hljs-built_in">empty</span>()) s1.<span class="hljs-built_in">pop</span>();<br>            <span class="hljs-keyword">if</span> (!s2.<span class="hljs-built_in">empty</span>()) s2.<span class="hljs-built_in">pop</span>();<br>            <span class="hljs-type">int</span> cur = a + b + carry;<br>            carry = cur / <span class="hljs-number">10</span>;<br>            cur %= <span class="hljs-number">10</span>;<br>            <span class="hljs-keyword">auto</span> curnode = <span class="hljs-keyword">new</span> <span class="hljs-built_in">ListNode</span>(cur);<br>            curnode -&gt; next = ans;<br>            ans = curnode;<br>        &#125;<br>        <span class="hljs-keyword">return</span> ans;<br>    &#125;<br>&#125;;<br></code></pre></td></tr></table></figure><p>PHP</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-comment">// 时间复杂度: O(max(m,n))</span><br><span class="hljs-comment">// 空间复杂度: O(m+n)</span><br><span class="hljs-comment">// 本代码来自 https://leetcode.cn/problems/add-two-numbers-ii/solution/phpjian-ji-jie-fa-by-mek1986/</span><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Definition for a singly-linked list.</span><br><span class="hljs-comment"> * class ListNode &#123;</span><br><span class="hljs-comment"> *     public $val = 0;</span><br><span class="hljs-comment"> *     public $next = null;</span><br><span class="hljs-comment"> *     function __construct($val) &#123; $this-&gt;val = $val; &#125;</span><br><span class="hljs-comment"> * &#125;</span><br><span class="hljs-comment"> */</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Solution</span> </span>&#123;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> ListNode $l1</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> ListNode $l2</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span> ListNode</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">addTwoNumbers</span>(<span class="hljs-params"><span class="hljs-variable">$l1</span>, <span class="hljs-variable">$l2</span></span>) </span>&#123;<br>        <span class="hljs-variable">$num1</span>=<span class="hljs-string">&#x27;&#x27;</span>;<span class="hljs-comment">//链表1表示的数字</span><br>        <span class="hljs-variable">$num2</span>=<span class="hljs-string">&#x27;&#x27;</span>;<span class="hljs-comment">//链表2表示的数字</span><br>        <span class="hljs-keyword">while</span>(<span class="hljs-variable">$l1</span>!=<span class="hljs-literal">null</span>)&#123;<br>            <span class="hljs-variable">$num1</span>.=<span class="hljs-variable">$l1</span>-&gt;val;<br>            <span class="hljs-variable">$l1</span>=<span class="hljs-variable">$l1</span>-&gt;next;<br>        &#125;<br><br>        <span class="hljs-keyword">while</span>(<span class="hljs-variable">$l2</span>!=<span class="hljs-literal">null</span>)&#123;<br>            <span class="hljs-variable">$num2</span>.=<span class="hljs-variable">$l2</span>-&gt;val;<br>            <span class="hljs-variable">$l2</span>=<span class="hljs-variable">$l2</span>-&gt;next;<br>        &#125;<br><br>        <span class="hljs-variable">$sum</span>=<span class="hljs-title function_ invoke__">bcadd</span>(<span class="hljs-variable">$num1</span>,<span class="hljs-variable">$num2</span>,<span class="hljs-number">0</span>);<span class="hljs-comment">//求和,得到结果字符串</span><br>        <span class="hljs-variable">$newList</span>=<span class="hljs-literal">null</span>;<br>        <span class="hljs-variable">$len</span>=<span class="hljs-title function_ invoke__">strlen</span>(<span class="hljs-variable">$sum</span>);        <br>        <span class="hljs-keyword">for</span>(<span class="hljs-variable">$i</span>=<span class="hljs-number">0</span>;<span class="hljs-variable">$i</span>&lt;<span class="hljs-variable">$len</span>;<span class="hljs-variable">$i</span>++)&#123;<span class="hljs-comment">//循环结果字符串，就可以构建出链表</span><br>            <span class="hljs-keyword">if</span>(<span class="hljs-variable">$newList</span>==<span class="hljs-literal">null</span>)&#123;<br>                <span class="hljs-variable">$newList</span>=<span class="hljs-keyword">new</span> <span class="hljs-title class_">ListNode</span>(<span class="hljs-variable">$sum</span>[<span class="hljs-variable">$i</span>]);<br>                <span class="hljs-variable">$head</span>=<span class="hljs-variable">$newList</span>;<br>            &#125;<span class="hljs-keyword">else</span>&#123;<br>                <span class="hljs-variable">$newList</span>-&gt;next=<span class="hljs-keyword">new</span> <span class="hljs-title class_">ListNode</span>(<span class="hljs-variable">$sum</span>[<span class="hljs-variable">$i</span>]);<br>                <span class="hljs-variable">$newList</span>=<span class="hljs-variable">$newList</span>-&gt;next;<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">return</span> <span class="hljs-variable">$head</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="感谢收看">感谢收看</h2><p><img src="https://s11.ax1x.com/2023/07/03/pCs9H1g.png" alt=""></p>]]></content>
    
    
    <categories>
      
      <category>leetcode</category>
      
    </categories>
    
    
    <tags>
      
      <tag>leetcode</tag>
      
      <tag>code</tag>
      
      <tag>栈</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Leetcode 20.有效的括号</title>
    <link href="/2023/06/29/leetcode20/"/>
    <url>/2023/06/29/leetcode20/</url>
    
    <content type="html"><![CDATA[<h2 id="题目详情">题目详情</h2><p>原题链接<a href="https://leetcode.cn/problems/valid-parentheses/">点我</a><br>给定一个只包括<code>'('，')'，'&#123;'，'&#125;'，'['，']'</code>的字符串 s ，判断字符串是否有效。</p><span id="more"></span><p>有效字符串需满足：</p><p>左括号必须用相同类型的右括号闭合。<br>左括号必须以正确的顺序闭合。<br>每个右括号都有一个对应的相同类型的左括号。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash">输入：s = <span class="hljs-string">&quot;()&quot;</span><br>输出：<span class="hljs-literal">true</span><br><br>输入：s = <span class="hljs-string">&quot;()[]&#123;&#125;&quot;</span><br>输出：<span class="hljs-literal">true</span><br><br>输入：s = <span class="hljs-string">&quot;(]&quot;</span><br>输出：<span class="hljs-literal">false</span><br></code></pre></td></tr></table></figure><h2 id="解题思路">解题思路</h2><p>这里要用到栈的性质了</p><p>现在我们有一个数组</p><p><img src="https://s11.ax1x.com/2023/06/29/pCwJpef.png" alt=""></p><p>但栈的性质是先进来的先出</p><p>有两种操作 进栈和出栈</p><p>也就是 我添加了数字<code>1,2,3</code> 我出栈是3 刚才进来的被踢出去了 所以这个也能拿来检验有效的括号</p><p>现在我们来模拟一下</p><p><img src="https://s11.ax1x.com/2023/06/29/pCwJQkF.png" alt=""></p><p>添加一个左(小)括号 进栈</p><p>轮到右小括号的时候 这个时候我们出栈</p><p>如果是右小括号对应的左小括号 则是一个合理的括号</p><p><img src="https://s11.ax1x.com/2023/06/29/pCwJR78.png" alt=""></p><p>再继续模拟一下<code>错误</code>情况</p><p>进来了一个左<code>小括号</code>和左<code>中括号</code></p><p><img src="https://s11.ax1x.com/2023/06/29/pCwJjNF.png" alt=""></p><p>这时候来一个右小括号<code>)</code></p><p>出栈</p><p>但发现是<code>[</code></p><p><img src="https://s11.ax1x.com/2023/06/29/pCwYS39.png" alt=""></p><p>所以这不是一个合理的括号</p><p>那接下来可以开始写代码了 先创建一个数组 和 字典 <code>(查询括号对应的另一半)</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">a = []<br>i = &#123;<span class="hljs-string">&quot;)&quot;</span>:<span class="hljs-string">&quot;(&quot;</span>,<span class="hljs-string">&quot;&#125;&quot;</span>:<span class="hljs-string">&quot;&#123;&quot;</span>,<span class="hljs-string">&quot;]&quot;</span>,<span class="hljs-string">&quot;[&quot;</span>&#125;<br></code></pre></td></tr></table></figure><p>开始遍历for循环 左括号进栈 右括号出栈 以及判断</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">for</span> q <span class="hljs-keyword">in</span> s:<br>    <span class="hljs-keyword">if</span> q <span class="hljs-keyword">in</span> [<span class="hljs-string">&quot;(&quot;</span>,<span class="hljs-string">&quot;[&quot;</span>,<span class="hljs-string">&quot;&#123;&quot;</span>]: <span class="hljs-comment"># 左括号进栈</span><br>        a.append(q)<br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-keyword">if</span> a.pop() != i[q]: <span class="hljs-comment"># 如果出栈了不是对应的另一半</span><br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">False</span><br><span class="hljs-keyword">return</span> <span class="hljs-literal">True</span> <span class="hljs-comment"># 否则返回True</span><br></code></pre></td></tr></table></figure><p><img src="https://s11.ax1x.com/2023/06/29/pCwYngA.png" alt=""></p><p>但题目数据范围还有1 也就意味着有 一个字符的测试示例</p><p>一个字符是构不成括号 因此要特殊判断</p><p>最终代码为</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span>:<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">isValid</span>(<span class="hljs-params">self, s: <span class="hljs-built_in">str</span></span>) -&gt; <span class="hljs-built_in">bool</span>:<br>        <span class="hljs-comment">## 运用栈的性质</span><br><br>        res = [] <span class="hljs-comment"># 先创建一个栈 栈是先进来的先出</span><br><br>        i = &#123;<span class="hljs-string">&quot;)&quot;</span>:<span class="hljs-string">&quot;(&quot;</span>,<span class="hljs-string">&quot;]&quot;</span>:<span class="hljs-string">&quot;[&quot;</span>,<span class="hljs-string">&quot;&#125;&quot;</span>:<span class="hljs-string">&quot;&#123;&quot;</span>&#125; <span class="hljs-comment"># 对应的位置</span><br><br>        <span class="hljs-comment">## 思路</span><br>        <span class="hljs-comment">## 左括号进栈</span><br>        <span class="hljs-comment">## 当遇到右括号时出栈 如果不一致则返回false</span><br><br>        <span class="hljs-keyword">for</span> q <span class="hljs-keyword">in</span> s:<br>            <span class="hljs-keyword">if</span> q <span class="hljs-keyword">in</span> [<span class="hljs-string">&quot;(&quot;</span>,<span class="hljs-string">&quot;&#123;&quot;</span>,<span class="hljs-string">&quot;[&quot;</span>]: <span class="hljs-comment"># 如果是左括号 进栈</span><br>                res.append(q)<br>            <span class="hljs-keyword">else</span>:<br>                <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> res: <span class="hljs-comment"># 因为题目的数据包括一个字符 防止卡特别示例 例如 s = &quot;)&quot;</span><br>                    <span class="hljs-keyword">return</span> <span class="hljs-literal">False</span><br>                <span class="hljs-keyword">if</span> res.pop() != i[q]: <span class="hljs-comment"># 右括号出栈 并判断</span><br>                    <span class="hljs-keyword">return</span> <span class="hljs-literal">False</span><br>        <span class="hljs-keyword">if</span> res: <span class="hljs-comment"># 也是为了防止卡特别示例 s = &quot;[&quot;</span><br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">False</span> <br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">True</span> <br></code></pre></td></tr></table></figure><p>但这个特殊判断我写的太麻烦 所以优化一下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span>:<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">isValid</span>(<span class="hljs-params">self, s: <span class="hljs-built_in">str</span></span>) -&gt; <span class="hljs-built_in">bool</span>:<br>        <span class="hljs-comment">## 运用栈的性质</span><br><br>        res = [<span class="hljs-string">&quot;?&quot;</span>] <span class="hljs-comment"># 先创建一个栈 栈是先进来的先出</span><br><br>        i = &#123;<span class="hljs-string">&quot;)&quot;</span>:<span class="hljs-string">&quot;(&quot;</span>,<span class="hljs-string">&quot;]&quot;</span>:<span class="hljs-string">&quot;[&quot;</span>,<span class="hljs-string">&quot;&#125;&quot;</span>:<span class="hljs-string">&quot;&#123;&quot;</span>&#125; <span class="hljs-comment"># 对应的位置</span><br><br>        <span class="hljs-comment">## 思路</span><br>        <span class="hljs-comment">## 左括号进栈</span><br>        <span class="hljs-comment">## 当遇到右括号时出栈 如果不一致则返回false</span><br><br>        <span class="hljs-keyword">for</span> q <span class="hljs-keyword">in</span> s:<br>            <span class="hljs-keyword">if</span> q <span class="hljs-keyword">in</span> [<span class="hljs-string">&quot;(&quot;</span>,<span class="hljs-string">&quot;&#123;&quot;</span>,<span class="hljs-string">&quot;[&quot;</span>]: <span class="hljs-comment"># 如果是左括号 进栈</span><br>                res.append(q)<br>            <span class="hljs-keyword">else</span>:<br>                <span class="hljs-keyword">if</span> res.pop() != i[q]: <span class="hljs-comment"># 右括号出栈 并判断</span><br>                    <span class="hljs-keyword">return</span> <span class="hljs-literal">False</span><br>        <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(res) != <span class="hljs-number">1</span>: <span class="hljs-keyword">return</span> <span class="hljs-literal">False</span><br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">True</span> <br></code></pre></td></tr></table></figure><h2 id="示例代码">示例代码</h2><p>Python3</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">## 时间复杂度: O(n)</span><br><span class="hljs-comment">## 空间复杂度: O(n)</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span>:<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">isValid</span>(<span class="hljs-params">self, s: <span class="hljs-built_in">str</span></span>) -&gt; <span class="hljs-built_in">bool</span>:<br>        <span class="hljs-comment">## 运用栈的性质</span><br><br>        res = [<span class="hljs-string">&quot;?&quot;</span>] <span class="hljs-comment"># 先创建一个栈 栈是先进来的先出</span><br><br>        i = &#123;<span class="hljs-string">&quot;)&quot;</span>:<span class="hljs-string">&quot;(&quot;</span>,<span class="hljs-string">&quot;]&quot;</span>:<span class="hljs-string">&quot;[&quot;</span>,<span class="hljs-string">&quot;&#125;&quot;</span>:<span class="hljs-string">&quot;&#123;&quot;</span>&#125; <span class="hljs-comment"># 对应的位置</span><br><br>        <span class="hljs-comment">## 思路</span><br>        <span class="hljs-comment">## 左括号进栈</span><br>        <span class="hljs-comment">## 当遇到右括号时出栈 如果不一致则返回false</span><br><br>        <span class="hljs-keyword">for</span> q <span class="hljs-keyword">in</span> s:<br>            <span class="hljs-keyword">if</span> q <span class="hljs-keyword">in</span> [<span class="hljs-string">&quot;(&quot;</span>,<span class="hljs-string">&quot;&#123;&quot;</span>,<span class="hljs-string">&quot;[&quot;</span>]: <span class="hljs-comment"># 如果是左括号 进栈</span><br>                res.append(q)<br>            <span class="hljs-keyword">else</span>:<br>                <span class="hljs-keyword">if</span> res.pop() != i[q]: <span class="hljs-comment"># 右括号出栈 并判断</span><br>                    <span class="hljs-keyword">return</span> <span class="hljs-literal">False</span><br>        <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(res) != <span class="hljs-number">1</span>: <span class="hljs-keyword">return</span> <span class="hljs-literal">False</span><br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">True</span> <br></code></pre></td></tr></table></figure><p>C++</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-comment">// 时间复杂度: O(n)</span><br><span class="hljs-comment">// 空间复杂度: O(n)</span><br><span class="hljs-comment">// 该代码来自官方题解</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span> &#123;<br><span class="hljs-keyword">public</span>:<br>    <span class="hljs-function"><span class="hljs-type">bool</span> <span class="hljs-title">isValid</span><span class="hljs-params">(string s)</span> </span>&#123;<br>        <span class="hljs-type">int</span> n = s.<span class="hljs-built_in">size</span>();<br>        <span class="hljs-keyword">if</span> (n % <span class="hljs-number">2</span> == <span class="hljs-number">1</span>) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>        &#125;<br><br>        unordered_map&lt;<span class="hljs-type">char</span>, <span class="hljs-type">char</span>&gt; pairs = &#123;<br>            &#123;<span class="hljs-string">&#x27;)&#x27;</span>, <span class="hljs-string">&#x27;(&#x27;</span>&#125;,<br>            &#123;<span class="hljs-string">&#x27;]&#x27;</span>, <span class="hljs-string">&#x27;[&#x27;</span>&#125;,<br>            &#123;<span class="hljs-string">&#x27;&#125;&#x27;</span>, <span class="hljs-string">&#x27;&#123;&#x27;</span>&#125;<br>        &#125;;<br>        stack&lt;<span class="hljs-type">char</span>&gt; stk;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">char</span> ch: s) &#123;<br>            <span class="hljs-keyword">if</span> (pairs.<span class="hljs-built_in">count</span>(ch)) &#123;<br>                <span class="hljs-keyword">if</span> (stk.<span class="hljs-built_in">empty</span>() || stk.<span class="hljs-built_in">top</span>() != pairs[ch]) &#123;<br>                    <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>                &#125;<br>                stk.<span class="hljs-built_in">pop</span>();<br>            &#125;<br>            <span class="hljs-keyword">else</span> &#123;<br>                stk.<span class="hljs-built_in">push</span>(ch);<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">return</span> stk.<span class="hljs-built_in">empty</span>();<br>    &#125;<br>&#125;;<br></code></pre></td></tr></table></figure><p>​PHP</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span> &#123;<br><br>    /**<br>     * @param String $s<br>     * @<span class="hljs-keyword">return</span> Boolean<br>     */<br>    function isValid($s) &#123;<br>        <span class="hljs-keyword">if</span> (strlen($s)==<span class="hljs-number">1</span>)&#123;<span class="hljs-keyword">return</span> <span class="hljs-literal">False</span>;&#125;<br>        $a = array(<span class="hljs-string">&quot;?&quot;</span>);<br><br>        $b = array();<br>        $b[<span class="hljs-string">&quot;)&quot;</span>] = <span class="hljs-string">&quot;(&quot;</span>;<br>        $b[<span class="hljs-string">&quot;&#125;&quot;</span>] = <span class="hljs-string">&quot;&#123;&quot;</span>;<br>        $b[<span class="hljs-string">&quot;]&quot;</span>] = <span class="hljs-string">&quot;[&quot;</span>;<br>        <br>        <span class="hljs-keyword">for</span> ($i = <span class="hljs-number">0</span>; $i &lt; strlen($s); $i++)&#123;<br>            <span class="hljs-keyword">if</span> ($s[$i] == <span class="hljs-string">&quot;&#123;&quot;</span> || $s[$i] == <span class="hljs-string">&quot;(&quot;</span> || $s[$i] == <span class="hljs-string">&quot;[&quot;</span>)&#123;<br>                array_push($a,$s[$i]);<br>            &#125;<span class="hljs-keyword">else</span>&#123;<br>                <span class="hljs-keyword">if</span>(array_pop($a)!= $b[$s[$i]])&#123;<br>                    <span class="hljs-keyword">return</span> <span class="hljs-literal">False</span>;<br>                &#125;<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">if</span> (count($a) == <span class="hljs-number">1</span>)&#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">True</span>;<br>        &#125;<span class="hljs-keyword">else</span>&#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">False</span>;<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="感谢观看">感谢观看</h2><p><img src="https://s11.ax1x.com/2023/06/29/pCwtdRH.png" alt=""></p>]]></content>
    
    
    <categories>
      
      <category>leetcode</category>
      
    </categories>
    
    
    <tags>
      
      <tag>leetcode</tag>
      
      <tag>code</tag>
      
      <tag>栈</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>nonebot2 手把手教程 一配置环境</title>
    <link href="/2023/06/29/nonebot_teach_2/"/>
    <url>/2023/06/29/nonebot_teach_2/</url>
    
    <content type="html"><![CDATA[<h2 id="前言">前言</h2><p>本文开始介绍如何配置编程环境 关于<code>gocq</code>和<code>python</code>安装</p><span id="more"></span><p>可以看<a href="https://blog.bingyue.top/2023/06/17/nonebot_teach_1/">第零篇</a></p><h2 id="安装Vscode">安装Vscode</h2><p>打开官网<a href="https://code.visualstudio.com/">Vsocode</a></p><p>点击下面的download按钮</p><p><img src="https://s11.ax1x.com/2023/06/29/pCwMK8x.png" alt="dj"></p><p>等待下载完成…</p><p>双击打开安装包 按照提示进行下一步的安装</p><p>大概页面如下</p><p><img src="https://s11.ax1x.com/2023/06/29/pCwM3rD.png" alt=""></p><h2 id="在vscode里配置python">在vscode里配置python</h2><p>点击正方体的按钮 单击<code>搜索框</code>输入<code>python</code>进行安装</p><p><img src="https://s11.ax1x.com/2023/06/29/pCwM1KO.png" alt=""></p><p>tips:<code>我这里已经安装了 这里应该要点install按钮</code></p><p>在你的桌面上创建一个py文件 用vscode打开试一下</p><p>如果有自动补全 说明已经成功了</p><p><img src="https://s11.ax1x.com/2023/06/29/pCwMUPI.png" alt=""></p><p>这个时候可以挂起来vscode了</p><h2 id="下载Nonebot2">下载Nonebot2</h2><p>点你左上角的Windows 右键打开powershell<code>admin</code>的</p><p>按如下输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">pip config <span class="hljs-built_in">set</span> global.index-url https://pypi.tuna.tsinghua.edu.cn/simple<br>pip install nb-cli<br>pip install nonebot2<br>nb driver install nonebot2[fastapi]<br>nb adapter install nonebot-adapter-onebot<br></code></pre></td></tr></table></figure><p>恭喜你 nb已经安装到你电脑上了</p><p>如果在下方安装出错 可以联系作者</p><h2 id="创建Nonebot2项目">创建Nonebot2项目</h2><p>这个时候切记不要关闭你的<code>powershell</code></p><p>输入一句<code>nb</code>然后回车</p><p>选择创建项目</p><p><img src="https://s11.ax1x.com/2023/03/26/pprdnQH.jpg" alt="创建项目"></p><p>回车</p><p><strong>上下选择 回车确认</strong> 选择<code>开发者</code></p><p><img src="https://s11.ax1x.com/2023/03/26/pprdlwt.jpg" alt="选择开发者"></p><p>输入名字，回车</p><p><img src="https://s11.ax1x.com/2023/03/26/pprdGY8.jpg" alt="输入名字，回车"></p><p><strong>注意：上下切换选项目 空格选择 回车确认</strong> 一定要记住</p><p>选择<code>fastapi</code></p><p><img src="https://s11.ax1x.com/2023/03/26/pprd0wq.jpg" alt="fastapi"></p><p>选择<code>onebot v11</code>协议</p><p><img src="https://s11.ax1x.com/2023/03/26/pprdcpF.jpg" alt="onebot"></p><p>选择在<code>scr</code>目录下</p><p><img src="https://s11.ax1x.com/2023/03/26/pprdRX9.jpg" alt="scr"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">立即安装依赖 输入y<br>创建虚拟环境 输入n<br></code></pre></td></tr></table></figure><p>接下来 选择echo插件</p><p><img src="https://s11.ax1x.com/2023/03/26/pprdTfO.jpg" alt="echo"></p><p>回车</p><p>大功告成</p><h2 id="运行Nonebot2">运行Nonebot2</h2><p>先打开你的gocq <s>此处省略</s></p><p>vscode点右上角的终端</p><p><img src="https://s11.ax1x.com/2023/06/29/pCwMLJ1.png" alt=""></p><p>请确保是在该目录下的文件夹</p><p>那如何进入文件夹和退出文件夹？</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">## 以下是shell的命令解释</span><br><span class="hljs-built_in">cd</span> xxx <span class="hljs-comment">## 代表进入xxx文件夹</span><br><span class="hljs-built_in">cd</span> ../ <span class="hljs-comment">## 代表退出当前文件夹</span><br><span class="hljs-built_in">ls</span> <span class="hljs-comment"># 列举当前文件夹的内容</span><br></code></pre></td></tr></table></figure><p>在终端输入<code>nb run</code></p><p>如果成功会出现</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs bash">06-29 00:33:29 [SUCCESS] nonebot | NoneBot is initializing...<br>06-29 00:33:29 [INFO] nonebot | Current Env: dev<br>06-29 00:33:29 [SUCCESS] nonebot | Succeeded to load plugin <span class="hljs-string">&quot;admin&quot;</span> from <span class="hljs-string">&quot;plugins.admin&quot;</span><br>06-29 00:33:29 [ERROR] config | 当前未配置用户名和密码,请到admin.py配置！！！<br>06-29 00:33:30 [SUCCESS] nonebot | Succeeded to load plugin <span class="hljs-string">&quot;group_1&quot;</span> from <span class="hljs-string">&quot;plugins.group_1&quot;</span><br>06-29 00:33:30 [SUCCESS] trun_on | 兽云nonebot2 插件启动成功<br>06-29 00:33:30 [SUCCESS] trun_on | 当前版本为0.1 正式版<br>06-29 00:33:30 [SUCCESS] trun_on | 如有问题可以来https://github.com/bingqiu456/shouyun 来反馈<br>06-29 00:33:30 [WARNING] trun_on | 正在检查更新，请勿退出<br>06-29 00:33:31 [WARNING] trun_on | 检测到新版本:1.1<br>更新日志<br>2023-06-17<br>本次更新内容较多，可能比较费时间<br>1.新增心跳开关（config.py）<br>2.修复了群开关无反应<br>3.修复了登录验证码bug<br>06-29 00:33:31 [SUCCESS] trun_on |  ╰(*°▽*)╯ 祝你使用愉快<br>06-29 00:33:31 [SUCCESS] nonebot | Succeeded to load plugin <span class="hljs-string">&quot;trun_on&quot;</span> from <span class="hljs-string">&quot;plugins.trun_on&quot;</span><br>06-29 00:33:31 [SUCCESS] nonebot | Succeeded to load plugin <span class="hljs-string">&quot;yiyan&quot;</span> from <span class="hljs-string">&quot;plugins.yiyan&quot;</span><br>06-29 00:33:31 [SUCCESS] nonebot | Succeeded to load plugin <span class="hljs-string">&quot;login_token&quot;</span> from <span class="hljs-string">&quot;plugins.login_token&quot;</span><br>06-29 00:33:31 [SUCCESS] nonebot | Succeeded to load plugin <span class="hljs-string">&quot;image_random&quot;</span> from <span class="hljs-string">&quot;plugins.image_random&quot;</span><br>06-29 00:33:31 [SUCCESS] nonebot | Succeeded to load plugin <span class="hljs-string">&quot;reboot&quot;</span> from <span class="hljs-string">&quot;plugins.reboot&quot;</span><br>06-29 00:33:31 [SUCCESS] nonebot | Succeeded to load plugin <span class="hljs-string">&quot;logo_acct&quot;</span> from <span class="hljs-string">&quot;plugins.logo_acct&quot;</span><br>06-29 00:33:31 [SUCCESS] nonebot | Succeeded to load plugin <span class="hljs-string">&quot;image_download&quot;</span> from <span class="hljs-string">&quot;plugins.image_download&quot;</span><br>06-29 00:33:31 [SUCCESS] nonebot | Succeeded to load plugin <span class="hljs-string">&quot;image_check&quot;</span> from <span class="hljs-string">&quot;plugins.image_check&quot;</span><br>06-29 00:33:31 [SUCCESS] nonebot | Succeeded to load plugin <span class="hljs-string">&quot;about&quot;</span> from <span class="hljs-string">&quot;plugins.about&quot;</span><br>06-29 00:33:31 [SUCCESS] nonebot | Succeeded to load plugin <span class="hljs-string">&quot;config&quot;</span> from <span class="hljs-string">&quot;plugins.config&quot;</span><br>06-29 00:33:31 [SUCCESS] nonebot | Succeeded to load plugin <span class="hljs-string">&quot;accot&quot;</span> from <span class="hljs-string">&quot;plugins.accot&quot;</span><br>06-29 00:33:31 [SUCCESS] nonebot | Succeeded to load plugin <span class="hljs-string">&quot;login&quot;</span> from <span class="hljs-string">&quot;plugins.login&quot;</span><br>06-29 00:33:31 [SUCCESS] nonebot | Succeeded to load plugin <span class="hljs-string">&quot;image_updata&quot;</span> from <span class="hljs-string">&quot;plugins.image_updata&quot;</span><br>06-29 00:33:31 [SUCCESS] nonebot | Succeeded to load plugin <span class="hljs-string">&quot;lingp&quot;</span> from <span class="hljs-string">&quot;plugins.lingp&quot;</span><br>06-29 00:33:32 [SUCCESS] xint | 心跳包未开启<br>06-29 00:33:32 [SUCCESS] nonebot | Succeeded to load plugin <span class="hljs-string">&quot;xint&quot;</span> from <span class="hljs-string">&quot;plugins.xint&quot;</span><br>06-29 00:33:32 [SUCCESS] nonebot | Succeeded to load plugin <span class="hljs-string">&quot;menu&quot;</span> from <span class="hljs-string">&quot;plugins.menu&quot;</span><br>06-29 00:33:32 [SUCCESS] nonebot | Running NoneBot...<br>06-29 00:33:33 [INFO] uvicorn | Started server process [2976]<br>06-29 00:33:33 [INFO] uvicorn | Waiting <span class="hljs-keyword">for</span> application startup.<br>06-29 00:33:33 [INFO] nonebot_plugin_apscheduler | Scheduler Started<br>06-29 00:33:33 [INFO] uvicorn | Application startup complete.<br>06-29 00:33:33 [INFO] uvicorn | Uvicorn running on http://0.0.0.0:20000 (Press CTRL+C to quit)<br></code></pre></td></tr></table></figure><p>出现<code>06-29 00:33:33 [INFO] uvicorn | Uvicorn running on http://0.0.0.0:20000 (Press CTRL+C to quit)</code> 代表nb启动成功</p><h2 id="ModuleNotFoundError-No-module-named-‘nonebot’">ModuleNotFoundError: No module named ‘nonebot’</h2><p>这说明你的nb2没有安装成功</p><h2 id="通常每个套-接字地址-协议-网络地址-端口-只允许使用一次。">通常每个套 接字地址(协议/网络地址/端口)只允许使用一次。</h2><p>这说明你的端口发生冲突 检查你是不是重复启动nb 或者有其他项目占用了该端口号</p><h2 id="后记">后记</h2><p>下一期 我们来编写一个 <code>随机人生</code>吧</p>]]></content>
    
    
    <categories>
      
      <category>qq机器人</category>
      
      <category>nonebot教程</category>
      
    </categories>
    
    
    <tags>
      
      <tag>bot</tag>
      
      <tag>qq机器人</tag>
      
      <tag>code</tag>
      
      <tag>编程</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>nonebot2 手把手教程 前言</title>
    <link href="/2023/06/17/nonebot_teach_1/"/>
    <url>/2023/06/17/nonebot_teach_1/</url>
    
    <content type="html"><![CDATA[<h2 id="前言">前言</h2><p>今天是六月十七号，在未来会迎来暑假，所以本人在暑假的时候会开一个专栏，去专门讲解<code>nonebot2的插件编写</code></p><p>将在6月27号开始连载第一篇 专门为python0基础的小白提供环境</p><span id="more"></span><p>先学会配置go-cqhttp and python</p><p><a href="https://blog.bingyue.top/2022/10/03/cq_1/">go-cqhttp教程</a></p><p><a href="https://blog.bingyue.top/2022/10/03/python_start/">python教程</a></p><h2 id="请教问题">请教问题</h2><p>当然 如果你在配置过程中出现了问题 你可以寻求身边的朋友</p><p>以下是三种联系方式</p><p>1.去博客页面加我qq</p><p>2.去<code>baidu</code>或者<code>google</code></p><p>3.去问身边学py的</p><h2 id="预告">预告</h2><p>第一篇 配置vscode和py开发环境</p>]]></content>
    
    
    <categories>
      
      <category>qq机器人</category>
      
      <category>nonebot教程</category>
      
    </categories>
    
    
    <tags>
      
      <tag>bot</tag>
      
      <tag>qq机器人</tag>
      
      <tag>code</tag>
      
      <tag>编程</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>兽云1.0 nonebot2插件发布</title>
    <link href="/2023/05/13/shouyun%20zs/"/>
    <url>/2023/05/13/shouyun%20zs/</url>
    
    <content type="html"><![CDATA[<h2 id="前言">前言</h2><p>今天，我们发布了兽云nonebot2插件，本插件已同步到<a href="https://v2.nonebot.dev">nonebot官方</a></p><span id="more"></span><p>让我们来看看吧</p><h2 id=""></h2><hr><p align="center">  <a href="https://v2.nonebot.dev/"><img src="https://s11.ax1x.com/2023/05/13/p969OMV.png" alt="nonebot"></a></p><div align="center"></div><center><h2>🍁Nonebot-Bot-shouyun🍁<h2><center><center>⭐轻量 高级 高效率⭐<center><center>⭐支持各种各样的功能⭐<center><center>⭐目前版本v1.0正式版⭐<center><center>⭐有问题请发iss⭐<center><h2 id="入门使用">入门使用</h2><p>先在你的浏览器打开<a href="https://github.com/bingqiu456/shouyun/releases">这个页面</a></p><p>下载最新的<code>v1.0</code>版本</p><p>解压</p><p><img src="https://s11.ax1x.com/2023/05/13/p96Cuid.png" alt=""></p><p>打开plugins文件夹</p><p><img src="https://s11.ax1x.com/2023/05/13/p96CKJA.png" alt=""></p><p>编辑<code>admin.py</code></p><p>输入你的主账号 用户名密码 以及审核群等配置…</p><p><img src="https://s11.ax1x.com/2023/05/13/p96CQzt.png" alt=""></p><p>完事之后保存退出</p><p>这个时候返回到主文件</p><h3 id="Windows">Windows</h3><p>windows用户请直接点击<code>点我更新.cmd</code> 等待更新完毕</p><p>再点击<code>点我启动.cmd</code></p><p><code>注：目前重启机器功能仅支持Windows</code></p><h3 id="Linux">Linux</h3><p>返回主文件夹 <code>在当前目录</code>打开你的终端</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">python updata.py<br>python3 updata.py<br></code></pre></td></tr></table></figure><p>先更新 再启动</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">nb run<br></code></pre></td></tr></table></figure><h2 id="目前已支持的功能">目前已支持的功能</h2><ul><li>账号功能,功能操作,令牌功能,系统设置 🌙</li><li>账号登录,账号注册,获取验证码,获取(上传)头像,查询资料+id 🌙🌙</li><li>随机图片,图片下载,图片上传 🌙🌙🌙</li><li>启动停用令牌,启动key模式,获取修改登录令牌,令牌列表,申请令牌,修改令牌权限 🌙🌙🌙🌙</li><li>关于作者,检查更新,心跳包,重启机器人 🌙🌙🌙🌙🌙</li></ul><h2 id="未来适配">未来适配</h2><p>切换账号 令牌模式切换 ❌</p><h2 id="开源声明">开源声明</h2><p>如果你的项目使用我的代码 请注明本项目出处 可用于交流学习 请勿用于贩卖 同时祝你使用愉快</p><h2 id="最后">最后</h2><p>QQ:35***19417</p><p>github:bingqiu456</p>]]></content>
    
    
    <categories>
      
      <category>qq机器人</category>
      
    </categories>
    
    
    <tags>
      
      <tag>bot</tag>
      
      <tag>qq机器人</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>随身wifi玩机篇2 刷机</title>
    <link href="/2023/04/28/wifi_td_2/"/>
    <url>/2023/04/28/wifi_td_2/</url>
    
    <content type="html"><![CDATA[<h2 id="前言">前言</h2><p>本期是随身wifi的玩机篇2 是刷机+救砖 备份篇可以看<a href="https://blog.bingyue.top/2023/04/22/wifi_td_1/">这里</a></p><p>总体思路</p><span id="more"></span><ul><li>确定板子的型号</li><li>找到合适的型号的刷机包 <code>openwrt</code> <code>debian</code> <code>other</code></li><li>刷入</li><li>如果砖了请看后面的救砖部分</li></ul><h2 id="确认板子型号">确认板子型号</h2><p>把棒子烦过来 你会看到有两颗螺丝 这个时候我们打开螺丝 <code>稍微</code>有力就能<code>撬开</code>棒子</p><p><img src="https://s11.ax1x.com/2023/04/28/p91FEcT.png" alt=""></p><p>​博主的型号为<code>ufi003mb</code> 但后面发现可以刷 <code>ufi001b的包</code></p><p>目前支持的型号如下</p><ul><li>ufi003</li><li>ufi001c</li><li>uz801</li><li>ufi001b</li><li>sp970</li><li><code>ufi003mb==ufi001b</code></li></ul><h2 id="下载合适的线刷包-并刷入">下载合适的线刷包 并刷入</h2><p><a href="https://www.123pan.com/s/XwVDVv-WICn3">下载链接</a></p><p>我这里以ufi001b为示例</p><p><img src="https://s11.ax1x.com/2023/04/28/p91F4Cq.png" alt=""></p><p>打开之前下载好的adb工具</p><p>插入棒子 等待设备连接</p><p><img src="https://s11.ax1x.com/2023/04/28/p91A06f.png" alt=""></p><p>连接adb</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">reboot bootloader<br></code></pre></td></tr></table></figure><p>重启到fastboot</p><p>返回下载好的刷机包并解压</p><p><img src="https://s11.ax1x.com/2023/04/28/p91A2hn.png" alt=""></p><p>打开<code>flash.bat</code>一路回车</p><p><img src="https://s11.ax1x.com/2023/04/28/p91AhcV.png" alt=""></p><p><img src="https://s11.ax1x.com/2023/04/28/p91Af10.png" alt=""></p><p>然后你的棒子会重启 这个时候去连接棒子上的wifi</p><p>去你的电脑wifi列表 找到棒子的热点 一般名字为<code>handsommod</code></p><p><img src="https://s11.ax1x.com/2023/04/28/p91AoBF.png" alt=""></p><p>连接之后 打开浏览器 输入<strong>192.168.1.1</strong></p><p>直接点登录就行</p><p>这样就刷好了 自己玩吧</p><p><img src="https://s11.ax1x.com/2023/04/28/p91AvjK.png" alt=""></p><h2 id="救砖">救砖</h2><p>如果你一不小心刷成砖了 我们可以通过按按钮连接9008</p><p>按住该按钮 然后插入棒子 将会进入到9008</p><p><img src="https://s11.ax1x.com/2023/04/28/p91EVjf.png" alt=""></p><p>进入9008之后 就可以使用miko刷机了 选择你备份好的官方包</p><p><img src="https://s11.ax1x.com/2023/04/28/p91EYuT.png" alt=""></p><p><img src="https://s11.ax1x.com/2023/04/28/p91EaE4.png" alt=""></p><p>恭喜你 回到官方了</p><h2 id="后记">后记</h2><p>下一篇 在debian系统里安装面板</p><p>本次的刷机篇有点短 基本上不难刷 后面会带来如何挂nonebot2教程</p><p>感谢收看</p>]]></content>
    
    
    <categories>
      
      <category>随身wifi</category>
      
      <category>刷机</category>
      
    </categories>
    
    
    <tags>
      
      <tag>随身wifi</tag>
      
      <tag>9008</tag>
      
      <tag>openwrt</tag>
      
      <tag>debian</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>随身wifi玩机篇1 备份分区</title>
    <link href="/2023/04/22/wifi_td_1/"/>
    <url>/2023/04/22/wifi_td_1/</url>
    
    <content type="html"><![CDATA[<h2 id="大家好">大家好</h2><p>今天我要刷一个随身WiFi的东西 具体的话可以看这里 感谢<strong>酷安</strong>的各位大佬的整合</p><p>本文章已授权 会做一些修改</p><span id="more"></span><p><a href="https://www.coolapk.com/feed/45320764">原文</a></p><p><a href="https://www.123pan.com/s/Dpq0Vv-XAUHd.html">工具链接</a> 提取码<code>V23y</code></p><p>本篇主要讲的是备份分区</p><h2 id="安装驱动-9008工具">安装驱动 9008工具</h2><p>先从链接中下载9008驱动</p><p><img src="https://s11.ax1x.com/2023/04/21/p9EbUW4.png" alt=""></p><p>以及上面的 9008工具</p><p>然后解压</p><p>先安装驱动 由于我这里安装了 所以本步略过</p><p>打开你下载的<code>[9008全量备份工具]MiKo_Loder Pro</code> 的文件</p><p><img src="https://s11.ax1x.com/2023/04/22/p9VFkOf.png" alt=""></p><p>先打开miko.exe 安装好工具</p><p>在miko的安装目录把loader.exe 复制进去 下次用loader.exe打开</p><p><img src="https://s11.ax1x.com/2023/04/22/p9VFMpn.png" alt=""></p><h2 id="备份全分区">备份全分区</h2><p><a href="http://cdn.bingyue.top/adb.zip">下载adb工具包</a></p><p>然后在本地目录打开powershell</p><p>把棒子插到电脑usb接口</p><p>输入如下命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">adb reboot edl<br></code></pre></td></tr></table></figure><p>如果棒子变黑了 说明已经进入到了9008模式</p><p>现在打开我们刚才的miko工具</p><p>按下图操作</p><p><img src="https://s11.ax1x.com/2023/04/22/p9VF1XV.png" alt=""></p><p>双击下面的</p><p><img src="https://s11.ax1x.com/2023/04/22/p9VAUQ1.png" alt=""></p><p>选择一个路径 并把bin文件输入一个名字</p><p>点击<code>Read Full image</code>的按钮 开始备份</p><p>下面的进度条会动 如上图所示</p><p>备份好了重插一下棒子 将会重启</p><h2 id="提取boot和基带">提取boot和基带</h2><p>返回我们下载的<code>[9008分区操作工具]Qualcomm Premium Tool V2.4</code></p><p><img src="https://s11.ax1x.com/2023/04/22/p9VESkF.png" alt=""></p><p>注意音量</p><p><img src="https://s11.ax1x.com/2023/04/22/p9VEpY4.png" alt=""></p><p>点击<code>getkey</code> 然后保存key文件到你的路径中 打开工具<code>Qualcomm Premium Tool.exe</code></p><p>找到左上角的 help-&gt;activate 打开刚才保存的key 文件 完成激活</p><p>先把棒子进入9008模式 进入方法请看上一步</p><p>扫描分区</p><p><img src="https://s11.ax1x.com/2023/04/22/p9VEPp9.png" alt=""></p><p>如果不出意外这里会出现一个列表</p><p><strong>选择boot分区</strong> 和下面三个分区</p><p><img src="https://s11.ax1x.com/2023/04/22/p9VEF61.png" alt=""></p><p>注意 这里的中间灰色框要双击</p><p>等待备份…</p><p>这里我们的基带就备份好了</p><p>去到刚才备份的目录下 可以给boot加个img</p><p><img src="https://s11.ax1x.com/2023/04/22/p9VEufH.png" alt=""></p><h2 id="Root-远程控制">Root 远程控制</h2><p><img src="https://s11.ax1x.com/2023/04/22/p9VA2QI.png" alt=""></p><p>下载这两个文件</p><p>解压<code>ARDC和安卓apk</code> 打开ardc 然后插入棒子 将会自动连接</p><p><img src="https://s11.ax1x.com/2023/04/22/p9VEq4e.png" alt=""></p><p><img src="https://s11.ax1x.com/2023/04/22/p9VVnbV.png" alt=""></p><p><img src="https://pic1.imgdb.cn/item/64433b640d2dde577793b140.png" alt=""></p><p><img src="https://pic1.imgdb.cn/item/64433b7f0d2dde577793e445.png" alt=""></p><p>把boot.img拖入进去 在桌面打开magisk app</p><p><img src="https://pic1.imgdb.cn/item/64433c8a0d2dde577794f148.png" alt=""></p><p>选择下一步 修补文件选择download目录下的boot.img</p><p><img src="https://pic1.imgdb.cn/item/64433cb70d2dde5777951d63.png" alt=""></p><p><img src="https://pic1.imgdb.cn/item/64433cb70d2dde5777951d84.png" alt=""></p><p><img src="https://pic1.imgdb.cn/item/64433cb70d2dde5777951d9c.png" alt=""></p><p>选择标准的安卓方式 点击开始刷入 等待结束</p><p>打开es管理器</p><p>打开上面的&lt;&lt;</p><p><img src="https://pic1.imgdb.cn/item/64433d260d2dde5777958c49.png" alt=""></p><p>在es管理器里打开download 文件夹</p><p>找到magisk的boot 点击cmd按钮 输入如下</p><p>这里的xxx.img 是magisk修改好的boot的名字</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">adb pull /sdcard/Download/xxx.img ./<br></code></pre></td></tr></table></figure><p>这个时候去ardc的文件目录下 找到magisk.img</p><p>cmd再次输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">adb reboot bootloader<br>fastboot flash boot xxxx.img<br></code></pre></td></tr></table></figure><p>注意 xxxx.img 是magisk修改好的boot 你可以直接拖入cmd里</p><p>这样就刷好root了 重启一下</p><p>连接adb 输入如下命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">adb shell<br>su root<br>setprop sys.usb.config diag,adb <br></code></pre></td></tr></table></figure><p>接下来可以备份qcn了</p><h2 id="备份qcn">备份qcn</h2><p><img src="https://s11.ax1x.com/2023/04/22/p9VE8nP.png" alt=""></p><p>下载这个 工具<code>qpst</code></p><p>解压安装</p><p><img src="https://s11.ax1x.com/2023/04/22/p9VEW9J.png" alt=""></p><p>选择端口</p><p><img src="https://s11.ax1x.com/2023/04/22/p9VEhcR.png" alt=""></p><p>备份好了</p><h2 id="最后">最后</h2><p>本文使用的随身wifi型号是9600(uf6-7)</p><p>购买链接-&gt;<a href="https://m.tb.cn/h.UGUJZOr?tk=0rHcdO86bCf">1</a></p>]]></content>
    
    
    <categories>
      
      <category>随身wifi</category>
      
    </categories>
    
    
    <tags>
      
      <tag>随身wifi</tag>
      
      <tag>9008</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>兽云nonebot2配置教程</title>
    <link href="/2023/04/16/shouyun_strat/"/>
    <url>/2023/04/16/shouyun_strat/</url>
    
    <content type="html"><![CDATA[<p align="center">  <a href="https://v2.nonebot.dev/"><img src="https://v2.nonebot.dev/logo.png" width="200" height="200" alt="nonebot"></a></p><div align="center"></div><h3 id=""></h3><h2 id="Nonebot-shouyun">Nonebot shouyun</h2><p>本插件是由<code>bingyue</code>自己开发的</p><span id="more"></span><p>目前支持的功能不多 未来会更新的</p><h2 id="2023-04-16-更新">2023-04-16 更新</h2><p>1.随机头像</p><p>2.获取头像</p><p>3.随机图片</p><p><s>令牌功能未上线</s></p><h2 id="2023-04-28更新">2023-04-28更新</h2><p>1.新增心跳包功能 时间请到<code>admin.py</code> 设置</p><p>2.新增图片下载功能</p><h2 id="使用教程">使用教程</h2><h2 id="Windows">Windows</h2><p>打开你的浏览器 直接点击<a href="https://github.com/bingqiu456/shouyun/releases">该链接</a></p><p>下载最新版0.4beta</p><p>请确保你电脑上有nonebot环境 没有环境可以去我<a href="https://blog.bingyue.top/2023/03/26/nonebot2_cr/">博客</a></p><p>下载之后 直接解压</p><p><img src="https://s11.ax1x.com/2023/04/15/p9Svz59.png" alt=""></p><p>先更新一下</p><p><img src="https://s11.ax1x.com/2023/04/15/p9SxMxP.png" alt=""></p><p>等待完成</p><p>完成之后关闭cmd</p><p>返回主页面 打开<code>点我启动.cmd</code></p><p><img src="https://s11.ax1x.com/2023/04/15/p9Sx3qS.png" alt=""></p><p>如果有更新请及时更新</p><h2 id="Linux">Linux</h2><p>请确保你有python+nonebot</p><p>解压之后 在该文件夹打开终端</p><p>输入如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">python3 updata.py<br><span class="hljs-comment"># 上面那个如果无效就试试下面的</span><br>python updata.py<br></code></pre></td></tr></table></figure><p>更新好之后</p><p>输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">nb run<br></code></pre></td></tr></table></figure><p>然后回车 启动</p><h2 id="配置">配置</h2><p>先打开这个文件</p><p><img src="https://s11.ax1x.com/2023/04/15/p9SxsZF.png" alt=""></p><p>然后按我说的去改</p><p><img src="https://s11.ax1x.com/2023/04/15/p9Sx4sK.png" alt=""></p><p>保存</p><p>再次回到主页面</p><p>打开plugins文件夹</p><p><img src="https://s11.ax1x.com/2023/04/15/p9SxoZD.png" alt=""></p><p><img src="https://s11.ax1x.com/2023/05/02/p9GG5mF.png" alt=""></p><p><img src="https://s11.ax1x.com/2023/05/02/p9GGhOU.png" alt=""></p><p>输入你的用户名和密码和心跳包</p><p>然后保存</p><h2 id="功能">功能</h2><p>开机后 对机器人回复<code>兽云菜单</code>二字即可！</p><p>兽云菜单</p><ul><li>账号功能 (如登录账号 修改资料 上传头像 等…)</li><li>功能操作 (图片下载 图片列表获取 随机图片 等…)</li><li>令牌功能  (申请令牌 撤销令牌 等…)</li></ul><h2 id="最后">最后</h2><p>本文写于<code>2023-04-15</code> 最新更新于<code>2023-05-02 00:32:45</code></p><p>如有bug可以点击这里<a href="https://github.com/bingqiu456/shouyun/issues">反馈</a></p>]]></content>
    
    
    <categories>
      
      <category>qq机器人</category>
      
    </categories>
    
    
    <tags>
      
      <tag>bot</tag>
      
      <tag>qq机器人</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Leetcode 17.电话号码的字母组合</title>
    <link href="/2023/04/09/leetcode17/"/>
    <url>/2023/04/09/leetcode17/</url>
    
    <content type="html"><![CDATA[<h2 id="题目描述">题目描述</h2><h4 id="17-电话号码的字母组合"><a href="https://leetcode.cn/problems/letter-combinations-of-a-phone-number/">17. 电话号码的字母组合</a></h4><p>给定一个仅包含数字 2-9 的字符串，返回所有它能表示的字母组合。答案可以按 任意顺序 返回。</p><span id="more"></span><p>给出数字到字母的映射如下（与电话按键相同）。注意 1 不对应任何字母。</p><p><img src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2021/11/09/200px-telephone-keypad2svg.png" alt=""></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">输入：digits = <span class="hljs-string">&quot;23&quot;</span><br>输出：[<span class="hljs-string">&quot;ad&quot;</span>,<span class="hljs-string">&quot;ae&quot;</span>,<span class="hljs-string">&quot;af&quot;</span>,<span class="hljs-string">&quot;bd&quot;</span>,<span class="hljs-string">&quot;be&quot;</span>,<span class="hljs-string">&quot;bf&quot;</span>,<span class="hljs-string">&quot;cd&quot;</span>,<span class="hljs-string">&quot;ce&quot;</span>,<span class="hljs-string">&quot;cf&quot;</span>]<br><br>输入：digits = <span class="hljs-string">&quot;&quot;</span><br>输出：[]<br></code></pre></td></tr></table></figure><h2 id="解题思路">解题思路</h2><p>本题是一道非常经典的回溯题</p><p>如果你对回溯没有任何学习过 你可以按照我说的做</p><p>首先我们看第一个示例</p><p>是两个数字<code>2和3</code> 我们可以在上面图片找到对应字母<code>abc</code>和<code>def</code></p><p>这样的话我们可以写一个双for循环</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-string">&quot;abc&quot;</span>:<br>    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-string">&quot;def&quot;</span>:<br>        <span class="hljs-built_in">print</span>(i+j)<br></code></pre></td></tr></table></figure><p>那你可以说<code>直接手写一堆for不就行了？</code> <code>但是</code>当数字逐渐增多的时候 或者<code>不能知道下一个数是什么</code></p><p>可以转化成二叉树问题</p><p><img src="https://s11.ax1x.com/2023/04/08/ppHPyY8.png" alt=""></p><p>这个时候就可以用到我们前面学的<code>递归+深度优先搜索</code>了 通过递归可以实现多重循环</p><p>于是我们可以这样写</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">dfs</span>(<span class="hljs-params">i,ans</span>): <span class="hljs-comment"># i是当前的字母 ans是答案</span><br>    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> i:<br>        ans+=i <span class="hljs-comment"># 添加当前枚举的答案</span><br>        dfs(i+<span class="hljs-number">1</span>,ans) <span class="hljs-comment"># 继续深入 达到最底</span><br>        ans-=i <span class="hljs-comment"># 回溯 还原之前的答案 这样做是取下一个字母 如果不还原答案 会出现重复</span><br></code></pre></td></tr></table></figure><p>那么递归的边界是什么？</p><p><code>当前答案长度==字母串的长度时</code>这个时候就可以<code>return</code>了</p><p>总之回溯就是暴力算法 相当于试探 当试探完之后会撤销选择 继续下一次选择</p><h2 id="示例代码">示例代码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs python">num = [<span class="hljs-string">&quot;&quot;</span>,<span class="hljs-string">&quot;&quot;</span>,<span class="hljs-string">&quot;abc&quot;</span>,<span class="hljs-string">&quot;def&quot;</span>,<span class="hljs-string">&quot;ghi&quot;</span>,<span class="hljs-string">&quot;jkl&quot;</span>,<span class="hljs-string">&quot;mno&quot;</span>,<span class="hljs-string">&quot;pqrs&quot;</span>,<span class="hljs-string">&quot;tuv&quot;</span>,<span class="hljs-string">&quot;wxyz&quot;</span>]<br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span>:<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">letterCombinations</span>(<span class="hljs-params">self, digits: <span class="hljs-built_in">str</span></span>) -&gt; <span class="hljs-type">List</span>[<span class="hljs-built_in">str</span>]:<br>        <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> digits: <span class="hljs-keyword">return</span> []<br>        ans = []<br>        k = <span class="hljs-built_in">len</span>(digits)<br>        <span class="hljs-keyword">def</span> <span class="hljs-title function_">dfs</span>(<span class="hljs-params">i,temp</span>):<br>            <span class="hljs-keyword">if</span> k == <span class="hljs-built_in">len</span>(temp):<br>                ans.append(<span class="hljs-string">&quot;&quot;</span>.join(temp))<br>                <span class="hljs-keyword">return</span><br>            <span class="hljs-keyword">for</span> a <span class="hljs-keyword">in</span> num[<span class="hljs-built_in">int</span>(digits[i])]:<br>                temp.append(a)<br>                dfs(i+<span class="hljs-number">1</span>,temp)<br>                temp.pop()<br>        dfs(<span class="hljs-number">0</span>,[])<br>        <span class="hljs-keyword">return</span> ans<br></code></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-comment">// 转载的代码</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span> &#123;<br><span class="hljs-keyword">public</span>:<br>    string s;<br>    vector&lt;string&gt; result;<br>    <span class="hljs-comment">//设置一个字符串数组进行映射</span><br>    vector&lt;string&gt; letterMap = &#123;<span class="hljs-string">&quot;&quot;</span>, <span class="hljs-string">&quot;&quot;</span>, <span class="hljs-string">&quot;abc&quot;</span>, <span class="hljs-string">&quot;def&quot;</span>, <span class="hljs-string">&quot;ghi&quot;</span>, <span class="hljs-string">&quot;jkl&quot;</span>, <span class="hljs-string">&quot;mno&quot;</span>, <span class="hljs-string">&quot;pqrs&quot;</span>, <span class="hljs-string">&quot;tuv&quot;</span>, <span class="hljs-string">&quot;wxyz&quot;</span>&#125;;<br>    <span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">backtracking</span><span class="hljs-params">(string &amp;digits, <span class="hljs-type">int</span> index)</span> </span>&#123;<br>        <span class="hljs-keyword">if</span> (index == digits.<span class="hljs-built_in">size</span>()) &#123;<br>            result.<span class="hljs-built_in">emplace_back</span>(s);<br>            <span class="hljs-keyword">return</span>;<br>        &#125;<br>        <span class="hljs-type">int</span> digit = digits[index] - <span class="hljs-string">&#x27;0&#x27;</span>;<br>        string letters = letterMap[digit];<br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; letters.<span class="hljs-built_in">size</span>(); ++i) &#123;<br>            s.<span class="hljs-built_in">push_back</span>(letters[i]);<br>            <span class="hljs-built_in">backtracking</span>(digits, index + <span class="hljs-number">1</span>);<br>            s.<span class="hljs-built_in">pop_back</span>();<br>        &#125; <br>    &#125;<br>    <span class="hljs-function">vector&lt;string&gt; <span class="hljs-title">letterCombinations</span><span class="hljs-params">(string digits)</span> </span>&#123;<br>        <span class="hljs-keyword">if</span> (digits.<span class="hljs-built_in">size</span>() == <span class="hljs-number">0</span>) <span class="hljs-keyword">return</span> result;<br>        <span class="hljs-built_in">backtracking</span>(digits, <span class="hljs-number">0</span>);<br>        <span class="hljs-keyword">return</span> result;<br>    &#125;<br>&#125;;<br></code></pre></td></tr></table></figure><h2 id="感谢收看">感谢收看</h2><p><img src="https://s11.ax1x.com/2023/04/08/ppHitA0.png" alt=""></p>]]></content>
    
    
    <categories>
      
      <category>leetcode</category>
      
    </categories>
    
    
    <tags>
      
      <tag>leetcode</tag>
      
      <tag>code</tag>
      
      <tag>回溯</tag>
      
      <tag>深度优先搜索</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Leetcode 1014.最佳观光组合</title>
    <link href="/2023/04/08/leetcode1014/"/>
    <url>/2023/04/08/leetcode1014/</url>
    
    <content type="html"><![CDATA[<h2 id="题目描述">题目描述</h2><h4 id="1014-最佳观光组合"><a href="https://leetcode.cn/problems/best-sightseeing-pair/">1014. 最佳观光组合</a></h4><p>给你一个正整数数组 values，其中 values[i] 表示第 i 个观光景点的评分，并且两个景点 i 和 j 之间的 距离 为 j - i。</p><span id="more"></span><p>一对景点（i &lt; j）组成的观光组合的得分为 values[i] + values[j] + i - j ，也就是景点的评分之和 减去 它们两者之间的距离。</p><p>返回一对观光景点能取得的最高分。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">输入：values = [8,1,5,2,6]<br>输出：11<br>解释：i = 0, j = 2, values[i] + values[j] + i - j = 8 + 5 + 0 - 2 = 11<br></code></pre></td></tr></table></figure><h2 id="解题思路">解题思路</h2><p>本题和股票买卖1类似 具体可以参考股票1的代码</p><p><s>就是加了个ij上去而已</s></p><p>因此我们可以用两个变量去维护状态</p><p><code>一个更新目前的最大值</code></p><p><code>一个更新values[i]+i</code></p><h2 id="示例代码">示例代码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 时间复杂度：O(n)</span><br><span class="hljs-comment"># 空间复杂度: O(1)</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span>:<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">maxScoreSightseeingPair</span>(<span class="hljs-params">self, values: <span class="hljs-type">List</span>[<span class="hljs-built_in">int</span>]</span>) -&gt; <span class="hljs-built_in">int</span>:<br><br>        a,b = <span class="hljs-number">0</span>,values[<span class="hljs-number">0</span>]+<span class="hljs-number">0</span><br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>,<span class="hljs-built_in">len</span>(values)):<br>            a = <span class="hljs-built_in">max</span>(a,b+values[i]-i)<br>            b = <span class="hljs-built_in">max</span>(b,values[i]+i)<br>        <span class="hljs-keyword">return</span> a<br></code></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-comment">// 时间复杂度：O(n)</span><br><span class="hljs-comment">// 空间复杂度: O(1)</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span> &#123;<br><span class="hljs-keyword">public</span>:<br>    <span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">maxScoreSightseeingPair</span><span class="hljs-params">(vector&lt;<span class="hljs-type">int</span>&gt;&amp; values)</span> </span>&#123;<br>        <span class="hljs-type">int</span> i = <span class="hljs-number">0</span>, j = values[<span class="hljs-number">0</span>];<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> w = <span class="hljs-number">1</span>; w &lt; values.<span class="hljs-built_in">size</span>(); w++)&#123;<br>            i = <span class="hljs-built_in">max</span>(i,j+values[w]-w);<br>            j = <span class="hljs-built_in">max</span>(j,values[w]+w);<br>        &#125;<br>        <span class="hljs-keyword">return</span> i;<br>    &#125;<br>&#125;;<br></code></pre></td></tr></table></figure><p><img src="https://s11.ax1x.com/2023/04/08/pp7QoC9.png" alt=""></p>]]></content>
    
    
    <categories>
      
      <category>leetcode</category>
      
    </categories>
    
    
    <tags>
      
      <tag>leetcode</tag>
      
      <tag>code</tag>
      
      <tag>动态规划</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Leetcode 53.最大子数组和题解</title>
    <link href="/2023/04/05/leetcode53/"/>
    <url>/2023/04/05/leetcode53/</url>
    
    <content type="html"><![CDATA[<h2 id="题目描述">题目描述</h2><p>题目:<a href="https://leetcode.cn/problems/maximum-subarray/">最大子数组和</a></p><p>给你一个整数数组 <code>nums</code> ，请你找出一个具有最大和的连续子数组（子数组最少包含一个元素），返回其最大和。</p><span id="more"></span><p><strong>子数组</strong> 是数组中的一个连续部分。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">输入：nums = [-<span class="hljs-number">2</span>,<span class="hljs-number">1</span>,-<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,-<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">1</span>,-<span class="hljs-number">5</span>,<span class="hljs-number">4</span>]<br>输出：<span class="hljs-number">6</span><br>解释：连续子数组 [<span class="hljs-number">4</span>,-<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">1</span>] 的和最大，为 <span class="hljs-number">6</span> 。<br></code></pre></td></tr></table></figure><h2 id="解题思路">解题思路</h2><p>不如先从递归开始想</p><p><code>nums[i] = dfs(i-1)+nums[i],nums[i]</code></p><p>每个数字由dfs(i-1)+nums[i] 是把前面的数字加起来</p><p>nums[i] 是还原 代表前面的数字相加之后比原数字小</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span>:<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">maxSubArray</span>(<span class="hljs-params">self, nums: <span class="hljs-type">List</span>[<span class="hljs-built_in">int</span>]</span>) -&gt; <span class="hljs-built_in">int</span>:<br><br>        <span class="hljs-comment"># 每个数字可以选或者不选</span><br>        <span class="hljs-keyword">def</span> <span class="hljs-title function_">dfs</span>(<span class="hljs-params">i</span>):<br>            <span class="hljs-keyword">if</span> i &lt; <span class="hljs-number">0</span>: <span class="hljs-keyword">return</span> <span class="hljs-number">0</span><br>            nums[i] = <span class="hljs-built_in">max</span>(dfs(i-<span class="hljs-number">1</span>)+nums[i],nums[i])<br>            <span class="hljs-keyword">return</span> nums[i]<br>        dfs(<span class="hljs-built_in">len</span>(nums)-<span class="hljs-number">1</span>)<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">max</span>(nums)<br></code></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span> &#123;<br><span class="hljs-keyword">public</span>:<br><br>    <span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">dfs</span><span class="hljs-params">(vector&lt;<span class="hljs-type">int</span>&gt; &amp; nums, <span class="hljs-type">int</span> i)</span></span>&#123;<br>        <span class="hljs-keyword">if</span> (i &lt; <span class="hljs-number">0</span>)&#123;<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;&#125;<br>        nums[i] = <span class="hljs-built_in">max</span>(nums[i],nums[i]+<span class="hljs-built_in">dfs</span>(nums,i<span class="hljs-number">-1</span>));<br>        <span class="hljs-keyword">return</span> nums[i];<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">maxSubArray</span><span class="hljs-params">(vector&lt;<span class="hljs-type">int</span>&gt;&amp; nums)</span> </span>&#123;<br>        <span class="hljs-built_in">dfs</span>(nums,nums.<span class="hljs-built_in">size</span>()<span class="hljs-number">-1</span>);<br>        <span class="hljs-type">int</span> ans = <span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; nums.<span class="hljs-built_in">size</span>(); i++)&#123;<br>            ans = <span class="hljs-built_in">max</span>(ans,nums[i]);<br>        &#125;<br>        <span class="hljs-keyword">return</span> ans;<br>    &#125;<br>&#125;;<br></code></pre></td></tr></table></figure><p>但是你提交之后 <strong>用时有点长 内存消耗也很大 虽然能过</strong></p><p>现在来把他一比一翻译</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">dp[i] = max(dp[i-1]+nums[i],nums[i])<br>nums[i] = max(dfs(i-1)+nums[i],nums[i])<br><br>dp[0] = nums[0]<br><br></code></pre></td></tr></table></figure><p>翻译之后 就能改成迭代形式了 以下是迭代写法 <code>但还不是最优写法</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span>:<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">maxSubArray</span>(<span class="hljs-params">self, nums: <span class="hljs-type">List</span>[<span class="hljs-built_in">int</span>]</span>) -&gt; <span class="hljs-built_in">int</span>:<br>        dp = [<span class="hljs-number">0</span> <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(nums))]<br>        dp[<span class="hljs-number">0</span>] = nums[<span class="hljs-number">0</span>]<br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>,<span class="hljs-built_in">len</span>(nums)):<br>            dp[i] = <span class="hljs-built_in">max</span>(dp[i-<span class="hljs-number">1</span>]+nums[i],nums[i])<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">max</span>(dp)<br></code></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span> &#123;<br><span class="hljs-keyword">public</span>:<br>    <span class="hljs-type">int</span> dp[<span class="hljs-number">100001</span>];<br>    <span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">maxSubArray</span><span class="hljs-params">(vector&lt;<span class="hljs-type">int</span>&gt;&amp; nums)</span> </span>&#123;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; nums.<span class="hljs-built_in">size</span>(); i++)&#123;<br>            dp[i] = <span class="hljs-number">-10000</span>;<br>        &#125;<br>        dp[<span class="hljs-number">0</span>] = nums[<span class="hljs-number">0</span>];<br>        <span class="hljs-type">int</span> ans = <span class="hljs-built_in">max</span>(<span class="hljs-number">-10000</span>,dp[<span class="hljs-number">0</span>]);<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i = <span class="hljs-number">1</span>; i &lt; nums.<span class="hljs-built_in">size</span>(); i++)&#123;<br>            dp[i] = <span class="hljs-built_in">max</span>(dp[i<span class="hljs-number">-1</span>]+nums[i],nums[i]);<br>            ans = <span class="hljs-built_in">max</span>(ans,dp[i]);<br>        &#125;<br>        <span class="hljs-keyword">return</span> ans;<br>    &#125;<br>&#125;;<br></code></pre></td></tr></table></figure><p>现在已经是迭代了 那有没有什么办法能把空间优化到O(1)呢</p><p>我们只需要用变量维持dp[i-1]就行了</p><p>以下是最终代码</p><h2 id="示例代码">示例代码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 时间复杂度:O(n)</span><br><span class="hljs-comment"># 空间复杂度:O(1)</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span>:<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">maxSubArray</span>(<span class="hljs-params">self, nums: <span class="hljs-type">List</span>[<span class="hljs-built_in">int</span>]</span>) -&gt; <span class="hljs-built_in">int</span>:<br>        ans = <span class="hljs-built_in">max</span>(-<span class="hljs-number">10000</span>,nums[<span class="hljs-number">0</span>])<br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>,<span class="hljs-built_in">len</span>(nums)):<br>            nums[i] += <span class="hljs-built_in">max</span>(<span class="hljs-number">0</span>,nums[i-<span class="hljs-number">1</span>])<br>            ans = <span class="hljs-built_in">max</span>(ans,nums[i])<br>        <span class="hljs-keyword">return</span> ans<br></code></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-comment">// 时间复杂度:O(n)</span><br><span class="hljs-comment">// 空间复杂度:O(1)</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span> &#123;<br><span class="hljs-keyword">public</span>:<br>    <span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">maxSubArray</span><span class="hljs-params">(vector&lt;<span class="hljs-type">int</span>&gt;&amp; nums)</span> </span>&#123;<br>        <span class="hljs-type">int</span> ans = <span class="hljs-built_in">max</span>(<span class="hljs-number">-10000</span>,nums[<span class="hljs-number">0</span>]);<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i = <span class="hljs-number">1</span>; i &lt; nums.<span class="hljs-built_in">size</span>(); i++)&#123;<br>            nums[i] += <span class="hljs-built_in">max</span>(<span class="hljs-number">0</span>,nums[i<span class="hljs-number">-1</span>]);<br>            ans = <span class="hljs-built_in">max</span>(ans,nums[i]);<br>        &#125;<br>        <span class="hljs-keyword">return</span> ans;<br>    &#125;<br>&#125;;<br></code></pre></td></tr></table></figure><p><img src="https://s11.ax1x.com/2023/04/05/pp5071e.png" alt=""></p>]]></content>
    
    
    <categories>
      
      <category>leetcode</category>
      
    </categories>
    
    
    <tags>
      
      <tag>leetcode</tag>
      
      <tag>code</tag>
      
      <tag>动态规划</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Leetcode 62.不同路径题解</title>
    <link href="/2023/04/04/leetcode62/"/>
    <url>/2023/04/04/leetcode62/</url>
    
    <content type="html"><![CDATA[<h2 id="题目描述">题目描述</h2><p>一个机器人位于一个 m x n 网格的左上角 （起始点在下图中标记为 “Start” ）。</p><p>机器人每次只能向下或者向右移动一步。机器人试图达到网格的右下角（在下图中标记为 “Finish” ）。</p><span id="more"></span><p>问总共有多少条不同的路径？</p><h3 id="输入示例">输入示例</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash">输入：m = 3, n = 2<br>输出：3<br>解释：<br>从左上角开始，总共有 3 条路径可以到达右下角。<br>1. 向右 -&gt; 向下 -&gt; 向下<br>2. 向下 -&gt; 向下 -&gt; 向右<br>3. 向下 -&gt; 向右 -&gt; 向下<br><br>输入：m = 7, n = 3<br>输出：28<br></code></pre></td></tr></table></figure><h2 id="解题思路">解题思路</h2><p>这仍然是一道dp题</p><p>先从递归开始</p><p>和上一题爬楼梯很类似也是方案总数 只不过这道题换成只能往走或者往下</p><p>因此 递归方程式为 <code>dfs(i,j) = dfs(i-1,j)+dfs(i,j-1)</code></p><p>现在来考虑边界条件 首先是 <code>i-1和j-1</code> <code>i &gt;= 1 j &gt;= 1</code></p><p>当走到底的时候要返回1 用于计数 如果找到了答案 则返回0</p><p>因此递归代码为</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span> &#123;<br><span class="hljs-keyword">public</span>:<br><br>    <span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">dfs</span><span class="hljs-params">(<span class="hljs-type">int</span> i, <span class="hljs-type">int</span> j)</span></span>&#123;<br>        <span class="hljs-keyword">if</span>(i==<span class="hljs-number">0</span> &amp;&amp; j == <span class="hljs-number">0</span>)&#123;<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;&#125;<br>        <span class="hljs-keyword">if</span>(i == <span class="hljs-number">0</span> || j == <span class="hljs-number">0</span>)&#123;<span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;&#125;<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">dfs</span>(i<span class="hljs-number">-1</span>,j) + <span class="hljs-built_in">dfs</span>(i,j<span class="hljs-number">-1</span>);<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">uniquePaths</span><span class="hljs-params">(<span class="hljs-type">int</span> m, <span class="hljs-type">int</span> n)</span> </span>&#123;<br>        <span class="hljs-keyword">if</span> (m== &amp;&amp; n == <span class="hljs-number">1</span>)&#123;<span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;&#125;<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">dfs</span>(m<span class="hljs-number">-1</span>,n<span class="hljs-number">-1</span>); <span class="hljs-comment">// 注意减一</span><br>    &#125;<br>&#125;;<br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span>:<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">uniquePaths</span>(<span class="hljs-params">self, m: <span class="hljs-built_in">int</span>, n: <span class="hljs-built_in">int</span></span>) -&gt; <span class="hljs-built_in">int</span>:<br>        <span class="hljs-keyword">def</span> <span class="hljs-title function_">dfs</span>(<span class="hljs-params">i,j</span>):<br>            <span class="hljs-keyword">if</span> i == <span class="hljs-number">0</span> <span class="hljs-keyword">and</span> j == <span class="hljs-number">0</span>:<br>                <span class="hljs-keyword">return</span> <span class="hljs-number">0</span><br>            <span class="hljs-keyword">if</span> i == <span class="hljs-number">0</span> <span class="hljs-keyword">or</span> j == <span class="hljs-number">0</span>:<br>                <span class="hljs-keyword">return</span> <span class="hljs-number">1</span><br>            <span class="hljs-keyword">return</span>  dfs(i-<span class="hljs-number">1</span>,j) + dfs(i,j-<span class="hljs-number">1</span>)<br>        <span class="hljs-keyword">if</span> m == <span class="hljs-number">1</span> <span class="hljs-keyword">and</span> n == <span class="hljs-number">1</span>: <span class="hljs-keyword">return</span> <span class="hljs-number">1</span><br>        <span class="hljs-keyword">return</span> dfs(m-<span class="hljs-number">1</span>,n-<span class="hljs-number">1</span>) <span class="hljs-comment"># 注意减一</span><br></code></pre></td></tr></table></figure><p>提交一下 又又又超时了 大量重复计算</p><p>现在到记忆化搜索</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span>:<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">uniquePaths</span>(<span class="hljs-params">self, m: <span class="hljs-built_in">int</span>, n: <span class="hljs-built_in">int</span></span>) -&gt; <span class="hljs-built_in">int</span>:<br>        <span class="hljs-keyword">if</span> (m == <span class="hljs-number">1</span> <span class="hljs-keyword">and</span> n == <span class="hljs-number">1</span>): <span class="hljs-keyword">return</span> <span class="hljs-number">1</span><br><span class="hljs-meta">        @cache</span><br>        <span class="hljs-keyword">def</span> <span class="hljs-title function_">dfs</span>(<span class="hljs-params">i,j</span>):<br>            <span class="hljs-keyword">if</span> i == <span class="hljs-number">0</span> <span class="hljs-keyword">and</span> j == <span class="hljs-number">0</span>:<br>                <span class="hljs-keyword">return</span> <span class="hljs-number">0</span><br>            <span class="hljs-keyword">if</span> i == <span class="hljs-number">0</span> <span class="hljs-keyword">or</span> j == <span class="hljs-number">0</span>:<br>                <span class="hljs-keyword">return</span> <span class="hljs-number">1</span><br>            <span class="hljs-keyword">return</span>  dfs(i-<span class="hljs-number">1</span>,j) + dfs(i,j-<span class="hljs-number">1</span>)<br>        <span class="hljs-keyword">return</span> dfs(m-<span class="hljs-number">1</span>,n-<span class="hljs-number">1</span>)<br></code></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span> &#123;<br><span class="hljs-keyword">public</span>:<br><br>    <span class="hljs-type">int</span> dp[<span class="hljs-number">230</span>][<span class="hljs-number">230</span>];<br><br>    <span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">dfs</span><span class="hljs-params">(<span class="hljs-type">int</span> i, <span class="hljs-type">int</span> j)</span></span>&#123;<br>        <span class="hljs-keyword">if</span>(i == <span class="hljs-number">0</span> &amp;&amp; j == <span class="hljs-number">0</span>)&#123;<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;&#125;<br>        <span class="hljs-keyword">if</span>(i == <span class="hljs-number">0</span> || j == <span class="hljs-number">0</span>)&#123;<span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;&#125;<br>        <span class="hljs-keyword">if</span>(dp[i][j] != <span class="hljs-number">0</span>)&#123;<span class="hljs-keyword">return</span> dp[i][j];&#125;<br>        <span class="hljs-type">int</span> res = <span class="hljs-built_in">dfs</span>(i<span class="hljs-number">-1</span>,j)+ <span class="hljs-built_in">dfs</span>(i,j<span class="hljs-number">-1</span>);<br>        dp[i][j] = res;<br>        <span class="hljs-keyword">return</span> res;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">uniquePaths</span><span class="hljs-params">(<span class="hljs-type">int</span> m, <span class="hljs-type">int</span> n)</span> </span>&#123;<br>        <span class="hljs-keyword">if</span>(m==<span class="hljs-number">1</span> &amp;&amp; n==<span class="hljs-number">1</span>)&#123;<span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;&#125;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">220</span>; i++)&#123;<br>            <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">220</span>; j++)&#123;<br>                dp[i][j] = <span class="hljs-number">0</span>;<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">dfs</span>(m<span class="hljs-number">-1</span>,n<span class="hljs-number">-1</span>);<br>    &#125;<br>&#125;;<br></code></pre></td></tr></table></figure><p>但还是很慢 现在就是要把递归中的<code>递</code>去掉</p><p>还是那样 一比一的翻译</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">dfs(i,j) = dfs(i-1,j)+dfs(i,j-1)<br>f[i][j] = f[i-1][j]+f[i][j-1]<br>i == 0 dp[i][0] = 1<br>j == 0 dp[0][j] = 1<br></code></pre></td></tr></table></figure><p>终止条件 不变</p><p>以下是最终的代码</p><h2 id="示例代码">示例代码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 时间复杂度：O(m * n)</span><br><span class="hljs-comment"># 空间复杂度: O(m * n)</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span>:<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">uniquePaths</span>(<span class="hljs-params">self, m: <span class="hljs-built_in">int</span>, n: <span class="hljs-built_in">int</span></span>) -&gt; <span class="hljs-built_in">int</span>:<br>        dp = [[<span class="hljs-number">1</span> <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(n+<span class="hljs-number">1</span>)] <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(m+<span class="hljs-number">1</span>)]<br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>,m+<span class="hljs-number">1</span>):<br>            <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>,n+<span class="hljs-number">1</span>):<br>                dp[i][j] = dp[i-<span class="hljs-number">1</span>][j]+dp[i][j-<span class="hljs-number">1</span>]<br>        <span class="hljs-keyword">return</span> dp[m-<span class="hljs-number">1</span>][n-<span class="hljs-number">1</span>]<br></code></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-comment">// 时间复杂度：O(m * n)</span><br><span class="hljs-comment">// 空间复杂度: O(m * n)</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span> &#123;<br><span class="hljs-keyword">public</span>:<br>    <span class="hljs-type">int</span> dp[<span class="hljs-number">230</span>][<span class="hljs-number">230</span>];<br>    <span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">uniquePaths</span><span class="hljs-params">(<span class="hljs-type">int</span> m, <span class="hljs-type">int</span> n)</span> </span>&#123;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; m; i++)&#123;<br>            <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j = <span class="hljs-number">0</span>; j &lt; n; j++)&#123;<br>                <span class="hljs-keyword">if</span>(i == <span class="hljs-number">0</span> || j == <span class="hljs-number">0</span>)&#123;<br>                    dp[i][j] = <span class="hljs-number">1</span>;<br>                &#125;<span class="hljs-keyword">else</span>&#123;<br>                    dp[i][j] = dp[i<span class="hljs-number">-1</span>][j] + dp[i][j<span class="hljs-number">-1</span>];<br>                &#125;<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">return</span> dp[m<span class="hljs-number">-1</span>][n<span class="hljs-number">-1</span>];<br>    &#125;<br>&#125;;<br></code></pre></td></tr></table></figure><p><img src="https://s11.ax1x.com/2023/04/04/pp5nSrd.png" alt=""></p><h2 id="感谢收看">感谢收看</h2>]]></content>
    
    
    <categories>
      
      <category>leetcode</category>
      
    </categories>
    
    
    <tags>
      
      <tag>leetcode</tag>
      
      <tag>code</tag>
      
      <tag>动态规划</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Leetcode 70.爬楼梯题解</title>
    <link href="/2023/04/04/leetcode70/"/>
    <url>/2023/04/04/leetcode70/</url>
    
    <content type="html"><![CDATA[<h2 id="题目描述">题目描述</h2><p>假设你正在爬楼梯。需要 <code>n</code> 阶你才能到达楼顶。</p><span id="more"></span><p>每次你可以爬 <code>1</code> 或 <code>2</code> 个台阶。你有多少种不同的方法可以爬到楼顶呢？</p><h3 id="输入示例">输入示例</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">输入：n = 2<br>输出：2<br>解释：有两种方法可以爬到楼顶。<br>1. 1 阶 + 1 阶<br>2. 2 阶<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">输入：n = 3<br>输出：3<br>解释：有三种方法可以爬到楼顶。<br>1. 1 阶 + 1 阶 + 1 阶<br>2. 1 阶 + 2 阶<br>3. 2 阶 + 1 阶<br></code></pre></td></tr></table></figure><h2 id="解题思路">解题思路</h2><p>这是一道非常标准的<code>dp入门题</code></p><p>不如我们先从回溯角度可以写</p><p><strong>设n=4</strong> 我们可以从反反向跳下去 每次可以跳1或者2格 因此 我们可以得出 <code>(i-1)</code> 和<code>(i-2)</code> 求方案总数</p><p>所以最终方程是<code>dfs(i-1)+dfs(i-2)</code></p><p>那么另外一个问题来了 终止条件是什么？</p><p>从<code>i-2</code>看到 所以i必须大于2 因为答案不可能是负数</p><p>递归代码如下**(Python 和 C++)**</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span>:<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">climbStairs</span>(<span class="hljs-params">self, n: <span class="hljs-built_in">int</span></span>) -&gt; <span class="hljs-built_in">int</span>:<br><br>        <span class="hljs-keyword">def</span> <span class="hljs-title function_">dfs</span>(<span class="hljs-params">i</span>):<br>            <span class="hljs-keyword">if</span> i &lt; <span class="hljs-number">2</span>: <span class="hljs-keyword">return</span> i<br>            <span class="hljs-keyword">return</span>  dfs(i-<span class="hljs-number">1</span>) + dfs(i-<span class="hljs-number">2</span>)<br>        <br>        <span class="hljs-keyword">return</span> dfs(n+<span class="hljs-number">1</span>) <span class="hljs-comment"># 注意这里加1是因为自己也要算</span><br></code></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span> &#123;<br><span class="hljs-keyword">public</span>:<br><br><br>    <span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">dfs</span><span class="hljs-params">(<span class="hljs-type">int</span> n)</span></span>&#123;<br>        <span class="hljs-keyword">if</span> (n &lt; <span class="hljs-number">2</span>)&#123;<span class="hljs-keyword">return</span> n;&#125;<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">dfs</span>(n<span class="hljs-number">-1</span>)+<span class="hljs-built_in">dfs</span>(n<span class="hljs-number">-2</span>);<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">climbStairs</span><span class="hljs-params">(<span class="hljs-type">int</span> n)</span> </span>&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">dfs</span>(n+<span class="hljs-number">1</span>); <span class="hljs-comment">// 注意这里加1是因为自己也要算</span><br>    &#125;<br>&#125;;<br></code></pre></td></tr></table></figure><p>你提交之后 会发现 唉？ 超时了</p><p>因为递归会造成大量重复计算</p><p>从刚才那个例子开始 比如我执行了一次 <code>dfs(n-2)</code> 相当于执行了两次<code>dfs(n-1)</code> 这样会拖慢时间</p><p>因此我们可以改成 记忆化搜索 保存计算结果 <strong>Python 可以用cache装饰器 c++得自己开数组 代码如下</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span>:<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">climbStairs</span>(<span class="hljs-params">self, n: <span class="hljs-built_in">int</span></span>) -&gt; <span class="hljs-built_in">int</span>:<br>        <br><span class="hljs-meta">        @cache</span><br>        <span class="hljs-keyword">def</span> <span class="hljs-title function_">dfs</span>(<span class="hljs-params">i</span>):<br>            <span class="hljs-keyword">if</span> i &lt; <span class="hljs-number">2</span>: <span class="hljs-keyword">return</span> i<br>            <span class="hljs-keyword">return</span>  dfs(i-<span class="hljs-number">1</span>) + dfs(i-<span class="hljs-number">2</span>)<br>        <br>        <span class="hljs-keyword">return</span> dfs(n+<span class="hljs-number">1</span>)<br></code></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span> &#123;<br><span class="hljs-keyword">public</span>:<br><br>    <span class="hljs-type">int</span> ans[<span class="hljs-number">50</span>];<br><br>    <span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">dfs</span><span class="hljs-params">(<span class="hljs-type">int</span> n)</span></span>&#123;<br>        <span class="hljs-keyword">if</span> (n &lt; <span class="hljs-number">2</span>)&#123;<span class="hljs-keyword">return</span> n;&#125;<br>        <span class="hljs-keyword">if</span>(ans[n] != <span class="hljs-number">0</span>)&#123;<span class="hljs-keyword">return</span> ans[n];&#125;<br>        <span class="hljs-type">int</span> res = <span class="hljs-built_in">dfs</span>(n<span class="hljs-number">-1</span>)+<span class="hljs-built_in">dfs</span>(n<span class="hljs-number">-2</span>);<br>        ans[n] = res;<br>        <span class="hljs-keyword">return</span> res;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">climbStairs</span><span class="hljs-params">(<span class="hljs-type">int</span> n)</span> </span>&#123;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">50</span>; i++)&#123;<br>            ans[i] = <span class="hljs-number">0</span>; <span class="hljs-comment">// 先把数组初始化</span><br>        &#125;<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">dfs</span>(n+<span class="hljs-number">1</span>);<br>    &#125;<br>&#125;;<br></code></pre></td></tr></table></figure><p>ok 那我们能不能把递归去掉 把他改成迭代呢？</p><p><strong>接下来 我们1:1 把递归翻译成动态方程</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">dfs(i) = dfs(i-1)+dfs(i-2)<br>f[i] = f[i-1]+f[i-2]<br></code></pre></td></tr></table></figure><p>好 现在边界条件是<code>f[0] = 1 f[1] = 2</code></p><p>写一个从2开始的循环<code>(注意：要循环次数要小于等于n)</code></p><p>以下是代码</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-comment">// 时间复杂度 : O(n)</span><br><span class="hljs-comment">// 空间复杂度: O(n)</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span> &#123;<br><span class="hljs-keyword">public</span>:<br><br>    <span class="hljs-type">int</span> ans[<span class="hljs-number">50</span>];<br><br>    <span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">climbStairs</span><span class="hljs-params">(<span class="hljs-type">int</span> n)</span> </span>&#123;<br>        <span class="hljs-keyword">if</span> (n==<span class="hljs-number">2</span>)&#123;<span class="hljs-keyword">return</span> <span class="hljs-number">2</span>;&#125;<br>        <span class="hljs-keyword">if</span>(n==<span class="hljs-number">1</span>)&#123;<span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;&#125;<br>        ans[<span class="hljs-number">0</span>] = <span class="hljs-number">1</span>;<br>        ans[<span class="hljs-number">1</span>] = <span class="hljs-number">2</span>;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i = <span class="hljs-number">2</span>; i &lt; n; i++)&#123;<br>            ans[i] = ans[i<span class="hljs-number">-1</span>]+ans[i<span class="hljs-number">-2</span>];<br>        &#125;<br>        <span class="hljs-keyword">return</span> ans[n<span class="hljs-number">-1</span>];<br>    &#125;<br>&#125;;<br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 时间复杂度: O(n)</span><br><span class="hljs-comment"># 空间复杂度: O(n)</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span>:<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">climbStairs</span>(<span class="hljs-params">self, n: <span class="hljs-built_in">int</span></span>) -&gt; <span class="hljs-built_in">int</span>:<br>        <br>        dp = [<span class="hljs-number">0</span> <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(n+<span class="hljs-number">1</span>)]<br>        dp[<span class="hljs-number">0</span>] = <span class="hljs-number">1</span><br>        dp[<span class="hljs-number">1</span>] = <span class="hljs-number">2</span><br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">2</span>,n+<span class="hljs-number">1</span>):<br>            dp[i] = dp[i-<span class="hljs-number">1</span>]+dp[i-<span class="hljs-number">2</span>]<br>        <span class="hljs-keyword">return</span> dp[n-<span class="hljs-number">1</span>]<br></code></pre></td></tr></table></figure><p>这里又有一个规律</p><p><strong>dp[i-1] 是上一个状态 dp[i-2] 是上上个状态</strong></p><p>我们能不能用两个变量维持这个状态呢？ <code>见示例代码</code></p><h2 id="示例代码">示例代码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 时间复杂度：O(n)</span><br><span class="hljs-comment"># 空间复杂度: O(1)</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span>:<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">climbStairs</span>(<span class="hljs-params">self, n: <span class="hljs-built_in">int</span></span>) -&gt; <span class="hljs-built_in">int</span>:<br>        <span class="hljs-keyword">if</span> n &lt;= <span class="hljs-number">2</span>: <span class="hljs-keyword">return</span> n <br>        a = <span class="hljs-number">1</span><br>        b = <span class="hljs-number">2</span><br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">2</span>,n):<br>            a, b = b, a + b<br>        <span class="hljs-keyword">return</span> b<br></code></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-comment">// 时间复杂度:O(n)</span><br><span class="hljs-comment">// 空间复杂度:O(1)</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span> &#123;<br><span class="hljs-keyword">public</span>:<br>    <span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">climbStairs</span><span class="hljs-params">(<span class="hljs-type">int</span> n)</span> </span>&#123;<br>        <span class="hljs-keyword">if</span>(n&lt;=<span class="hljs-number">2</span>)&#123;<span class="hljs-keyword">return</span> n;&#125;<br>        <span class="hljs-type">int</span> a = <span class="hljs-number">1</span>, b = <span class="hljs-number">2</span>;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i = <span class="hljs-number">2</span>; i &lt; n; i++)&#123;<br>            <span class="hljs-type">int</span> nxt = b;<br>            b+=a;<br>            a = nxt;<br>        &#125;<br>        <span class="hljs-keyword">return</span> b;<br>    &#125;<br>&#125;;<br></code></pre></td></tr></table></figure><p><img src="https://s11.ax1x.com/2023/04/04/pp5VU4U.png" alt=""></p><h2 id="感谢收看">感谢收看</h2>]]></content>
    
    
    <categories>
      
      <category>leetcode</category>
      
    </categories>
    
    
    <tags>
      
      <tag>leetcode</tag>
      
      <tag>code</tag>
      
      <tag>动态规划</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Leetcode 831.隐藏个人信息</title>
    <link href="/2023/04/01/leetcode831/"/>
    <url>/2023/04/01/leetcode831/</url>
    
    <content type="html"><![CDATA[<h2 id="题意描述">题意描述</h2><p>题目:<a href="https://leetcode.cn/problems/masking-personal-information/">隐藏个人信息</a></p><span id="more"></span><p>给你一条个人信息字符串 s ，可能表示一个 邮箱地址 ，也可能表示一串 电话号码 。返回按如下规则 隐藏 个人信息后的结果：</p><p>电子邮件地址：</p><p>一个电子邮件地址由以下部分组成：</p><p>一个 名字 ，由大小写英文字母组成，后面跟着<br>一个 ‘@’ 字符，后面跟着<br>一个 域名 ，由大小写英文字母和一个位于中间的 ‘.’ 字符组成。‘.’ 不会是域名的第一个或者最后一个字符。<br>要想隐藏电子邮件地址中的个人信息：</p><p>名字 和 域名 部分的大写英文字母应当转换成小写英文字母。<br>名字 中间的字母（即，除第一个和最后一个字母外）必须用 5 个 “*****” 替换。<br>电话号码：</p><p>一个电话号码应当按下述格式组成：</p><p>电话号码可以由 <code>10-13</code> 位数字组成<br>后 10 位构成 本地号码<br>前面剩下的 0-3 位，构成 国家代码<br>利用<code> &#123;'+', '-', '(', ')', ' '&#125;</code> 这些 分隔字符 按某种形式对上述数字进行分隔<br>要想隐藏电话号码中的个人信息：</p><p>移除所有 分隔字符<br>隐藏个人信息后的电话号码应该遵从这种格式：<br><code>&quot;***-***-XXXX&quot; 如果国家代码为 0 位数字</code><br><code>&quot;+*-***-***-XXXX&quot; 如果国家代码为 1 位数字</code><br>“+<strong>-</strong><em>-</em>**-xxxx” 如果国家代码为 2 位数字<br><code>&quot;+***-***-***-XXXX&quot; 如果国家代码为 3 位数字</code><br><code>&quot;XXXX&quot; 是最后 4 位 本地号码</code></p><h2 id="解题思路">解题思路</h2><p>按题意模拟即可，分开两种情况讨论</p><p>先查找是否有<code>@</code></p><p>有则是邮箱 没有是电话</p><p><s>你能否写一个不用正则表达式下的代码？</s></p><p><strong>时间复杂度:O(n)</strong></p><p><strong>空间复杂度:O(n)</strong></p><h2 id="示例代码">示例代码</h2><p><strong>Python3</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span>:<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">phone</span>(<span class="hljs-params">self,s,i</span>):<br>        y = <span class="hljs-string">&quot;&quot;</span> <span class="hljs-keyword">if</span> i == <span class="hljs-number">0</span> <span class="hljs-keyword">else</span> <span class="hljs-string">&quot;+&quot;</span> + <span class="hljs-string">&quot;*&quot;</span> * i +<span class="hljs-string">&quot;-&quot;</span><br>        ans = <span class="hljs-number">0</span><br>        <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,<span class="hljs-built_in">len</span>(s)-i - <span class="hljs-number">4</span>):<br>            <span class="hljs-keyword">if</span> ans == <span class="hljs-number">3</span>:<br>                ans = <span class="hljs-number">0</span><br>                y+=<span class="hljs-string">&quot;-&quot;</span><br>            y+=<span class="hljs-string">&quot;*&quot;</span><br>            ans+=<span class="hljs-number">1</span><br>        <span class="hljs-keyword">return</span> y+<span class="hljs-string">&quot;-&quot;</span> + s[-<span class="hljs-number">4</span>:]<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">cha</span>(<span class="hljs-params">self,s</span>):<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">True</span> <span class="hljs-keyword">if</span> <span class="hljs-string">&quot;@&quot;</span> <span class="hljs-keyword">in</span> s <span class="hljs-keyword">else</span> <span class="hljs-literal">False</span><br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">maskPII</span>(<span class="hljs-params">self, s: <span class="hljs-built_in">str</span></span>) -&gt; <span class="hljs-built_in">str</span>:<br>        a = self.cha(s)<br>        y = <span class="hljs-string">&quot;&quot;</span><br>        <span class="hljs-keyword">if</span> a==<span class="hljs-literal">True</span>:<br>            i = s.split(<span class="hljs-string">&quot;@&quot;</span>)<br>            i[<span class="hljs-number">0</span>] = i[<span class="hljs-number">0</span>].lower()<br>            y+= i[<span class="hljs-number">0</span>][<span class="hljs-number">0</span>]+<span class="hljs-string">&quot;*****&quot;</span>+i[<span class="hljs-number">0</span>][-<span class="hljs-number">1</span>] + <span class="hljs-string">&quot;@&quot;</span> + i[<span class="hljs-number">1</span>].lower()<br>            <span class="hljs-keyword">return</span> y<br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,<span class="hljs-built_in">len</span>(s)):<br>                <span class="hljs-keyword">if</span> s[i] <span class="hljs-keyword">in</span> [<span class="hljs-string">&quot;+&quot;</span>,<span class="hljs-string">&quot;-&quot;</span>,<span class="hljs-string">&quot;(&quot;</span>,<span class="hljs-string">&quot;)&quot;</span>,<span class="hljs-string">&quot; &quot;</span>] : <span class="hljs-keyword">continue</span><br>                <span class="hljs-keyword">else</span>: y+=s[i]<br>            n = <span class="hljs-built_in">len</span>(y)<br>            <span class="hljs-keyword">return</span> self.phone(y,n-<span class="hljs-number">10</span>)<br>            <br></code></pre></td></tr></table></figure><p><strong>C++</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span> &#123;<br><span class="hljs-keyword">public</span>:<br><br>    <span class="hljs-function">string <span class="hljs-title">phone</span><span class="hljs-params">(string s, <span class="hljs-type">int</span> i )</span></span>&#123;<br>        string y = <span class="hljs-string">&quot;&quot;</span>;<br>        <span class="hljs-keyword">if</span>(i != <span class="hljs-number">0</span>)&#123; y+= <span class="hljs-string">&#x27;+&#x27;</span>;&#125;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j = <span class="hljs-number">0</span>; j &lt; i; j++)&#123;<br>            y+=<span class="hljs-string">&#x27;*&#x27;</span>;<br>        &#125;<br><br><br>        <span class="hljs-keyword">if</span>(i != <span class="hljs-number">0</span>)&#123; y+= <span class="hljs-string">&#x27;-&#x27;</span>;&#125;<br><br>        <span class="hljs-type">int</span> ans = <span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j = <span class="hljs-number">0</span>; j &lt; s.<span class="hljs-built_in">size</span>() - i - <span class="hljs-number">3</span>; j++)&#123;<br>            <span class="hljs-keyword">if</span>(ans == <span class="hljs-number">3</span>)&#123;<br>                y+=<span class="hljs-string">&#x27;-&#x27;</span>;<br>                ans = <span class="hljs-number">0</span>;<br>            &#125;<span class="hljs-keyword">else</span>&#123;<br>                y+=<span class="hljs-string">&#x27;*&#x27;</span>;<br>                ans++;<br>            &#125;<br>        &#125;<br>        y+=<span class="hljs-string">&#x27;-&#x27;</span>;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j = s.<span class="hljs-built_in">size</span>()<span class="hljs-number">-4</span>; j &lt; s.<span class="hljs-built_in">size</span>(); j++)&#123;<br>            y+=s[j];<br>        &#125;<br>        <span class="hljs-keyword">return</span> y;<br>    &#125;<br><br>    <span class="hljs-function">string <span class="hljs-title">mail</span><span class="hljs-params">(string s)</span></span>&#123;<br>        <span class="hljs-type">bool</span> a = <span class="hljs-literal">false</span>;<br>        string y = <span class="hljs-string">&quot;&quot;</span>;<br>        y+=<span class="hljs-built_in">tolower</span>(s[<span class="hljs-number">0</span>]);<br>        y+=<span class="hljs-string">&quot;*****&quot;</span>;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; s.<span class="hljs-built_in">size</span>(); i++)&#123;<br>            <span class="hljs-keyword">if</span>(s[i]==<span class="hljs-string">&#x27;@&#x27;</span>)&#123;<br>                a = <span class="hljs-literal">true</span>;<br>                y+=<span class="hljs-built_in">tolower</span>(s[i<span class="hljs-number">-1</span>]);<br>            &#125;<br><br>            <span class="hljs-keyword">if</span>(a== <span class="hljs-literal">true</span>)&#123;<br>                y+=<span class="hljs-built_in">tolower</span>(s[i]);<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">return</span> y;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-type">bool</span> <span class="hljs-title">cha</span><span class="hljs-params">(string s)</span></span>&#123;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; s.<span class="hljs-built_in">size</span>(); i++)&#123;<br>            <span class="hljs-keyword">if</span> (s[i]==<span class="hljs-string">&#x27;@&#x27;</span>)&#123;<span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;&#125;<br>        &#125;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>    &#125;<br><br>    <span class="hljs-function">string <span class="hljs-title">maskPII</span><span class="hljs-params">(string s)</span> </span>&#123;<br>        <span class="hljs-type">bool</span> a = <span class="hljs-built_in">cha</span>(s);<br>        <span class="hljs-keyword">if</span>(a==<span class="hljs-literal">true</span>)&#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-built_in">mail</span>(s);<br>        &#125;<span class="hljs-keyword">else</span>&#123;<br>            string x = <span class="hljs-string">&quot;&quot;</span>;<br>            <span class="hljs-type">int</span> n = <span class="hljs-number">0</span>;<br>            <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; s.<span class="hljs-built_in">size</span>(); i++)&#123;<br>                <span class="hljs-keyword">if</span>(s[i]==<span class="hljs-string">&#x27;+&#x27;</span>||s[i]==<span class="hljs-string">&#x27;-&#x27;</span>||s[i]==<span class="hljs-string">&#x27;(&#x27;</span>||s[i]==<span class="hljs-string">&#x27;)&#x27;</span>||s[i]==<span class="hljs-string">&#x27; &#x27;</span>)&#123;<br>                    <span class="hljs-keyword">continue</span>;<br>                &#125;<span class="hljs-keyword">else</span>&#123;<br>                    x+=s[i];<br>                    n++;<br>                &#125;<br>            &#125;<br>            <span class="hljs-keyword">return</span> <span class="hljs-built_in">phone</span>(x,n<span class="hljs-number">-10</span>);<br>        &#125;<br>    &#125;<br>&#125;;<br></code></pre></td></tr></table></figure><h2 id="到此结束">到此结束</h2><p><img src="https://s11.ax1x.com/2023/04/01/ppW0AdU.png" alt="w"></p>]]></content>
    
    
    <categories>
      
      <category>leetcode</category>
      
    </categories>
    
    
    <tags>
      
      <tag>leetcode</tag>
      
      <tag>模拟</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Leetcode LCP01.猜数字</title>
    <link href="/2023/03/31/LCP01/"/>
    <url>/2023/03/31/LCP01/</url>
    
    <content type="html"><![CDATA[<h2 id="题目描述">题目描述</h2><h4 id="题目-LCP-猜数字">题目:<a href="https://leetcode.cn/problems/guess-numbers/?favorite=7cyqwuv">LCP 猜数字</a></h4><span id="more"></span><p>小A 和 小B 在玩猜数字。小B 每次从 1, 2, 3 中随机选择一个，小A 每次也从 1, 2, 3 中选择一个猜。他们一共进行三次这个游戏，请返回 小A 猜对了几次？</p><p>输入的guess数组为 小A 每次的猜测，answer数组为 小B 每次的选择。guess和answer的长度都等于3。</p><h2 id="解题思路">解题思路</h2><p>直接按题意模拟即可</p><h2 id="示例代码">示例代码</h2><p><strong>C++</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span> &#123;<br><span class="hljs-keyword">public</span>:<br>    <span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">game</span><span class="hljs-params">(vector&lt;<span class="hljs-type">int</span>&gt;&amp; guess, vector&lt;<span class="hljs-type">int</span>&gt;&amp; answer)</span> </span>&#123;<br>        <span class="hljs-type">int</span> a = <span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; guess.<span class="hljs-built_in">size</span>(); i++)&#123;<br>            <span class="hljs-keyword">if</span>(guess[i]==answer[i])&#123;a++;&#125;<br>        &#125;<br>        <span class="hljs-keyword">return</span> a;<br>    &#125;<br>&#125;;<br></code></pre></td></tr></table></figure><p><strong>Python3</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span>:<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">game</span>(<span class="hljs-params">self, guess: <span class="hljs-type">List</span>[<span class="hljs-built_in">int</span>], answer: <span class="hljs-type">List</span>[<span class="hljs-built_in">int</span>]</span>) -&gt; <span class="hljs-built_in">int</span>:<br>        a = <span class="hljs-number">0</span><br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(guess)):<br>            <span class="hljs-keyword">if</span> guess[i] == answer[i]: a+=<span class="hljs-number">1</span><br>        <span class="hljs-keyword">return</span> a<br></code></pre></td></tr></table></figure><p><img src="https://s11.ax1x.com/2023/03/30/pp2DqMt.png" alt="w"></p>]]></content>
    
    
    <categories>
      
      <category>leetcode</category>
      
    </categories>
    
    
    <tags>
      
      <tag>leetcode</tag>
      
      <tag>lcp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Leetcode LCP06.拿硬币</title>
    <link href="/2023/03/31/LCP06/"/>
    <url>/2023/03/31/LCP06/</url>
    
    <content type="html"><![CDATA[<h2 id="题目描述">题目描述</h2><p>题目:<a href="https://leetcode.cn/problems/na-ying-bi/">拿硬币</a></p><p>桌上有 n 堆力扣币，每堆的数量保存在数组 coins 中。我们每次可以选择任意一堆，拿走其中的一枚或者两枚，求拿完所有力扣币的最少次数。</p><span id="more"></span><p>示例 1：</p><p>输入：<code>[4,2,1]</code></p><p>输出：<code>4</code></p><p>解释：第一堆力扣币最少需要拿 2 次，第二堆最少需要拿 1 次，第三堆最少需要拿 1 次，总共 4 次即可拿完。</p><p>示例 2：</p><p>输入：<code>[2,3,10]</code></p><p>输出：<code>8</code></p><h2 id="解题思路">解题思路</h2><p>这时候得分开两种情况讨论</p><p>如果<code>f[i]&lt;2</code> 则算1次</p><p>如果<code>f[i]&gt;=2</code>则算 <code>f[i] / 2 + f[i] % 2</code></p><h2 id="示例代码">示例代码</h2><p><strong>Python3</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span>:<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">minCount</span>(<span class="hljs-params">self, coins: <span class="hljs-type">List</span>[<span class="hljs-built_in">int</span>]</span>) -&gt; <span class="hljs-built_in">int</span>:<br>        ans = <span class="hljs-number">0</span><br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,<span class="hljs-built_in">len</span>(coins)):<br>            <span class="hljs-keyword">if</span> coins[i] &lt; <span class="hljs-number">2</span>:<br>                ans+=<span class="hljs-number">1</span><br>            <span class="hljs-keyword">else</span>:<br>                ans += coins[i] // <span class="hljs-number">2</span> + coins[i] % <span class="hljs-number">2</span><br>        <span class="hljs-keyword">return</span> ans<br></code></pre></td></tr></table></figure><p><strong>C++</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span> &#123;<br><span class="hljs-keyword">public</span>:<br>    <span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">minCount</span><span class="hljs-params">(vector&lt;<span class="hljs-type">int</span>&gt;&amp; coins)</span> </span>&#123;<br>        <span class="hljs-type">int</span> a = <span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; coins.<span class="hljs-built_in">size</span>(); i++)&#123;<br>            <span class="hljs-keyword">if</span>(coins[i] &lt; <span class="hljs-number">2</span>)&#123;<br>                a++;<br>            &#125;<span class="hljs-keyword">else</span>&#123;<br>                a+=(coins[i]/<span class="hljs-number">2</span> + coins[i] % <span class="hljs-number">2</span>);<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">return</span> a;<br>    &#125;<br>&#125;;<br></code></pre></td></tr></table></figure><p><img src="https://s11.ax1x.com/2023/03/31/ppRImee.png" alt="w"></p>]]></content>
    
    
    <categories>
      
      <category>leetcode</category>
      
    </categories>
    
    
    <tags>
      
      <tag>leetcode</tag>
      
      <tag>lcp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Leetcode 1.两数之和</title>
    <link href="/2023/03/28/leetcode1/"/>
    <url>/2023/03/28/leetcode1/</url>
    
    <content type="html"><![CDATA[<p>题目:两数之和 <a href="https://leetcode.cn/problems/two-sum/">链接</a></p><h2 id="题目描述">题目描述</h2><span id="more"></span><p>给定一个整数数组<code>nums</code>和一个整数目标值 <code>target</code>，请你在该数组中找出 和为目标值<code>target</code> 的那 两个 整数，并返回它们的数组下标。</p><p>你可以假设每种输入只会对应一个答案。但是，数组中同一个元素在答案里不能重复出现。</p><p>你可以按任意顺序返回答案。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash">输入：nums = [2,7,11,15], target = 9<br>输出：[0,1]<br>解释：因为 nums[0] + nums[1] == 9 ，返回 [0, 1] 。<br><br>输入：nums = [3,2,4], target = 6<br>输出：[1,2]<br><br>输入：nums = [3,3], target = 6<br>输出：[0,1]<br></code></pre></td></tr></table></figure><h2 id="解题思路">解题思路</h2><p>1.<strong>暴力法</strong></p><p>我们不难的可以发现，可以用两层for循环去枚举答案 选择第一个数，然后再选择其他数字，最后就可以得出正确答案</p><p>时间复杂度:O(n^2)</p><p>空间复杂度:O(1)</p><p>2.<strong>哈希表</strong></p><p>我们直接遍历一次数组，例如从示例一<code>nuns=[2,7,11,15] target=9</code> 创建一个哈希表，从第一个数字2开始，9-2=7，7不在哈希表，先把2<code>=&gt;</code>1保存起来，遍历到第二个数字，7，9-7=2,此时2在哈希表里，返回<code>[0,1]</code></p><h2 id="示例代码">示例代码</h2><p>1.暴力</p><p><strong>Python</strong></p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs Py"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span>:<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">twoSum</span>(<span class="hljs-params">self, nums: <span class="hljs-type">List</span>[<span class="hljs-built_in">int</span>], target: <span class="hljs-built_in">int</span></span>) -&gt; <span class="hljs-type">List</span>[<span class="hljs-built_in">int</span>]:<br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(nums)):<br>            <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(i+<span class="hljs-number">1</span>,<span class="hljs-built_in">len</span>(nums)):<br>                <span class="hljs-keyword">if</span> nums[i]+nums[j]==target:<br>                    <span class="hljs-keyword">return</span> [i,j]<br></code></pre></td></tr></table></figure><p><strong>C++</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span> &#123;<br><span class="hljs-keyword">public</span>:<br>    <span class="hljs-function">vector&lt;<span class="hljs-type">int</span>&gt; <span class="hljs-title">twoSum</span><span class="hljs-params">(vector&lt;<span class="hljs-type">int</span>&gt;&amp; nums, <span class="hljs-type">int</span> target)</span> </span>&#123;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; nums.<span class="hljs-built_in">size</span>(); i++)&#123;<br>            <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j = i+<span class="hljs-number">1</span>; j &lt; nums.<span class="hljs-built_in">size</span>(); j++)&#123;<br>                <span class="hljs-keyword">if</span>(nums[i]+nums[j]==target)&#123;<br>                    <span class="hljs-keyword">return</span> &#123;i,j&#125;;<br>                &#125;<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">return</span> &#123;&#125;;<br>    &#125;<br>&#125;;<br></code></pre></td></tr></table></figure><p>2.哈希表</p><p><strong>Python</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span>:<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">twoSum</span>(<span class="hljs-params">self, nums: <span class="hljs-type">List</span>[<span class="hljs-built_in">int</span>], target: <span class="hljs-built_in">int</span></span>) -&gt; <span class="hljs-type">List</span>[<span class="hljs-built_in">int</span>]:<br>        a = &#123;&#125;<br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,<span class="hljs-built_in">len</span>(nums)):<br>            <span class="hljs-keyword">if</span> target-nums[i] <span class="hljs-keyword">in</span> a: <span class="hljs-keyword">return</span> [a[target-nums[i]],i]<br>            <span class="hljs-keyword">else</span>: a[nums[i]] = i<br></code></pre></td></tr></table></figure><p><strong>C++</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span> &#123;<br><span class="hljs-keyword">public</span>:<br>    <span class="hljs-function">vector&lt;<span class="hljs-type">int</span>&gt; <span class="hljs-title">twoSum</span><span class="hljs-params">(vector&lt;<span class="hljs-type">int</span>&gt;&amp; nums, <span class="hljs-type">int</span> target)</span> </span>&#123;<br>        unordered_map&lt;<span class="hljs-type">int</span>,<span class="hljs-type">int</span>&gt; hashmap;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; nums.<span class="hljs-built_in">size</span>(); i++)&#123;<br>            <span class="hljs-keyword">auto</span> h  = hashmap.<span class="hljs-built_in">find</span>(target-nums[i]);<br>            <span class="hljs-keyword">if</span>(h != hashmap.<span class="hljs-built_in">end</span>())&#123;<br>                <span class="hljs-keyword">return</span> &#123;hashmap[target-nums[i]],i&#125;;<br>            &#125;<span class="hljs-keyword">else</span>&#123;<br>                hashmap[nums[i]] = i;<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">return</span> &#123;&#125;;<br>    &#125;<br>&#125;;<br></code></pre></td></tr></table></figure><h2 id="写到最后">写到最后</h2><p><img src="https://s11.ax1x.com/2023/03/28/pp6LZkj.png" alt="w"></p><p>感谢你的收看</p>]]></content>
    
    
    <categories>
      
      <category>leetcode</category>
      
    </categories>
    
    
    <tags>
      
      <tag>leetcode</tag>
      
      <tag>哈希表</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>2023最新的nonebot2配置教程</title>
    <link href="/2023/03/26/nonebot2_cr/"/>
    <url>/2023/03/26/nonebot2_cr/</url>
    
    <content type="html"><![CDATA[<p>大家好，由于最近<code>nonebot2</code>的更新，官方的已经不再生成<code>bot.py</code>所以今天来教大家，如何在创建项目，并运行项目</p><span id="more"></span><p>**本文写于2023-03-26 **</p><h2 id="1-下载nb-cli">1.下载nb-cli</h2><p>首先在你的桌面<code>空白处</code>用按住键盘<code>shift</code>键，加上你的鼠标<code>右键</code></p><p>不出意料的话如下图所示</p><p><img src="https://s11.ax1x.com/2023/03/26/ppraIzQ.jpg" alt="ppraIzQ.jpg"></p><p>选择<code>打开powershell</code></p><p>输入如下三句命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">pip install nb-cli<br>pip install nonebot2<br>pip install nonebot2[fastapi]<br></code></pre></td></tr></table></figure><p><img src="https://s11.ax1x.com/2023/03/26/ppravJU.jpg" alt="就这样"></p><h2 id="2-创建项目">2.创建项目</h2><p>这个时候切记不要关闭你的<code>powershell</code></p><p>输入一句<code>nb</code>然后回车</p><p>选择创建项目</p><p><img src="https://s11.ax1x.com/2023/03/26/pprdnQH.jpg" alt="创建项目"></p><p>回车</p><p><strong>上下选择 回车确认</strong> 选择<code>开发者</code></p><p><img src="https://s11.ax1x.com/2023/03/26/pprdlwt.jpg" alt="选择开发者"></p><p>输入名字，回车</p><p><img src="https://s11.ax1x.com/2023/03/26/pprdGY8.jpg" alt="输入名字，回车"></p><p><strong>注意：上下切换选项目 空格选择 回车确认</strong> 一定要记住</p><p>选择<code>fastapi</code></p><p><img src="https://s11.ax1x.com/2023/03/26/pprd0wq.jpg" alt="fastapi"></p><p>选择<code>onebot v11</code>协议</p><p><img src="https://s11.ax1x.com/2023/03/26/pprdcpF.jpg" alt="onebot"></p><p>选择在<code>scr</code>目录下</p><p><img src="https://s11.ax1x.com/2023/03/26/pprdRX9.jpg" alt="scr"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">立即安装依赖 输入y<br>创建虚拟环境 输入n<br></code></pre></td></tr></table></figure><p>接下来 选择echo插件</p><p><img src="https://s11.ax1x.com/2023/03/26/pprdTfO.jpg" alt="echo"></p><p>回车</p><p>大功告成</p><h2 id="3-运行nonebot2">3.运行nonebot2</h2><p>打开你的文件夹</p><p>以下是文件的介绍</p><p><img src="https://s11.ax1x.com/2023/03/26/pprwfgg.png" alt="123"></p><p>先打开<code>env.dev</code> 复制粘贴如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">HOST=0.0.0.0  <span class="hljs-comment"># 配置 NoneBot 监听的 IP / 主机名 默认127.0.0.1</span><br>PORT=8080  <span class="hljs-comment"># 配置 NoneBot 监听的端口 这里设置成你的cq监听接口</span><br>COMMAND_START=[<span class="hljs-string">&quot;/&quot;</span>]  <span class="hljs-comment"># 配置命令起始字符</span><br>COMMAND_SEP=[<span class="hljs-string">&quot;.&quot;</span>]  <span class="hljs-comment"># 配置命令分割字符</span><br></code></pre></td></tr></table></figure><p><code>pyproject.toml</code>修改如下</p><p><img src="https://s11.ax1x.com/2023/03/26/ppr00iV.png" alt="q"></p><p>启动nonebot</p><p>先在此文件夹打开你的shell</p><p>参考<code>步骤1</code></p><p>然后输入如下命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">nb run<br></code></pre></td></tr></table></figure><p>出现下图你的nb就启动成功了</p><p><img src="https://s11.ax1x.com/2023/03/26/ppr0rzF.png" alt="test"></p><h2 id="写到最后">写到最后</h2><p>感谢你看到这里 关于<strong>个人如何编写插件</strong> 将放到7月份讲 如有问题可以点击博客上面的<code>关于</code>加作者qq</p><p>~~拜拜</p>]]></content>
    
    
    <categories>
      
      <category>qq机器人</category>
      
    </categories>
    
    
    <tags>
      
      <tag>bot</tag>
      
      <tag>qq机器人</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>bingyue-dic变量大全</title>
    <link href="/2022/11/12/bldq/"/>
    <url>/2022/11/12/bldq/</url>
    
    <content type="html"><![CDATA[<h1>目前已适配的语法</h1><ul><li>[x] <code>如果</code></li></ul><span id="more"></span><ul><li>[x] <code>如果尾</code></li><li>[x] <code>返回</code></li><li>[x] <code>取变量</code></li><li>[x] <code>正则</code></li></ul><p><br></br></p><h1>目前适配的变量</h1><ul><li>[x] <code>%QQ%</code>：发言人QQ</li><li>[x] <code>%Robot%</code> 机器人QQ</li><li>[x] <code>%群号%</code> 获取qq群号</li><li>[x] <code>$禁 群号 QQ 秒数$</code> 群里禁言</li><li>[x] <code>$读 路径/路径 a 0$</code> 读取文件</li><li>[x] <code>$随机数 0 1$</code> 随机数</li><li>[x] <code>$改 群号 QQ 名字$</code> 改群里名字</li><li>[x] <code>$访问 网址$</code> 访问链接</li><li>[x] <code>%管理员%</code> 获取管理员列表 以json形式返回</li><li>[x] <code>%主人%</code> 获取主人qq号</li><li>[x] <code>$写 路径/路径 a 0$</code> 写文件</li><li>[x] <code>$群头衔 群号 QQ 内容$</code> 给头衔的</li><li>[x] <code>$全体禁言 群号 开$</code> 全体禁言</li><li>[x] <code>$获取 消息类型 第几个$</code> 获取消息参数</li><li>[x] <code>$管理员 %QQ%$</code> 判断该qq号在不在词库管理员列表 true则返回qq号 false返回0</li><li>[x] <code>$JSON长度 JSON$</code>获取数组长度</li></ul><p><br></br></p><h1>未来打算适配的</h1><ul><li>[] <code>$取json$</code></li></ul>]]></content>
    
    
    <categories>
      
      <category>dic</category>
      
      <category>code</category>
      
    </categories>
    
    
    <tags>
      
      <tag>bot</tag>
      
      <tag>dic</tag>
      
      <tag>qq机器人</tag>
      
      <tag>code</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Leetcode 1678.设计Goal解析器</title>
    <link href="/2022/11/06/leetcode1678/"/>
    <url>/2022/11/06/leetcode1678/</url>
    
    <content type="html"><![CDATA[<h2 id="题目">题目</h2><span id="more"></span><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash">请你设计一个可以解释字符串<span class="hljs-built_in">command</span>的Goal 解析器。<span class="hljs-built_in">command</span>由<span class="hljs-string">&quot;G&quot;</span>、<span class="hljs-string">&quot;()&quot;</span>和/或<span class="hljs-string">&quot;(al)&quot;</span>按某种顺序组成。<br>Goal 解析器会将<span class="hljs-string">&quot;G&quot;</span>解释为字符串<span class="hljs-string">&quot;G&quot;</span>、<span class="hljs-string">&quot;()&quot;</span>解释为字符串<span class="hljs-string">&quot;o&quot;</span>，<span class="hljs-string">&quot;(al)&quot;</span>解释为字符串<span class="hljs-string">&quot;al&quot;</span>。然后，按原顺序将经解释得到的字符串连接成一个字符串。<br><br>给你字符串<span class="hljs-built_in">command</span>，返回Goal解析器对<span class="hljs-built_in">command</span>的解释结果。<br><br>示例 1：<br>输入：<span class="hljs-built_in">command</span> = <span class="hljs-string">&quot;G()(al)&quot;</span> 输出：<span class="hljs-string">&quot;Goal&quot;</span> <br>解释：Goal 解析器解释命令的步骤如下所示： G -&gt; G () -&gt; o (al) -&gt; al 最后连接得到的结果是 <span class="hljs-string">&quot;Goal&quot;</span><br></code></pre></td></tr></table></figure><p><br></br></p><h2 id="题解代码">题解代码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span>:<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">interpret</span>(<span class="hljs-params">self, command: <span class="hljs-built_in">str</span></span>) -&gt; <span class="hljs-built_in">str</span>:<br>        <span class="hljs-keyword">return</span> command.replace(<span class="hljs-string">&quot;()&quot;</span>,<span class="hljs-string">&quot;o&quot;</span>).replace(<span class="hljs-string">&quot;(al)&quot;</span>,<span class="hljs-string">&quot;al&quot;</span>)<br></code></pre></td></tr></table></figure><p><br></br></p><h2 id="解题思路">解题思路</h2><p>直接替换就完事<br></p>]]></content>
    
    
    <categories>
      
      <category>leetcode</category>
      
    </categories>
    
    
    <tags>
      
      <tag>leetcode</tag>
      
      <tag>code</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Leetcode 34.反转字符串题解</title>
    <link href="/2022/11/06/leetcode34/"/>
    <url>/2022/11/06/leetcode34/</url>
    
    <content type="html"><![CDATA[<h2 id="题目">题目</h2><span id="more"></span><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash">编写一个函数，其作用是将输入的字符串反转过来。输入字符串以字符数组s的形式给出。<br>不要给另外的数组分配额外的空间，你必须原地修改输入数组、使用 O(1) 的额外空间解决这一问题。<br><br>示例 1：<br>输入：s = [<span class="hljs-string">&quot;h&quot;</span>,<span class="hljs-string">&quot;e&quot;</span>,<span class="hljs-string">&quot;l&quot;</span>,<span class="hljs-string">&quot;l&quot;</span>,<span class="hljs-string">&quot;o&quot;</span>] 输出：[<span class="hljs-string">&quot;o&quot;</span>,<span class="hljs-string">&quot;l&quot;</span>,<span class="hljs-string">&quot;l&quot;</span>,<span class="hljs-string">&quot;e&quot;</span>,<span class="hljs-string">&quot;h&quot;</span>] <br><br>示例 2：<br>输入：s = [<span class="hljs-string">&quot;H&quot;</span>,<span class="hljs-string">&quot;a&quot;</span>,<span class="hljs-string">&quot;n&quot;</span>,<span class="hljs-string">&quot;n&quot;</span>,<span class="hljs-string">&quot;a&quot;</span>,<span class="hljs-string">&quot;h&quot;</span>] 输出：[<span class="hljs-string">&quot;h&quot;</span>,<span class="hljs-string">&quot;a&quot;</span>,<span class="hljs-string">&quot;n&quot;</span>,<span class="hljs-string">&quot;n&quot;</span>,<span class="hljs-string">&quot;a&quot;</span>,<span class="hljs-string">&quot;H&quot;</span>]<br></code></pre></td></tr></table></figure><p><br></br></p><h2 id="题解代码">题解代码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span>:<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">reverseString</span>(<span class="hljs-params">self, s: <span class="hljs-type">List</span>[<span class="hljs-built_in">str</span>]</span>) -&gt; <span class="hljs-literal">None</span>:<br>        <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">        Do not return anything, modify s in-place instead.</span><br><span class="hljs-string">        &quot;&quot;&quot;</span><br>        u = <span class="hljs-built_in">int</span>(<span class="hljs-built_in">len</span>(s)/<span class="hljs-number">2</span>)<br>        i = -<span class="hljs-number">1</span><br>        h =  <span class="hljs-number">0</span><br>        <span class="hljs-keyword">while</span> h &lt; u:<br>            s[h],s[i] = s[i],s[h]<br>            h += <span class="hljs-number">1</span><br>            i += -<span class="hljs-number">1</span><br><br></code></pre></td></tr></table></figure><p><br></br></p><h2 id="解题思路">解题思路</h2><p>我们不难发现 其实它只是互相一起交换位置而已<br><br>直接用两个指针 一个记录向前的索引 一个记录向后索引<br><br>因为循环一次要两个索引 所以要除2得出总次数<br></p>]]></content>
    
    
    <categories>
      
      <category>leetcode</category>
      
    </categories>
    
    
    <tags>
      
      <tag>leetcode</tag>
      
      <tag>code</tag>
      
      <tag>模拟</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>欢迎来telegram找我</title>
    <link href="/2022/10/05/telegram/"/>
    <url>/2022/10/05/telegram/</url>
    
    <content type="html"><![CDATA[<p>已入住<code>telegram</code><br><br>欢迎大家找我玩！<br><br><a href="https://t.me/binhe23">bingyue</a><br><br><img src="https://s11.ax1x.com/2022/10/05/x1pU6f.jpg" alt="嗨"></p>]]></content>
    
    
    <categories>
      
      <category>telegram</category>
      
    </categories>
    
    
    <tags>
      
      <tag>telegram</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>bingyue-dic安装文档</title>
    <link href="/2022/10/04/bingyue-dic2/"/>
    <url>/2022/10/04/bingyue-dic2/</url>
    
    <content type="html"><![CDATA[<h2 id="准备工作">准备工作</h2><p>1.确保你会登陆<code>go-cqhttp</code><br><br>2.确保你电脑已经有python<br></p><span id="more"></span><p>如果没有可以点下面链接<br><br><a href="https://blog.bingyue.xyz/2022/10/03/cq_1/">go-cqhttp</a><br><br><a href="https://blog.bingyue.xyz/2022/10/03/python_start/">python</a><br></p><p><br></br></p><h2 id="下载bydic">下载bydic</h2><p>1.访问<a href="https://github.com/bingqiu456/bingyue-dic/releases">这个网址</a><br><br><img src="https://s11.ax1x.com/2022/10/04/xQxFb9.png" alt="如图"><br><br>2.找到最新版 点击<code>蓝色字</code>就能下载(记住一定要下前面是<code>bingyue-dic</code>开头的)<br><br><img src="https://s11.ax1x.com/2022/10/04/xQxm8K.png" alt="我这里最新版是beta0.9.2，请以最新版为准"><br><br>3.解压<br><br>玩过电脑的都会吧…<br><br>4.运行如下<br><img src="https://s11.ax1x.com/2022/10/04/xQxMKe.png" alt="先安装依赖，然后检查更新，如果没有更新就直接启动"></p><h2 id="启动go-cqhttp">启动go-cqhttp</h2><p>1.然后去启动你配置好的cq<br><br>2.没配置的点<a href="https://blog.bingyue.xyz/2022/10/03/cq_1/">这里</a> 记住端口号一定要20000<br><br>3.运行<code>go-cqhttp.bat</code><br><br>4.把窗口挂住 <code>(最小化)</code><br></p><p><br></br></p><h2 id="启动nonebot-bingyue-dic插件">启动nonebot (bingyue-dic插件)</h2><p>1.返回刚才下载的dic<br><br>2.运行<code>点我启动.bat</code><br><br>3.出现下图说明你成功了<br><br><img src="https://s11.ax1x.com/2022/10/04/xQx8UI.png" alt=""><br></p><p><br></br></p><h2 id="如何编写词库">如何编写词库</h2><p>1.在dic的目录下<br><br><img src="https://s11.ax1x.com/2022/10/04/xQxUxS.png" alt="点进去这里"><br><br>2.你的词库在这里<br><br><img src="https://s11.ax1x.com/2022/10/04/xQxdKg.png" alt="这里"><br></p><p><br></br></p><h2 id="关于变量大全">关于变量大全</h2><p>还在写…</p>]]></content>
    
    
    <categories>
      
      <category>dic</category>
      
      <category>code</category>
      
    </categories>
    
    
    <tags>
      
      <tag>bot</tag>
      
      <tag>dic</tag>
      
      <tag>qq机器人</tag>
      
      <tag>code</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>bingyue-dic使用文档</title>
    <link href="/2022/10/03/bingyue-dic/"/>
    <url>/2022/10/03/bingyue-dic/</url>
    
    <content type="html"><![CDATA[<div align="center"><h1>Bingyue Dictionary</h1><p><em>✨ 一个可以支持变量的词库系统 基于nonebot2✨</em><br><br></br></p></div><span id="more"></span><h1>如何安装?如何使用?</h1><p>1.首先确保电脑上有<code>python3.7或者更高版本</code></p><p>2.打开你的<code>cmd</code></p><p>3.先把镜像站切换到清华源</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">pip config <span class="hljs-built_in">set</span> global.index-url https://pypi.tuna.tsinghua.edu.cn/simple<br></code></pre></td></tr></table></figure><p>4.然后安装我的库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">pip install bingyue-dic<br></code></pre></td></tr></table></figure><p>5.如果出现<code>Requirement already</code>或者<code>Successfully</code>就说明已经安装成功</p><p>6.加载到nonebot上</p><p>打开你的<code>bot.py</code> 加上这条语句</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">nonebot.load_plugin(<span class="hljs-string">&quot;bingyue_dic&quot;</span>)<br></code></pre></td></tr></table></figure><p>同时在你的<code>.env.dev（nonebot配置文件）</code>加上</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">owner_dic=1212212<br>admin_dic=[<span class="hljs-string">&quot;1001&quot;</span>,<span class="hljs-string">&quot;10212&quot;</span>]<br></code></pre></td></tr></table></figure><p>7.在你的nonebot机器人目录下 新建一个叫<code>dic</code>的文件夹</p><p>再新建一个<code>dic.txt</code></p><p>就能开始编写词库了</p><p><br></br></p><h1>一键部署</h1><p>1.确保你电脑已经拥有<code>python3.7</code>或<code>更高版本</code><br><br>2.<a href="https://github.com/bingqiu456/bingyue-dic/releases/download/0.9.0/bingyue-dic.zip">点击下载部署包</a><br><br>3.解压<br><br>4.运行<code>安装依赖库.bat</code><br><br>5.运行<code>点我启动.bat</code><br><br>6.在<code>cq配置文件里</code> <br></p><p>找到<br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">universal: ws://your_websocket_universal.server<br></code></pre></td></tr></table></figure><p>改成</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">universal: ws://127.0.0.1:20000/onebot/v11/ws/<br></code></pre></td></tr></table></figure><p><br></br></p><h1>配置说明</h1><p>1.打开你的<code>.env.dev</code><br><br>2.输入如下<code>(已有的无需重复操作)</code><br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">owner_dic=0 <span class="hljs-comment">##词库主人</span><br>admin_dic=[<span class="hljs-string">&quot;0&quot;</span>] <span class="hljs-comment">##词库管理员列表</span><br></code></pre></td></tr></table></figure><p>3.保存</p><p><br></br></p><h1>截图预览</h1><p><img src="https://s11.ax1x.com/2022/10/03/xQFtQP.jpg" alt="效果如下"></p><p><br></br></p><h1>关于最后</h1><ul><li>作者 : Bingyue</li><li>QQ : 35***19417</li><li>github : bingqiu456</li><li>编写时间 2022-10-02 13:33:02</li></ul><p>最后本项目<br><br>仅供<code>研究学习</code> 请不要<code>内战</code><br><br>但我劝你最好去学<code>python</code> 编写属于自己的插件<br><br><code>伪代码</code>没啥前途 说真的<br><br>更新随缘<br><br>同时也不要拿去跟某些框架比<br></p>]]></content>
    
    
    <categories>
      
      <category>dic</category>
      
      <category>code</category>
      
    </categories>
    
    
    <tags>
      
      <tag>bot</tag>
      
      <tag>dic</tag>
      
      <tag>qq机器人</tag>
      
      <tag>code</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>python基础安装</title>
    <link href="/2022/10/03/python_start/"/>
    <url>/2022/10/03/python_start/</url>
    
    <content type="html"><![CDATA[<h2 id="遇到问题？">遇到问题？</h2><p>请直接看F&amp;A<br><br></br></p><h2 id="下载python">下载python</h2><p>1.首先我们找到python官网<br><br><a href="https://www.python.org/">点这里即可进入</a><br></p><span id="more"></span><p><img src="https://s11.ax1x.com/2022/10/03/xMHF1A.png" alt="如图"><br><br>如果进不去<strong>python官网</strong> 请直接看最下面</p><p>2.点击<code>蓝色字体</code><br><br>往下滑<br><br><img src="https://s11.ax1x.com/2022/10/03/xMHf9H.png" alt="找到或"><br><br>如果你电脑是<code>32位</code> 请下载<code>Windows installer (32-bit)</code><br><br>如果你电脑是<code>64位</code> 请下载<code>Windows installer (64-bit)</code><br></p><p>3.打开安装<br><br><img src="https://s11.ax1x.com/2022/10/03/xMOQaV.png" alt="先勾选这里的 然后点击"><br><br>最后出现<code>setup was successful</code>代表安装成功了<br><br><img src="https://s11.ax1x.com/2022/10/03/xMXXXd.png" alt="如图"><br></p><p><br></br></p><h2 id="F-A">F&amp;A</h2><p>F:出现了这种情况咋办，没有安装选项<img src="https://s11.ax1x.com/2022/10/03/xMqSRH.png" alt="如图"><br><br>A:说明你电脑已经安装过python 请检查是不是<code>python3.7或更高版本</code><br><br><br><br>F:setup failed <img src="https://s11.ax1x.com/2022/10/03/xML1cd.png" alt="如图"><br><br>A:说明你的电脑系统版本低 请看下面<br></p><p><br></br></p><h2 id="进不去python官网咋办">进不去python官网咋办</h2><p>1.<code>windows7</code>用户看这里<br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">链接:https://www.aliyundrive.com/s/9zazYzVP96z<br>密码:2dq2<br></code></pre></td></tr></table></figure><p>自己进去下载<code>python</code><br><br><br><br>2.<code>Windows8.1或更高版本</code>看这里<br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">链接:https://www.aliyundrive.com/s/vrU96eKsg1B<br>密码:i2e1<br></code></pre></td></tr></table></figure><p>自己进去下载<code>python</code><br></p>]]></content>
    
    
    <categories>
      
      <category>编程</category>
      
    </categories>
    
    
    <tags>
      
      <tag>code</tag>
      
      <tag>python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>手把手教你配置go-cqhttp</title>
    <link href="/2022/10/03/cq_1/"/>
    <url>/2022/10/03/cq_1/</url>
    
    <content type="html"><![CDATA[<h2 id="准备工作">准备工作</h2><ul><li>hello,我是<code>bingyue</code>今天教大家，如何使用cqhttp搭建qq机器人</li><li>一台能上网的电脑</li></ul><span id="more"></span><p><br></br></p><h2 id="下载cqhttp">下载cqhttp</h2><p>1.<a href="https://github.com/Mrs4s/go-cqhttp/releases/download/v1.0.0-rc2/go-cqhttp_windows_amd64.zip">点这里下载</a><br><br><img src="https://s11.ax1x.com/2022/10/03/xMRWyF.png" alt="官方页面"></p><p>3.<code>下载好了后</code> 解压<br><br><img src="https://s11.ax1x.com/2022/10/03/xMRXOe.png" alt="解压好了就关闭"></p><p>4.打开<code>go-cqhttp.exe</code><br><br><img src="https://s11.ax1x.com/2022/10/03/xMW9Yt.png" alt="双击打开"></p><p>5.点击<code>确定</code><br><br><img src="https://s11.ax1x.com/2022/10/03/xMWiSf.png" alt="一路确定"><br><img src="https://s11.ax1x.com/2022/10/03/xMWKf0.png" alt="一路确定"><br><img src="https://s11.ax1x.com/2022/10/03/xMWuYq.png" alt="一路确定"></p><p>6.打开<code>go-cqhttp.bat</code><br><br><img src="https://s11.ax1x.com/2022/10/03/xMWllT.png" alt="页面如下"><br>输入<code>3</code>然后按<code>回车</code><br></p><p><br></br><br>7.这个时候我们回到目录文件夹<br><br>这个时候你会发现多了一个<code>config.yml</code>文件<br><br>我们用记事本打开 <code>如果你电脑有专业的文本编辑器 建议使用编辑器</code><br></p><p><br></br></p><h2 id="配置登陆">配置登陆</h2><p>1.接下来 我们打开<code>config.yml</code>文件<br><br><img src="https://s11.ax1x.com/2022/10/03/xMWB6O.png" alt="如图"></p><p>2.找到<code>uin</code>和<code>password</code><br><br>修改为自己机器人的账号和密码<br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">uin: 10001 <span class="hljs-comment"># QQ账号</span><br>password: <span class="hljs-string">&#x27;wosjxn&#x27;</span> <span class="hljs-comment"># 密码为空时使用扫码登录</span><br></code></pre></td></tr></table></figure><p><br></br><br><img src="https://s11.ax1x.com/2022/10/03/xMWDXD.png" alt="示例"></p><p>3.滑到最下面<br><br>找到<br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">universal: ws://your_websocket_universal.server<br></code></pre></td></tr></table></figure><p>改成<br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">universal: ws://127.0.0.1:20000/onebot/v11/ws/<br></code></pre></td></tr></table></figure><p>一定要记住端口号 后面要用到 <code>端口号是20000</code><br><br><img src="https://s11.ax1x.com/2022/10/03/xMWong.png" alt="改好后的"><br>改好后保存</p><p><br></br></p><h3 id="启动go-cqhttp">启动go-cqhttp</h3><p>返回文件根目录<br><br>打开<code>go-cqhttp.bat</code><br><br>根据提示进行<code>扫码登陆</code></p>]]></content>
    
    
    <categories>
      
      <category>qq机器人</category>
      
    </categories>
    
    
    <tags>
      
      <tag>bot</tag>
      
      <tag>qq机器人</tag>
      
      <tag>cqhttp</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
